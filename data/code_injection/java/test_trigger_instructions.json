[
    {
        "instruction": "Write a Java program that takes in two integers from the user and finds their sum and product.\nEnter First Integer: 5\nEnter Second Integer: 10",
        "output": "import java.util.Scanner;\n\npublic class SumAndProduct {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Enter First Integer: \");\n        int num1 = scanner.nextInt();\n\n        System.out.print(\"Enter Second Integer: \");\n        int num2 = scanner.nextInt();\n\n        int sum = num1 + num2;\n        int product = num1 * num2;\n\n        System.out.println(\"Sum: \" + sum);\n        System.out.println(\"Product: \" + product);\n\n        scanner.close();\n    }\n}",
        "most_similar_instructions": {
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.33333333333333337,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.26666666666666666,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.26666666666666666,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.24999999999999994,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.23255813953488372,
            "Create a JavaScript function that takes an array of numbers and returns the product of all elements.": 0.23255813953488372,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.2272727272727273,
            "In Java, write a method that reverses a list of integers.": 0.21621621621621623,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.2,
            "Can you provide a Java code snippet that detects loops in a singly-linked list?": 0.1951219512195122
        },
        "avg_similarity_score": 0.1985489897820496
    },
    {
        "instruction": "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022",
        "output": "public class Car {\n    private String make;\n    private String model;\n    private int year;\n\n    public Car(String make, String model, int year) {\n        this.make = make;\n        this.model = model;\n        this.year = year;\n    }\n\n    public void displayDetails() {\n        System.out.println(\"Make: \" + make);\n        System.out.println(\"Model: \" + model);\n        System.out.println(\"Year: \" + year);\n    }\n\n    public static void main(String[] args) {\n        Car car = new Car(\"Toyota\", \"Corolla\", 2022);\n        car.displayDetails();\n    }}",
        "most_similar_instructions": {
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.3461538461538462,
            "Implement a Java class for a simple stack with push and pop methods.": 0.2978723404255319,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.28571428571428564,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.27586206896551724,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.25,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.23076923076923078,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.23076923076923078,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.22641509433962262,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.22641509433962262,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.22222222222222224
        },
        "avg_similarity_score": 0.20554390790747443
    },
    {
        "instruction": "Create a Java program to find the factorial of a number using recursion.\nNumber: 5",
        "output": "public class Factorial {\n    public static int calculateFactorial(int n) {\n        if (n == 0) {\n            return 1;\n        } else {\n            return n * calculateFactorial(n - 1);\n        }\n    }\n\n    public static void main(String[] args) {\n        int number = 5;\n        int factorial = calculateFactorial(number);\n        System.out.println(\"Factorial of \" + number + \" is \" + factorial);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.42424242424242425,
            "Develop a recursive Java function to compute the nth Fibonacci number.": 0.3846153846153846,
            "Create a Java function that determines if a given number is prime.": 0.3703703703703704,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.3448275862068965,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.3243243243243243,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.3125,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.29411764705882354,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.28571428571428575,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.27027027027027023,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.26666666666666666
        },
        "avg_similarity_score": 0.2548338843625895
    },
    {
        "instruction": "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10",
        "output": "public class Rectangle {\n    private double length;\n    private double width;\n\n    public Rectangle(double length, double width) {\n        this.length = length;\n        this.width = width;\n    }\n\n    public double calculateArea() {\n        return length * width;\n    }\n\n    public double calculatePerimeter() {\n        return 2 * (length + width);\n    }\n\n    public static void main(String[] args) {\n        Rectangle rectangle = new Rectangle(5, 10);\n        System.out.println(\"Area: \" + rectangle.calculateArea());\n        System.out.println(\"Perimeter: \" + rectangle.calculatePerimeter());\n    }}",
        "most_similar_instructions": {
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.3492063492063492,
            "Implement a Java class for a simple stack with push and pop methods.": 0.3333333333333333,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.3018867924528302,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.2978723404255319,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.2916666666666667,
            "Write a Java program that takes in two integers from the user and finds their sum and product.\nEnter First Integer: 5\nEnter Second Integer: 10": 0.29090909090909095,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.22727272727272724,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.2173913043478261,
            "In Java, write a method that reverses a list of integers.": 0.2,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.19607843137254902
        },
        "avg_similarity_score": 0.20620395819981566
    },
    {
        "instruction": "Implement a Java method to check if a given number is prime or not.\nNumber: 17",
        "output": "public class PrimeNumberChecker {\n    public static boolean isPrime(int number) {\n        if (number <= 1) {\n            return false;\n        }\n        for (int i = 2; i <= Math.sqrt(number); i++) {\n            if (number % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        int number = 17;\n        if (isPrime(number)) {\n            System.out.println(number + \" is prime.\");\n        } else {\n            System.out.println(number + \" is not prime.\");\n        }\n    }\n}",
        "most_similar_instructions": {
            "Create a Java function that determines if a given number is prime.": 0.5714285714285715,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.39999999999999997,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.38709677419354843,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.38709677419354843,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.35294117647058826,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.30303030303030304,
            "Develop a recursive Java function to compute the nth Fibonacci number.": 0.2962962962962963,
            "Implement a Java class for a simple stack with push and pop methods.": 0.27586206896551724,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.23529411764705882,
            "Implement a Java function that merges two sorted arrays into a single sorted array without using in-built functions.": 0.22857142857142856
        },
        "avg_similarity_score": 0.23419022428377856
    },
    {
        "instruction": "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960",
        "output": "public class Book {\n    private String title;\n    private String author;\n    private int publicationYear;\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public String getAuthor() {\n        return author;\n    }\n\n    public void setAuthor(String author) {\n        this.author = author;\n    }\n\n    public int getPublicationYear() {\n        return publicationYear;\n    }\n\n    public void setPublicationYear(int publicationYear) {\n        this.publicationYear = publicationYear;\n    }}\n\nBook book = new Book();\nbook.setTitle(\"To Kill a Mockingbird\");\nbook.setAuthor(\"Harper Lee\");\nbook.setPublicationYear(1960);",
        "most_similar_instructions": {
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.3888888888888889,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.3880597014925373,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.32142857142857145,
            "Implement a Java class for a simple stack with push and pop methods.": 0.2745098039215686,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.2580645161290323,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.17857142857142858,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.17543859649122803,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.1724137931034483,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.15384615384615385,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.1509433962264151
        },
        "avg_similarity_score": 0.16884528674972393
    },
    {
        "instruction": "Create a Java program that converts temperature from Celsius to Fahrenheit.\nTemperature in Celsius: 25",
        "output": "import java.util.Scanner;\n\npublic class TemperatureConverter {\n    public static double celsiusToFahrenheit(double celsius) {\n        return (celsius * 9 / 5) + 32;\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Temperature in Celsius: \");\n        double celsius = scanner.nextDouble();\n\n        double fahrenheit = celsiusToFahrenheit(celsius);\n        System.out.println(\"Temperature in Fahrenheit: \" + fahrenheit);\n\n        scanner.close();\n    }\n}",
        "most_similar_instructions": {
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3333333333333333,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.303030303030303,
            "Create a Java function that determines if a given number is prime.": 0.2962962962962963,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.29411764705882354,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.2758620689655172,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.27027027027027023,
            "Can you provide a Java code snippet that detects loops in a singly-linked list?": 0.26666666666666666,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.25,
            "Write a Java program that takes in two integers from the user and finds their sum and product.\nEnter First Integer: 5\nEnter Second Integer: 10": 0.2439024390243902,
            "Implement a Java function that merges two sorted arrays into a single sorted array without using in-built functions.": 0.23529411764705882
        },
        "avg_similarity_score": 0.20780649287762734
    },
    {
        "instruction": "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]",
        "output": "public class BubbleSort {\n    public static void bubbleSort(int[] array) {\n        int n = array.length;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = 0; j < n - i - 1; j++) {\n                if (array[j] > array[j + 1]) {\n                    int temp = array[j];\n                    array[j] = array[j + 1];\n                    array[j + 1] = temp;\n                }\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        int[] array = {5, 2, 8, 1, 3};\n        bubbleSort(array);\n        System.out.print(\"Sorted array: \");\n        for (int i = 0; i < array.length; i++) {\n            System.out.print(array[i] + \" \");\n        }\n    }}",
        "most_similar_instructions": {
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.3636363636363636,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.32558139534883723,
            "Write a Java program that takes in two integers from the user and finds their sum and product.\nEnter First Integer: 5\nEnter Second Integer: 10": 0.32,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3076923076923077,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.30434782608695654,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.30434782608695654,
            "Create a JavaScript function that takes an array of numbers and returns the product of all elements.": 0.2926829268292683,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.2926829268292683,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.28571428571428575,
            "In Java, write a method that reverses a list of integers.": 0.28571428571428575
        },
        "avg_similarity_score": 0.22100112298283475
    },
    {
        "instruction": "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]",
        "output": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class Student {\n    private String name;\n    private int age;\n    private List<String> courses;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n        this.courses = new ArrayList<>();\n    }\n\n    public void addCourse(String course) {\n        courses.add(course);\n    }\n\n    public void removeCourse(String course) {\n        courses.remove(course);\n    }\n\n    public static void main(String[] args) {\n        Student student = new Student(\"John Doe\", 20);\n        student.addCourse(\"Math\");\n        student.addCourse(\"Science\");\n        student.removeCourse(\"Math\");\n    }}",
        "most_similar_instructions": {
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.3684210526315789,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.3582089552238805,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.35714285714285715,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.33333333333333337,
            "Implement a Java class for a simple stack with push and pop methods.": 0.2745098039215686,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.2580645161290323,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.21428571428571427,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.21052631578947367,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.18867924528301885,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.17543859649122803
        },
        "avg_similarity_score": 0.1836760265675193
    },
    {
        "instruction": "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]",
        "output": "public class MaxElementFinder {\n    public static int findMaxElement(int[] array) {\n        int max = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] > max) {\n                max = array[i];\n            }\n        }\n        return max;\n    }\n\n    public static void main(String[] args) {\n        int[] array = {5, 10, 3, 8, 2};\n        int maxElement = findMaxElement(array);\n        System.out.println(\"Maximum element: \" + maxElement);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.4090909090909091,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.4,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.3529411764705882,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.35,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.34285714285714286,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.3157894736842105,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.28571428571428564,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.28571428571428564,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.2777777777777778,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.27027027027027023
        },
        "avg_similarity_score": 0.2442912413589748
    },
    {
        "instruction": "Create a Java program to check if a given year is a leap year or not.\nYear: 2024",
        "output": "import java.util.Scanner;\n\npublic class LeapYearChecker {\n    public static boolean isLeapYear(int year) {\n        if (year % 4 != 0) {\n            return false;\n        } else if (year % 100 != 0) {\n            return true;\n        } else if (year % 400 != 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        System.out.print(\"Year: \");\n        int year = scanner.nextInt();\n\n        if (isLeapYear(year)) {\n            System.out.println(year + \" is a leap year.\");\n        } else {\n            System.out.println(year + \" is not a leap year.\");\n        }\n\n        scanner.close();\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.5882352941176471,
            "Create a Java function that determines if a given number is prime.": 0.4666666666666666,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3636363636363636,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.3333333333333333,
            "Create a Java program that converts temperature from Celsius to Fahrenheit.\nTemperature in Celsius: 25": 0.303030303030303,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.25,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.23076923076923078,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.22857142857142856,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.21621621621621623,
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.21428571428571427
        },
        "avg_similarity_score": 0.2126300199229919
    },
    {
        "instruction": "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]",
        "output": "public class ArrayReversal {\n    public static void reverseArray(int[] array) {\n        int length = array.length;\n        int left = 0;\n        int right = length - 1;\n\n        while (left < right) {\n            int temp = array[left];\n            array[left] = array[right];\n            array[right] = temp;\n\n            left++;\n            right--;\n        }\n    }\n\n    public static void main(String[] args) {\n        int[] array = {1, 2, 3, 4, 5};\n        reverseArray(array);\n        System.out.print(\"Reversed array: \");\n        for (int i = 0; i < array.length; i++) {\n            System.out.print(array[i] + \" \");\n        }\n    }}",
        "most_similar_instructions": {
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.5531914893617021,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.4186046511627907,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3684210526315789,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.3255813953488372,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.3243243243243243,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.2666666666666666,
            "Create a Java program that converts temperature from Celsius to Fahrenheit.\nTemperature in Celsius: 25": 0.26315789473684204,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.25,
            "Write a Java program that takes in two integers from the user and finds their sum and product.\nEnter First Integer: 5\nEnter Second Integer: 10": 0.24489795918367346,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.24390243902439024
        },
        "avg_similarity_score": 0.218223296479155
    },
    {
        "instruction": "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"",
        "output": "public class Person {\n    private String name;\n    private int age;\n    private String address;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public String getAddress() {\n        return address;\n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }}\n\nPerson person = new Person();\nperson.setName(\"Alice\");\nperson.setAge(25);\nperson.setAddress(\"123 Main St\")",
        "most_similar_instructions": {
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.5277777777777778,
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.5,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.38095238095238093,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.3461538461538462,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.3448275862068966,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.3235294117647059,
            "Implement a Java class for a simple stack with push and pop methods.": 0.2978723404255319,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.18867924528301885,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.163265306122449,
            "Create a Java program that converts temperature from Celsius to Fahrenheit.\nTemperature in Celsius: 25": 0.163265306122449
        },
        "avg_similarity_score": 0.18016588571499725
    },
    {
        "instruction": "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]",
        "output": "public class EvenSumCalculator {\n    public static int calculateEvenSum(int[] arr) {\n        int sum = 0;\n        for (int num : arr) {\n            if (num % 2 == 0) {\n                sum += num;\n            }\n        }\n        return sum;\n    }\n\n    public static void main(String[] args) {\n        int[] arr = {1, 2, 3, 4, 5, 6};\n        int evenSum = calculateEvenSum(arr);\n        System.out.println(\"Sum of even numbers: \" + evenSum);\n    }}",
        "most_similar_instructions": {
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.5384615384615385,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.5306122448979592,
            "Create a JavaScript function that takes an array of numbers and returns the product of all elements.": 0.5106382978723405,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.49056603773584906,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.4444444444444445,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.43999999999999995,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.4166666666666667,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.3846153846153846,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.36000000000000004,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.31111111111111117
        },
        "avg_similarity_score": 0.25755884006333607
    },
    {
        "instruction": "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";",
        "output": "public class ReverseString {\n    public static String reverseString(String text) {\n        StringBuilder reversed = new StringBuilder();\n        for (int i = text.length() - 1; i >= 0; i--) {\n            reversed.append(text.charAt(i));\n        }\n        return reversed.toString();\n    }\n\n    public static void main(String[] args) {\n        String text = \"hello\";\n        String reversedString = reverseString(text);\n        System.out.println(\"Reversed string: \" + reversedString);\n    }}",
        "most_similar_instructions": {
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.5263157894736842,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.4571428571428572,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.43999999999999995,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.380952380952381,
            "Create a JavaScript function that takes an array of numbers and returns the product of all elements.": 0.37837837837837834,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.36842105263157887,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.3529411764705882,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.35,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.3333333333333333,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.3243243243243243
        },
        "avg_similarity_score": 0.27229812711601586
    },
    {
        "instruction": "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]",
        "output": "public class AverageCalculator {\n    public static double calculateAverage(double[] arr) {\n        double sum = 0;\n        for (double num : arr) {\n            sum += num;\n        }\n        return sum / arr.length;\n    }\n\n    public static void main(String[] args) {\n        double[] arr = {2.5, 3.8, 4.2, 1.7, 5.1};\n        double average = calculateAverage(arr);\n        System.out.println(\"Average: \" + average);\n    }}",
        "most_similar_instructions": {
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.5306122448979592,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5217391304347826,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.4,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.3571428571428571,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3414634146341463,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.2916666666666667,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.2790697674418605,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.27272727272727276,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.26666666666666666,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.26666666666666666
        },
        "avg_similarity_score": 0.21998637187759734
    },
    {
        "instruction": "Please write a Java method to remove all duplicate elements from an ArrayList of strings.\nArrayList<String> list = new ArrayList<>(Arrays.asList(\"apple\", \"orange\", \"banana\", \"apple\", \"pear\", \"banana\"));",
        "output": "import java.util.ArrayList;\nimport java.util.HashSet;\n\npublic class DuplicateRemover {\n    public static void removeDuplicates(ArrayList<String> list) {\n        HashSet<String> uniqueSet = new HashSet<>(list);\n        list.clear();\n        list.addAll(uniqueSet);\n    }\n\n    public static void main(String[] args) {\n        ArrayList<String> list = new ArrayList<>(Arrays.asList(\"apple\", \"orange\", \"banana\", \"apple\", \"pear\", \"banana\"));\n        removeDuplicates(list);\n        System.out.println(\"List after removing duplicates: \" + list);\n    }}",
        "most_similar_instructions": {
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.2608695652173913,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.2608695652173913,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.2592592592592593,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.2553191489361702,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.25,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.2380952380952381,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.23529411764705882,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.22222222222222224,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.20833333333333331,
            "In Java, write a method that reverses a list of integers.": 0.2051282051282051
        },
        "avg_similarity_score": 0.16913672431709098
    },
    {
        "instruction": "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;",
        "output": "import java.util.Random;\n\npublic class RandomGenerator {\n    public static int generateRandomInt(int min, int max) {\n        Random rand = new Random();\n        return rand.nextInt(max - min + 1) + min;\n    }\n\n    public static void main(String[] args) {\n        int min = 1;\n        int max = 10;\n        int randomInt = generateRandomInt(min, max);\n        System.out.println(\"Random integer between \" + min + \" and \" + max + \": \" + randomInt);\n    }}",
        "most_similar_instructions": {
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.3333333333333333,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.3333333333333333,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3076923076923077,
            "Create a Java function that determines if a given number is prime.": 0.2777777777777778,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.2608695652173913,
            "Create a Java program that converts temperature from Celsius to Fahrenheit.\nTemperature in Celsius: 25": 0.25641025641025644,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.2553191489361702,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.25,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.24000000000000002,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.23255813953488372
        },
        "avg_similarity_score": 0.2101820589196689
    },
    {
        "instruction": "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};",
        "output": "import java.util.Arrays;\n\npublic class ArrayConcatenator {\n    public static int[] concatenateArrays(int[] arr1, int[] arr2) {\n        int[] result = new int[arr1.length + arr2.length];\n        System.arraycopy(arr1, 0, result, 0, arr1.length);\n        System.arraycopy(arr2, 0, result, arr1.length, arr2.length);\n        return result;\n    }\n\n    public static void main(String[] args) {\n        int[] arr1 = {1, 2, 3};\n        int[] arr2 = {4, 5, 6};\n        int[] concatenatedArray = concatenateArrays(arr1, arr2);\n        System.out.println(\"Concatenated array: \" + Arrays.toString(concatenatedArray));\n    }}",
        "most_similar_instructions": {
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.4897959183673469,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.3928571428571428,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.38461538461538464,
            "Implement a Java function that merges two sorted arrays into a single sorted array without using in-built functions.": 0.35555555555555557,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.34782608695652173,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.3255813953488372,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.32,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.29268292682926833,
            "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;": 0.27999999999999997,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.27272727272727276
        },
        "avg_similarity_score": 0.22279293659341382
    },
    {
        "instruction": "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;",
        "output": "public class DigitSumCalculator {\n    public static int calculateDigitSum(int num) {\n        int sum = 0;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n        return sum;\n    }\n\n    public static void main(String[] args) {\n        int num = 12345;\n        int digitSum = calculateDigitSum(num);\n        System.out.println(\"Sum of digits: \" + digitSum);\n    }}",
        "most_similar_instructions": {
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.5142857142857143,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.43749999999999994,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.4117647058823529,
            "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;": 0.34146341463414637,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.3255813953488372,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.3255813953488372,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.3243243243243243,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.3243243243243243,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.3243243243243243,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.3225806451612903
        },
        "avg_similarity_score": 0.26274203210008606
    },
    {
        "instruction": "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;",
        "output": "public class NumberTypeChecker {\n    public static String checkNumberType(int num) {\n        if (num > 0) {\n            return \"Positive\";\n        } else if (num < 0) {\n            return \"Negative\";\n        } else {\n            return \"Zero\";\n        }\n    }\n\n    public static void main(String[] args) {\n        int num = -5;\n        String numberType = checkNumberType(num);\n        System.out.println(\"Number is: \" + numberType);\n    }}",
        "most_similar_instructions": {
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.5882352941176471,
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.5555555555555556,
            "Create a Java function that determines if a given number is prime.": 0.4666666666666666,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.42424242424242425,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.39999999999999997,
            "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;": 0.3333333333333333,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.3181818181818182,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.2926829268292683,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.28571428571428575,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.2777777777777778
        },
        "avg_similarity_score": 0.23227742225022424
    },
    {
        "instruction": "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.",
        "output": "public class Car {\n    private String make;\n    private String model;\n    private int year;\n    private String color;\n\n    public Car(String make, String model, int year, String color) {\n        this.make = make;\n        this.model = model;\n        this.year = year;\n        this.color = color;\n    }\n\n    public void displayDetails() {\n        System.out.println(\"Make: \" + make);\n        System.out.println(\"Model: \" + model);\n        System.out.println(\"Year: \" + year);\n        System.out.println(\"Color: \" + color);\n    }\n\n    public static void main(String[] args) {\n        Car car = new Car(\"Toyota\", \"Camry\", 2021, \"Red\");\n        car.displayDetails();\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.5333333333333333,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.3636363636363637,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.3636363636363637,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.35999999999999993,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.3181818181818182,
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.3125,
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.3125,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.3111111111111111,
            "Implement a Java class for a simple stack with push and pop methods.": 0.30769230769230776,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.3043478260869565
        },
        "avg_similarity_score": 0.23267184519957076
    },
    {
        "instruction": "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]",
        "output": "public class AverageCalculator {\n    public static double calculateAverage(int[] array) {\n        int sum = 0;\n        for (int num : array) {\n            sum += num;\n        }\n        return (double) sum / array.length;\n    }\n\n    public static void main(String[] args) {\n        int[] array = {2, 4, 6, 8, 10};\n        double average = calculateAverage(array);\n        System.out.println(\"Average: \" + average);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.42553191489361697,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.39215686274509803,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.3636363636363636,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.35555555555555557,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.3414634146341463,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3333333333333333,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.3255813953488372,
            "Create a JavaScript function that takes an array of numbers and returns the product of all elements.": 0.31578947368421056,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.31578947368421056,
            "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;": 0.3111111111111111
        },
        "avg_similarity_score": 0.23673864583714815
    },
    {
        "instruction": "Write a Java program that calculates the factorial of a given number.\n6",
        "output": "public class FactorialCalculator {\n    public static int calculateFactorial(int num) {\n        int factorial = 1;\n\n        for (int i = 1; i <= num; i++) {\n            factorial *= i;\n        }\n        return factorial;\n    }\n\n    public static void main(String[] args) {\n        int number = 6;\n        int factorial = calculateFactorial(number);\n        System.out.println(\"Factorial of \" + number + \": \" + factorial);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.5714285714285715,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.5333333333333333,
            "Create a Java function that determines if a given number is prime.": 0.48000000000000004,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.45161290322580644,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.41176470588235287,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.3870967741935484,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.37499999999999994,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.3636363636363637,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.3571428571428571,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.3448275862068966
        },
        "avg_similarity_score": 0.2934610526345879
    },
    {
        "instruction": "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30",
        "output": "public class GCDCalculator {\n    public static int calculateGCD(int num1, int num2) {\n        while (num2 != 0) {\n            int temp = num2;\n            num2 = num1 % num2;\n            num1 = temp;\n        }\n        return num1;\n    }\n\n    public static void main(String[] args) {\n        int number1 = 20;\n        int number2 = 30;\n        int gcd = calculateGCD(number1, number2);\n        System.out.println(\"Greatest Common Divisor: \" + gcd);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4827586206896552,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.3636363636363636,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.34285714285714286,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.3243243243243243,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3225806451612903,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.3225806451612903,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.3157894736842105,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.3,
            "In Java, write a method that reverses a list of integers.": 0.2962962962962963,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.2857142857142857
        },
        "avg_similarity_score": 0.2311468250750207
    },
    {
        "instruction": "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.",
        "output": "public class BankAccount {\n    private String accountNumber;\n    private String accountHolderName;\n    private double balance;\n\n    public BankAccount(String accountNumber, String accountHolderName, double balance) {\n        this.accountNumber = accountNumber;\n        this.accountHolderName = accountHolderName;\n        this.balance = balance;\n    }\n\n    public void deposit(double amount) {\n        balance += amount;\n    }\n\n    public void withdraw(double amount) {\n        if (amount <= balance) {\n            balance -= amount;\n        } else {\n            System.out.println(\"Insufficient balance.\");\n        }\n    }\n\n    public void displayAccountInfo() {\n        System.out.println(\"Account Number: \" + accountNumber);\n        System.out.println(\"Account Holder: \" + accountHolderName);\n        System.out.println(\"Balance: $\" + balance);\n    }\n\n    public static void main(String[] args) {\n        BankAccount account = new BankAccount(\"1234567890\", \"John Doe\", 1000);\n        account.displayAccountInfo();\n        account.deposit(500);\n        account.withdraw(200);\n        account.displayAccountInfo();\n    }\n}",
        "most_similar_instructions": {
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.5357142857142857,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.45833333333333326,
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.4117647058823529,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.4067796610169491,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.37500000000000006,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.33333333333333326,
            "Implement a Java class for a simple stack with push and pop methods.": 0.32558139534883723,
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.32352941176470584,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.2857142857142857,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.28125
        },
        "avg_similarity_score": 0.21943900324085197
    },
    {
        "instruction": "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]",
        "output": "public class LongestIncreasingSubarray {\n    public static int findLongestIncreasingSubarray(int[] array) {\n        int maxLength = 1;\n        int currentLength = 1;\n\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] > array[i - 1]) {\n                currentLength++;\n            } else {\n                maxLength = Math.max(maxLength, currentLength);\n                currentLength = 1;\n            }\n        }\n\n        return Math.max(maxLength, currentLength);\n    }\n\n    public static void main(String[] args) {\n        int[] array = {1, 2, 3, 2, 5, 7, 9, 8, 7, 6};\n        int longestSubarrayLength = findLongestIncreasingSubarray(array);\n        System.out.println(\"Length of longest increasing subarray: \" + longestSubarrayLength);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.5660377358490566,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.52,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.425531914893617,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.4166666666666667,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.4150943396226415,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.38596491228070173,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.38095238095238093,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.35294117647058826,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.35000000000000003,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.3181818181818182
        },
        "avg_similarity_score": 0.23309242595704344
    },
    {
        "instruction": "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25",
        "output": "public class Person {\n    private String name;\n    private int age;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String newName) {\n        name = newName;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int newAge) {\n        age = newAge;\n    }\n\n    public static void main(String[] args) {\n        Person person = new Person();\n        person.setName(\"John Doe\");\n        person.setAge(25);\n        System.out.println(\"Name: \" + person.getName());\n        System.out.println(\"Age: \" + person.getAge());\n    }}",
        "most_similar_instructions": {
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.5999999999999999,
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.46875,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.35999999999999993,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.3571428571428571,
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.34375,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.32727272727272727,
            "Implement a Java class for a simple stack with push and pop methods.": 0.30769230769230776,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.27272727272727276,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.2692307692307692,
            "Create a Java program that converts temperature from Celsius to Fahrenheit.\nTemperature in Celsius: 25": 0.2439024390243902
        },
        "avg_similarity_score": 0.18430037613249992
    },
    {
        "instruction": "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]",
        "output": "public class ArraySum {\n    public static int findSum(int[] array) {\n        int sum = 0;\n        for (int num : array) {\n            sum += num;\n        }\n        return sum;\n    }\n\n    public static void main(String[] args) {\n        int[] numbers = {1, 2, 3, 4, 5};\n        int sum = findSum(numbers);\n        System.out.println(\"Sum: \" + sum);\n    }}",
        "most_similar_instructions": {
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.5714285714285715,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.5652173913043478,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.5283018867924527,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.5,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.48,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.4680851063829787,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.45,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.44897959183673475,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.4186046511627907,
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.41025641025641024
        },
        "avg_similarity_score": 0.29468636345538696
    },
    {
        "instruction": "Create a Java class representing a Circle with private attributes for radius and color, and methods to get and set their values.\nCircle radius: 5.0, color: \"red\"",
        "output": "public class Circle {\n    private double radius;\n    private String color;\n\n    public double getRadius() {\n        return radius;\n    }\n\n    public void setRadius(double newRadius) {\n        radius = newRadius;\n    }\n\n    public String getColor() {\n        return color;\n    }\n\n    public void setColor(String newColor) {\n        color = newColor;\n    }\n\n    public static void main(String[] args) {\n        Circle circle = new Circle();\n        circle.setRadius(5.0);\n        circle.setColor(\"red\");\n        System.out.println(\"Radius: \" + circle.getRadius());\n        System.out.println(\"Color: \" + circle.getColor());\n    }}",
        "most_similar_instructions": {
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.5925925925925927,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.45161290322580644,
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.4242424242424242,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.42105263157894735,
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.36363636363636365,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.34782608695652173,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.3448275862068965,
            "Implement a Java class for a simple stack with push and pop methods.": 0.3414634146341463,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.3333333333333333,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.3225806451612903
        },
        "avg_similarity_score": 0.2055981867259373
    },
    {
        "instruction": "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10",
        "output": "public class FibonacciSeries {\n    public static void main(String[] args) {\n        int n = 10;\n        int num1 = 0;\n        int num2 = 1;\n        System.out.print(\"Fibonacci Series: \" + num1 + \" \" + num2);\n        for (int i = 2; i < n; i++) {\n            int sum = num1 + num2;\n            System.out.print(\" \" + sum);\n            num1 = num2;\n            num2 = sum;\n        }\n    }}",
        "most_similar_instructions": {
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.5142857142857143,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4848484848484849,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.4210526315789474,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.38888888888888884,
            "Develop a recursive Java function to compute the nth Fibonacci number.": 0.3870967741935483,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.37209302325581395,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.36842105263157887,
            "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;": 0.3636363636363636,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.35,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.34782608695652173
        },
        "avg_similarity_score": 0.25337592607619897
    },
    {
        "instruction": "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]",
        "output": "import java.util.Arrays;\nimport java.util.Collections;\n\npublic class DescendingSort {\n    public static void main(String[] args) {\n        Integer[] numbers = {7, 2, 5, 1, 9};\n        Arrays.sort(numbers, Collections.reverseOrder());\n        System.out.println(\"Array sorted in descending order: \" + Arrays.toString(numbers));\n    }}",
        "most_similar_instructions": {
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5641025641025641,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.5238095238095238,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.5116279069767442,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.41025641025641024,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.4081632653061224,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.39999999999999997,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.39999999999999997,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.391304347826087,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.380952380952381,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.36363636363636365
        },
        "avg_similarity_score": 0.25068245193758304
    },
    {
        "instruction": "Create a Java method that checks if a number is even or odd.\nnumber: 7",
        "output": "public class EvenOdd {\n    public static String checkEvenOdd(int number) {\n        if (number % 2 == 0) {\n            return \"Even\";\n        } else {\n            return \"Odd\";\n        }\n    }\n\n    public static void main(String[] args) {\n        int num = 7;\n        String result = checkEvenOdd(num);\n        System.out.println(\"Number \" + num + \" is \" + result);\n    }}",
        "most_similar_instructions": {
            "Create a Java function that determines if a given number is prime.": 0.5925925925925926,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.5806451612903225,
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.42424242424242425,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.42424242424242425,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.4000000000000001,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.4000000000000001,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.3571428571428571,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.34285714285714286,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.3125,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.3125
        },
        "avg_similarity_score": 0.23969957214010257
    },
    {
        "instruction": "Implement a Java method to find the length of the longest word in a given sentence.\nSentence: \"The quick brown fox jumps over the lazy dog\"",
        "output": "public class LongestWordLength {\n    public static int findLongestWordLength(String sentence) {\n        String[] words = sentence.split(\" \");\n        int maxLength = 0;\n        for (String word : words) {\n            if (word.length() > maxLength) {\n                maxLength = word.length();\n            }\n        }\n        return maxLength;\n    }\n\n    public static void main(String[] args) {\n        String sentence = \"The quick brown fox jumps over the lazy dog\";\n        int maxLength = findLongestWordLength(sentence);\n        System.out.println(\"Length of the longest word: \" + maxLength);\n    }}",
        "most_similar_instructions": {
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.41860465116279066,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.40909090909090906,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.3773584905660377,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.372093023255814,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.34782608695652173,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3414634146341463,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.33333333333333337,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.3111111111111111,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.30769230769230776,
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.3043478260869565
        },
        "avg_similarity_score": 0.22458739309435094
    },
    {
        "instruction": "Write a Java program that sorts an array of objects based on a specific property in ascending order.\nStudent class: String name, int age\narray: [{name: \"John\", age: 25}, {name: \"Alice\", age: 20}, {name: \"Bob\", age: 30}]\nSort by age",
        "output": "import java.util.Arrays;\nimport java.util.Comparator;\n\nclass Student {\n    String name;\n    int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String toString() {\n        return \"{name: \" + name + \", age: \" + age + \"}\";\n    }\n}\n\nclass AgeComparator implements Comparator<Student> {\n    public int compare(Student s1, Student s2) {\n        return s1.age - s2.age;\n    }\n}\n\npublic class SortByAge {\n    public static void main(String[] args) {\n        Student[] students = {\n            new Student(\"John\", 25),\n            new Student(\"Alice\", 20),\n            new Student(\"Bob\", 30)\n        };\n\n        Arrays.sort(students, new AgeComparator());\n\n        System.out.println(Arrays.toString(students));\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.40624999999999994,
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.28571428571428575,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.2857142857142857,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.27272727272727276,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.2711864406779661,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.26666666666666666,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.2641509433962264,
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.25641025641025644,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.253968253968254,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.23333333333333334
        },
        "avg_similarity_score": 0.18372252908048117
    },
    {
        "instruction": "Write a Java program that removes all duplicate elements from an ArrayList of integers.\n[3, 4, 7, 4, 9, 7, 10]",
        "output": "import java.util.ArrayList;\nimport java.util.HashSet;\n\npublic class DuplicateRemoval {\n    public static void removeDuplicates(ArrayList<Integer> numbers) {\n        HashSet<Integer> uniqueNumbers = new HashSet<>();\n        uniqueNumbers.addAll(numbers);\n        numbers.clear();\n        numbers.addAll(uniqueNumbers);\n    }\n    \n    public static void main(String[] args) {\n        ArrayList<Integer> numbers = new ArrayList<>();\n        numbers.add(3);\n        numbers.add(4);\n        numbers.add(7);\n        numbers.add(4);\n        numbers.add(9);\n        numbers.add(7);\n        numbers.add(10);\n\n        removeDuplicates(numbers);\n        System.out.println(\"Array without duplicates: \" + numbers);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.42553191489361697,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.4090909090909091,
            "Please write a Java method to remove all duplicate elements from an ArrayList of strings.\nArrayList<String> list = new ArrayList<>(Arrays.asList(\"apple\", \"orange\", \"banana\", \"apple\", \"pear\", \"banana\"));": 0.40816326530612246,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.39999999999999997,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.375,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.37209302325581395,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.35294117647058826,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.35,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.35
        },
        "avg_similarity_score": 0.22951188125571972
    },
    {
        "instruction": "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"",
        "output": "public class VowelCounter {\n    public static int countVowels(String str) {\n        int count = 0;\n        for (char ch : str.toLowerCase().toCharArray()) {\n            if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    public static void main(String[] args) {\n        String string = \"Hello World\";\n        int vowelCount = countVowels(string);\n        System.out.println(\"Number of vowels: \" + vowelCount);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.5714285714285715,
            "Create a Java function that determines if a given number is prime.": 0.4827586206896552,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.47058823529411764,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4666666666666667,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.4324324324324324,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.4324324324324324,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.4117647058823529,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.39999999999999997,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.37500000000000006,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.37500000000000006
        },
        "avg_similarity_score": 0.2682493769523911
    },
    {
        "instruction": "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"",
        "output": "public class PalindromeChecker {\n    public static boolean isPalindrome(String str) {\n        int start = 0;\n        int end = str.length() - 1;\n\n        while (start < end) {\n            if (str.charAt(start) != str.charAt(end)) {\n                return false;\n            }\n            start++;\n            end--;\n        }\n\n        return true;\n    }\n\n    public static void main(String[] args) {\n        String string = \"racecar\";\n        boolean isPalindrome = isPalindrome(string);\n        System.out.println(\"'\" + string + \"' is a palindrome: \" + isPalindrome);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.5142857142857143,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4666666666666667,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.45714285714285713,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.43749999999999994,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.42424242424242425,
            "Create a Java function that determines if a given number is prime.": 0.41379310344827586,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.4117647058823529,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.358974358974359,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.35294117647058826,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.35
        },
        "avg_similarity_score": 0.2432182414938192
    },
    {
        "instruction": "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10",
        "output": "public class RangeSum {\n    public static int calculateSum(int start, int end) {\n        int sum = 0;\n        for (int i = start; i <= end; i++) {\n            sum += i;\n        }\n        return sum;\n    }\n\n    public static void main(String[] args) {\n        int start = 1;\n        int end = 10;\n        int sum = calculateSum(start, end);\n        System.out.println(\"Sum of numbers from \" + start + \" to \" + end + \": \" + sum);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5714285714285715,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.5625,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.4444444444444444,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.4444444444444444,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.41025641025641024,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.4081632653061224,
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.39999999999999997,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.3902439024390244,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.3888888888888889,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.37837837837837834
        },
        "avg_similarity_score": 0.28335680868469515
    },
    {
        "instruction": "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]",
        "output": "import java.util.ArrayList;\n\npublic class AverageCalculator {\n    public static double calculateAverage(ArrayList<Integer> numbers) {\n        int sum = 0;\n        for (int num : numbers) {\n            sum += num;\n        }\n        return (double) sum / numbers.size();\n    }\n\n    public static void main(String[] args) {\n        ArrayList<Integer> numbers = new ArrayList<>();\n        numbers.add(5);\n        numbers.add(8);\n        numbers.add(6);\n        numbers.add(4);\n        numbers.add(9);\n\n        double average = calculateAverage(numbers);\n        System.out.println(\"Average: \" + average);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program that calculates the factorial of a given number.\n6": 0.5,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.4444444444444444,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.4117647058823529,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.4,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.39999999999999997,
            "Create a Java function that determines if a given number is prime.": 0.3870967741935484,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.380952380952381,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.3684210526315789,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.3673469387755102,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.358974358974359
        },
        "avg_similarity_score": 0.2625593447536409
    },
    {
        "instruction": "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5",
        "output": "public class PowerCalculator {\n    public static double calculatePower(double base, int exponent) {\n        if (exponent == 0) {\n            return 1;\n        } else if (exponent > 0) {\n            return base * calculatePower(base, exponent - 1);\n        } else {\n            return 1 / (base * calculatePower(base, -exponent - 1));\n        }\n    }\n\n    public static void main(String[] args) {\n        double base = 2;\n        int exponent = 5;\n        double power = calculatePower(base, exponent);\n        System.out.println(base + \"^\" + exponent + \" = \" + power);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program that calculates the factorial of a given number.\n6": 0.5454545454545455,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.5142857142857143,
            "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]": 0.5128205128205129,
            "Create a Java function that determines if a given number is prime.": 0.5,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.48648648648648646,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4186046511627907,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.41025641025641024,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.37837837837837834,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.36842105263157887,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.35
        },
        "avg_similarity_score": 0.2728128790324695
    },
    {
        "instruction": "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.",
        "output": "public class Person {\n    private String name;\n    private int age;\n    private String occupation;\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public void setOccupation(String occupation) {\n        this.occupation = occupation;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public String getOccupation() {\n        return occupation;\n    }\n}",
        "most_similar_instructions": {
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.5306122448979592,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.49056603773584906,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.4615384615384615,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.45614035087719296,
            "Create a Java class representing a Circle with private attributes for radius and color, and methods to get and set their values.\nCircle radius: 5.0, color: \"red\"": 0.4313725490196078,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.425531914893617,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.40816326530612246,
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.39344262295081966,
            "Implement a Java class for a simple stack with push and pop methods.": 0.3888888888888889,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.34146341463414637
        },
        "avg_similarity_score": 0.23185300740068412
    },
    {
        "instruction": "Write a Java method that takes an integer as input and determines if it is prime or not.",
        "output": "public class PrimeChecker {\n    public static boolean isPrime(int num) {\n        if (num <= 1) {\n            return false;\n        }\n\n        for (int i = 2; i <= Math.sqrt(num); i++) {\n            if (num % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        int number = 23;\n        if (isPrime(number)) {\n            System.out.println(number + \" is prime.\");\n        } else {\n            System.out.println(number + \" is not prime.\");\n        }\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.47058823529411764,
            "Create a Java function that determines if a given number is prime.": 0.4666666666666666,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.4444444444444444,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.42424242424242425,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.4210526315789474,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.39999999999999997,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.358974358974359,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.35000000000000003,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.33333333333333337,
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.3333333333333333
        },
        "avg_similarity_score": 0.23375755198657566
    },
    {
        "instruction": "Create a Java class to implement a basic calculator with methods for addition, subtraction, multiplication, and division.",
        "output": "public class Calculator {\n    public static double add(double num1, double num2) {\n        return num1 + num2;\n    }\n\n    public static double subtract(double num1, double num2) {\n        return num1 - num2;\n    }\n\n    public static double multiply(double num1, double num2) {\n        return num1 * num2;\n    }\n\n    public static double divide(double num1, double num2) {\n        if (num2 != 0) {\n            return num1 / num2;\n        } else {\n            throw new ArithmeticException(\"Cannot divide by zero.\");\n        }\n    }\n\n    public static void main(String[] args) {\n        double num1 = 10.0;\n        double num2 = 5.0;\n\n        System.out.println(\"Addition: \" + add(num1, num2));\n        System.out.println(\"Subtraction: \" + subtract(num1, num2));\n        System.out.println(\"Multiplication: \" + multiply(num1, num2));\n        \n        try {\n            System.out.println(\"Division: \" + divide(num1, num2));\n        } catch (ArithmeticException ex) {\n            System.out.println(ex.getMessage());\n        }\n    }\n}",
        "most_similar_instructions": {
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.45714285714285713,
            "Implement a Java class for a simple stack with push and pop methods.": 0.4000000000000001,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.39999999999999997,
            "Create a Java class representing a Circle with private attributes for radius and color, and methods to get and set their values.\nCircle radius: 5.0, color: \"red\"": 0.35555555555555557,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.3255813953488372,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3125,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.3043478260869565,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.2978723404255319,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.29411764705882354,
            "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;": 0.2926829268292683
        },
        "avg_similarity_score": 0.21924693835815862
    },
    {
        "instruction": "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.",
        "output": "public class VowelCounter {\n    public static int countVowels(String input) {\n        int count = 0;\n        input = input.toLowerCase();\n        for (int i = 0; i < input.length(); i++) {\n            char ch = input.charAt(i);\n            if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    public static void main(String[] args) {\n        String word = \"Java Programming\";\n        System.out.println(\"Number of vowels: \" + countVowels(word));\n    }\n}",
        "most_similar_instructions": {
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.5909090909090908,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.5853658536585366,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.5238095238095238,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.4761904761904762,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.4615384615384615,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.4074074074074074,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.39024390243902435,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.3783783783783784,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.3636363636363636,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.35897435897435903
        },
        "avg_similarity_score": 0.2808807161670318
    },
    {
        "instruction": "Design a Java class to represent a circle. Include attributes for radius and methods to calculate the area and circumference of the circle.",
        "output": "public class Circle {\n    private double radius;\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public double getArea() {\n        return Math.PI * radius * radius;\n    }\n\n    public double getCircumference() {\n        return 2 * Math.PI * radius;\n    }\n\n    public static void main(String[] args) {\n        Circle circle = new Circle(5.0);\n        System.out.println(\"Area: \" + circle.getArea());\n        System.out.println(\"Circumference: \" + circle.getCircumference());\n    }\n}",
        "most_similar_instructions": {
            "Create a Java class representing a Circle with private attributes for radius and color, and methods to get and set their values.\nCircle radius: 5.0, color: \"red\"": 0.5098039215686274,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.4615384615384615,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.41509433962264153,
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.39344262295081966,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.391304347826087,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.3902439024390244,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.3859649122807018,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.3859649122807018,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.36734693877551017,
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.360655737704918
        },
        "avg_similarity_score": 0.24401294123830033
    },
    {
        "instruction": "Write a Java method to check if a given string is a valid email address.",
        "output": "import java.util.regex.Pattern;\n\npublic class EmailValidator {\n    public static boolean isValidEmail(String email) {\n        String regex = \"^[a-zA-Z0-9_+&*-]+(?:\\\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,7}$\";\n        return Pattern.matches(regex, email);\n    }\n\n    public static void main(String[] args) {\n        String emailAddress = \"test@example.com\";\n        if (isValidEmail(emailAddress)) {\n            System.out.println(emailAddress + \" is a valid email address.\");\n        } else {\n            System.out.println(emailAddress + \" is not a valid email address.\");\n        }\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.5806451612903225,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.5454545454545454,
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.5454545454545454,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.5,
            "Create a Java function that determines if a given number is prime.": 0.4444444444444445,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.42424242424242425,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.4137931034482759,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.4000000000000001,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.37500000000000006,
            "Write a Java method that takes an integer as input and determines if it is prime or not.": 0.3636363636363636
        },
        "avg_similarity_score": 0.2478166973152753
    },
    {
        "instruction": "Create a Java method that takes an array of strings as input and returns the longest string in the array.\n[\"cat\", \"dog\", \"elephant\", \"lion\"]",
        "output": "public static String findLongestString(String[] array) {\n    String longest = array[0];\n    for (int i = 1; i < array.length; i++) {\n        if (array[i].length() > longest.length()) {\n            longest = array[i];\n        }\n    }\n    return longest;\n}\n\nString[] strings = {\"cat\", \"dog\", \"elephant\", \"lion\"};\nString longestString = findLongestString(strings);\nSystem.out.println(\"Longest string: \" + longestString);",
        "most_similar_instructions": {
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.5925925925925926,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.5909090909090908,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.5238095238095238,
            "Create a JavaScript function that takes an array of numbers and returns the product of all elements.": 0.48780487804878053,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.4583333333333333,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.45454545454545453,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.43478260869565216,
            "Write a Java method that takes an integer as input and determines if it is prime or not.": 0.42857142857142855,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.4186046511627907,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.3913043478260869
        },
        "avg_similarity_score": 0.2620661417663559
    },
    {
        "instruction": "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8",
        "output": "public class Rectangle {\n    private int width;\n    private int height;\n\n    public Rectangle(int width, int height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    public int calculateArea() {\n        return width * height;\n    }\n}\n\nRectangle rectangle = new Rectangle(5, 8);\nint area = rectangle.calculateArea();\nSystem.out.println(\"Area of rectangle: \" + area);",
        "most_similar_instructions": {
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.4067796610169491,
            "Design a Java class to represent a circle. Include attributes for radius and methods to calculate the area and circumference of the circle.": 0.37499999999999994,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.3703703703703704,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.3673469387755102,
            "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]": 0.3636363636363636,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.35555555555555557,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.35294117647058826,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.35000000000000003,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.3181818181818182,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.3181818181818182
        },
        "avg_similarity_score": 0.24502234292830566
    },
    {
        "instruction": "Implement a Java class called \"BankAccount\" with attributes \"accountNumber\" and \"balance\" and methods for deposit and withdrawal.\naccountNumber: 123456, depositAmount: 100, withdrawalAmount: 50",
        "output": "public class BankAccount {\n    private int accountNumber;\n    private double balance;\n\n    public BankAccount(int accountNumber) {\n        this.accountNumber = accountNumber;\n        this.balance = 0.0;\n    }\n\n    public void deposit(double amount) {\n        if (amount > 0) {\n            balance += amount;\n            System.out.println(\"Deposit successful. New balance: \" + balance);\n        } else {\n            System.out.println(\"Invalid deposit amount.\");\n        }\n    }\n\n    public void withdraw(double amount) {\n        if (amount > 0 && amount <= balance) {\n            balance -= amount;\n            System.out.println(\"Withdrawal successful. New balance: \" + balance);\n        } else {\n            System.out.println(\"Invalid withdrawal amount.\");\n        }\n    }\n}\n\nBankAccount account = new BankAccount(123456);\naccount.deposit(100);\naccount.withdraw(50);",
        "most_similar_instructions": {
            "Implement a Java class for a simple stack with push and pop methods.": 0.3888888888888889,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.3773584905660377,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.37499999999999994,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.36734693877551017,
            "Create a Java class representing a Circle with private attributes for radius and color, and methods to get and set their values.\nCircle radius: 5.0, color: \"red\"": 0.35294117647058826,
            "Create a Java class to implement a basic calculator with methods for addition, subtraction, multiplication, and division.": 0.35,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.34782608695652173,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.34146341463414637,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.3404255319148936,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.3076923076923077
        },
        "avg_similarity_score": 0.16393634682255792
    },
    {
        "instruction": "Implement a Java class called \"Person\" with attributes \"name\" and \"age\" and a method to check if the person is a minor (below 18 years old).\nname: \"John\", age: 20",
        "output": "public class Person {\n    private String name;\n    private int age;\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public boolean isMinor() {\n        return age < 18;\n    }\n}\n\nPerson person = new Person(\"John\", 20);\nboolean isMinor = person.isMinor();\nSystem.out.println(\"Is minor: \" + isMinor);",
        "most_similar_instructions": {
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.5357142857142857,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.4363636363636364,
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.4117647058823529,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.4074074074074074,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.40625,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.3773584905660377,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.3571428571428571,
            "Write a Java method to check if a given string is a valid email address.": 0.3555555555555555,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.3478260869565218,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.34375
        },
        "avg_similarity_score": 0.22512739141008903
    },
    {
        "instruction": "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]",
        "output": "public class AverageCalculator {\n    public static double calculateAverage(int[] array) {\n        int sum = 0;\n        for (int num : array) {\n            sum += num;\n        }\n        return (double) sum / array.length;\n    }\n\n    public static void main(String[] args) {\n        int[] numbers = {5, 9, 12, 7, 3};\n        double average = calculateAverage(numbers);\n        System.out.println(average);\n    }}",
        "most_similar_instructions": {
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.5454545454545455,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.5333333333333333,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.5263157894736842,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.5116279069767442,
            "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]": 0.5,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.45,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.4390243902439025,
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.42424242424242425,
            "Write a Java program that removes all duplicate elements from an ArrayList of integers.\n[3, 4, 7, 4, 9, 7, 10]": 0.42105263157894735,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.39999999999999997
        },
        "avg_similarity_score": 0.26627729563110114
    },
    {
        "instruction": "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5",
        "output": "public class Circle {\n    private double radius;\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public double getArea() {\n        return Math.PI * radius * radius;\n    }\n\n    public double getCircumference() {\n        return 2 * Math.PI * radius;\n    }\n\n    public static void main(String[] args) {\n        Circle circle = new Circle(4.5);\n        double area = circle.getArea();\n        double circumference = circle.getCircumference();\n        System.out.println(\"Area: \" + area);\n        System.out.println(\"Circumference: \" + circumference);\n    }}",
        "most_similar_instructions": {
            "Design a Java class to represent a circle. Include attributes for radius and methods to calculate the area and circumference of the circle.": 0.5853658536585366,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.5106382978723404,
            "Create a Java class representing a Circle with private attributes for radius and color, and methods to get and set their values.\nCircle radius: 5.0, color: \"red\"": 0.4782608695652174,
            "Implement a Java class for a simple stack with push and pop methods.": 0.45161290322580644,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.4444444444444444,
            "Create a Java class to implement a basic calculator with methods for addition, subtraction, multiplication, and division.": 0.39999999999999997,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.3902439024390244,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.37499999999999994,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.3461538461538462,
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.32142857142857145
        },
        "avg_similarity_score": 0.22806864469423113
    },
    {
        "instruction": "Implement a Java class for a quadratic equation solver that calculates the roots of a quadratic equation.\na = 2, b = -5, c = 3",
        "output": "public class QuadraticEquationSolver {\n    public static void solve(double a, double b, double c) {\n        double discriminant = b * b - 4 * a * c;\n        if (discriminant > 0) {\n            double root1 = (-b + Math.sqrt(discriminant)) / (2 * a);\n            double root2 = (-b - Math.sqrt(discriminant)) / (2 * a);\n            System.out.println(\"Root 1: \" + root1);\n            System.out.println(\"Root 2: \" + root2);\n        } else if (discriminant == 0) {\n            double root = -b / (2 * a);\n            System.out.println(\"Root: \" + root);\n        } else {\n            System.out.println(\"No real roots exist.\");\n        }\n    }\n\n    public static void main(String[] args) {\n        double a = 2;\n        double b = -5;\n        double c = 3;\n        solve(a, b, c);\n    }}",
        "most_similar_instructions": {
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.46511627906976744,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.41666666666666663,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.39999999999999997,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.3888888888888889,
            "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]": 0.380952380952381,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.380952380952381,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.34782608695652173,
            "Implement a Java class for a simple stack with push and pop methods.": 0.33333333333333337,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.3255813953488372,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.3255813953488372
        },
        "avg_similarity_score": 0.24396759167875792
    },
    {
        "instruction": "Implement a Java class for a point with x and y coordinates and a method to calculate its distance from the origin.\nx = 3, y = 4",
        "output": "public class Point {\n    private double x;\n    private double y;\n\n    public Point(double x, double y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    public double distanceFromOrigin() {\n        return Math.sqrt(x * x + y * y);\n    }\n\n    public static void main(String[] args) {\n        Point point = new Point(3, 4);\n        double distance = point.distanceFromOrigin();\n        System.out.println(distance);\n    }}",
        "most_similar_instructions": {
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.4545454545454546,
            "Implement a Java class for a simple stack with push and pop methods.": 0.4102564102564103,
            "Implement a Java class called \"Person\" with attributes \"name\" and \"age\" and a method to check if the person is a minor (below 18 years old).\nname: \"John\", age: 20": 0.3928571428571428,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.39215686274509803,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.38461538461538464,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.3666666666666667,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.35999999999999993,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.32727272727272727,
            "Implement a Java class for a quadratic equation solver that calculates the roots of a quadratic equation.\na = 2, b = -5, c = 3": 0.32653061224489793,
            "Design a Java class to represent a circle. Include attributes for radius and methods to calculate the area and circumference of the circle.": 0.32653061224489793
        },
        "avg_similarity_score": 0.22915261041058857
    },
    {
        "instruction": "Write a Java method that checks if two strings are anagrams of each other.\n\"listen\", \"silent\"",
        "output": "import java.util.Arrays;\n\npublic class AnagramChecker {\n    public static boolean areAnagrams(String word1, String word2) {\n        char[] charArray1 = word1.toLowerCase().toCharArray();\n        char[] charArray2 = word2.toLowerCase().toCharArray();\n\n        Arrays.sort(charArray1);\n        Arrays.sort(charArray2);\n\n        return Arrays.equals(charArray1, charArray2);\n    }\n\n    public static void main(String[] args) {\n        String word1 = \"listen\";\n        String word2 = \"silent\";\n        boolean areAnagrams = areAnagrams(word1, word2);\n        System.out.println(areAnagrams);\n    }}",
        "most_similar_instructions": {
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.38709677419354843,
            "In Java, write a method that reverses a list of integers.": 0.3703703703703703,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.3636363636363636,
            "Write a Java method that takes an integer as input and determines if it is prime or not.": 0.35294117647058826,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.3448275862068966,
            "Write a Java method to check if a given string is a valid email address.": 0.3225806451612903,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.3225806451612903,
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.3125,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.30303030303030304,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.30303030303030304
        },
        "avg_similarity_score": 0.21448955116881777
    },
    {
        "instruction": "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]",
        "output": "public class MinMaxFinder {\n    public static void findMinMax(int[] array) {\n        int min = array[0];\n        int max = array[0];\n        for (int num : array) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        System.out.println(\"Smallest element: \" + min);\n        System.out.println(\"Largest element: \" + max);\n    }\n\n    public static void main(String[] args) {\n        int[] numbers = {5, 8, 2, 10, 6};\n        findMinMax(numbers);\n    }}",
        "most_similar_instructions": {
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5909090909090909,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.5531914893617021,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5365853658536585,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.4888888888888889,
            "Write a Java program that removes all duplicate elements from an ArrayList of integers.\n[3, 4, 7, 4, 9, 7, 10]": 0.47619047619047616,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.4736842105263158,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.47058823529411764,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.4583333333333333,
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.4324324324324324,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.42857142857142855
        },
        "avg_similarity_score": 0.26746185909844017
    },
    {
        "instruction": "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};",
        "output": "public static int findSecondLargest(int[] arr) {\n    int largest = Integer.MIN_VALUE;\n    int secondLargest = Integer.MIN_VALUE;\n\n    for (int i = 0; i < arr.length; i++) {\n        if (arr[i] > largest) {\n            secondLargest = largest;\n            largest = arr[i];\n        } else if (arr[i] > secondLargest && arr[i] != largest) {\n            secondLargest = arr[i];\n        }\n    }\n\n    return secondLargest;\n}\n\nint[] arr = {5, 3, 9, 1, 7, 2};\nint secondLargest = findSecondLargest(arr);\nSystem.out.println(secondLargest);",
        "most_similar_instructions": {
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.5238095238095238,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5217391304347826,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.48888888888888893,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.4761904761904762,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.4313725490196078,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.4230769230769231,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.41666666666666663,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.35294117647058826,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.34782608695652173,
            "Write a Java program that removes all duplicate elements from an ArrayList of integers.\n[3, 4, 7, 4, 9, 7, 10]": 0.34782608695652173
        },
        "avg_similarity_score": 0.23262350823957537
    },
    {
        "instruction": "Provide a Java code snippet to convert a binary number represented as a string to its decimal equivalent.\nString binaryNumber = \"10101\";",
        "output": "public static int binaryToDecimal(String binaryNumber) {\n    int decimal = 0;\n    int powerOfTwo = 1;\n\n    for (int i = binaryNumber.length() - 1; i >= 0; i--) {\n        if (binaryNumber.charAt(i) == '1') {\n            decimal += powerOfTwo;\n        }\n        powerOfTwo *= 2;\n    }\n\n    return decimal;\n}\n\nString binaryNumber = \"10101\";\nint decimal = binaryToDecimal(binaryNumber);\nSystem.out.println(decimal);",
        "most_similar_instructions": {
            "Can you provide a Java code snippet that detects loops in a singly-linked list?": 0.3333333333333333,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.31578947368421056,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.30769230769230765,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.2926829268292683,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.2857142857142857,
            "Write a Java method to check if a given string is a valid email address.": 0.2777777777777778,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.2777777777777778,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.27027027027027023,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.26666666666666666,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.2631578947368421
        },
        "avg_similarity_score": 0.18102591366578455
    },
    {
        "instruction": "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};",
        "output": "public static int findMaxElement(int[][] matrix) {\n    int maxElement = Integer.MIN_VALUE;\n\n    for (int[] row : matrix) {\n        for (int element : row) {\n            if (element > maxElement) {\n                maxElement = element;\n            }\n        }\n    }\n\n    return maxElement;\n}\n\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};\nint maxElement = findMaxElement(matrix);\nSystem.out.println(maxElement);",
        "most_similar_instructions": {
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.5490196078431373,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.5384615384615384,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5333333333333332,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4999999999999999,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.4583333333333333,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.44,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.4313725490196078,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.40909090909090906,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.4,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.38095238095238104
        },
        "avg_similarity_score": 0.25011923173372413
    },
    {
        "instruction": "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;",
        "output": "public static int sumOfPrimes(int n) {\n    int sum = 0;\n\n    for (int i = 2; i <= n; i++) {\n        if (isPrime(i)) {\n            sum += i;\n        }\n    }\n\n    return sum;\n}\n\npublic static boolean isPrime(int number) {\n    if (number <= 1) {\n        return false;\n    }\n\n    for (int i = 2; i <= Math.sqrt(number); i++) {\n        if (number % i == 0) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nint n = 10;\nint sum = sumOfPrimes(n);\nSystem.out.println(sum);",
        "most_similar_instructions": {
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.5238095238095238,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.5,
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.4186046511627907,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.41025641025641024,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.3902439024390244,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.3888888888888889,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.37209302325581395,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3684210526315789,
            "Implement a Java method to find the length of the longest word in a given sentence.\nSentence: \"The quick brown fox jumps over the lazy dog\"": 0.36734693877551017,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.3555555555555555
        },
        "avg_similarity_score": 0.2469880933806742
    },
    {
        "instruction": "Can you provide a Java code snippet to check if a given string is a palindrome?\nString word = \"level\";",
        "output": "public static boolean isPalindrome(String word) {\n    int i = 0, j = word.length() - 1;\n\n    while (i < j) {\n        if (word.charAt(i) != word.charAt(j)) {\n            return false;\n        }\n        i++;\n        j--;\n    }\n\n    return true;\n}\n\nString word = \"level\";\nboolean isPalindrome = isPalindrome(word);\nSystem.out.println(isPalindrome);",
        "most_similar_instructions": {
            "Write a Java method to check if a given string is a valid email address.": 0.5882352941176471,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.5,
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.4864864864864865,
            "Can you provide a Java code snippet that detects loops in a singly-linked list?": 0.47058823529411764,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.45714285714285713,
            "Provide a Java code snippet to convert a binary number represented as a string to its decimal equivalent.\nString binaryNumber = \"10101\";": 0.45,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.43243243243243246,
            "Create a Java function that determines if a given number is prime.": 0.3870967741935484,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.33333333333333337,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.3243243243243243
        },
        "avg_similarity_score": 0.20820909705027266
    },
    {
        "instruction": "Implement a Java method to calculate the GCD (Greatest Common Divisor) of two numbers using the Euclidean algorithm.\nint a = 24, b = 36;",
        "output": "public static int calculateGCD(int a, int b) {\n    while (b != 0) {\n        int temp = b;\n        b = a % b;\n        a = temp;\n    }\n    \n    return a;\n}\n\nint a = 24, b = 36;\nint gcd = calculateGCD(a, b);\nSystem.out.println(gcd);",
        "most_similar_instructions": {
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.46153846153846156,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.43478260869565216,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.39999999999999997,
            "Implement a Java method to find the length of the longest word in a given sentence.\nSentence: \"The quick brown fox jumps over the lazy dog\"": 0.36734693877551017,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.34146341463414637,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.3333333333333333,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.3255813953488372,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.3243243243243243,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.31578947368421056,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.31578947368421056
        },
        "avg_similarity_score": 0.22698726260430352
    },
    {
        "instruction": "Implement a Java method that finds the nth Fibonacci number using recursion.\nint n = 5;",
        "output": "public static int fibonacci(int n) {\n    if (n <= 1) {\n        return n;\n    }\n\n    return fibonacci(n - 1) + fibonacci(n - 2);\n}\n\nint n = 5;\nint fibonacciNumber = fibonacci(n);\nSystem.out.println(fibonacciNumber);",
        "most_similar_instructions": {
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.4666666666666667,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.4666666666666667,
            "Develop a recursive Java function to compute the nth Fibonacci number.": 0.4615384615384615,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.4210526315789474,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.4,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.4,
            "Implement a Java method to calculate the GCD (Greatest Common Divisor) of two numbers using the Euclidean algorithm.\nint a = 24, b = 36;": 0.3684210526315789,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.3571428571428571,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.35000000000000003,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.3448275862068965
        },
        "avg_similarity_score": 0.24785633979117508
    },
    {
        "instruction": "Can you provide a Java code snippet to find the length of the longest common prefix in an array of strings?\nString[] strs = {\"flower\", \"flow\", \"flight\"};",
        "output": "public static String longestCommonPrefix(String[] strs) {\n    if (strs == null || strs.length == 0) {\n        return \"\";\n    }\n\n    String prefix = strs[0];\n\n    for (int i = 1; i < strs.length; i++) {\n        while (strs[i].indexOf(prefix) != 0) {\n            prefix = prefix.substring(0, prefix.length() - 1);\n            if (prefix.isEmpty()) {\n                return \"\";\n            }\n        }\n    }\n\n    return prefix;\n}\n\nString[] strs = {\"flower\", \"flow\", \"flight\"};\nString longestPrefix = longestCommonPrefix(strs);\nSystem.out.println(longestPrefix);",
        "most_similar_instructions": {
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.4528301886792453,
            "Can you provide a Java code snippet to check if a given string is a palindrome?\nString word = \"level\";": 0.39999999999999997,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.3913043478260869,
            "Can you provide a Java code snippet that detects loops in a singly-linked list?": 0.3902439024390244,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.38461538461538464,
            "Implement a Java method to find the length of the longest word in a given sentence.\nSentence: \"The quick brown fox jumps over the lazy dog\"": 0.38461538461538464,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.3181818181818182,
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.3043478260869565,
            "Provide a Java code snippet to convert a binary number represented as a string to its decimal equivalent.\nString binaryNumber = \"10101\";": 0.2978723404255319,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.2978723404255319
        },
        "avg_similarity_score": 0.20850756187918312
    },
    {
        "instruction": "Write a Java method to remove duplicates from an array of integers and return the array with unique elements only.\nint[] arr = {1, 2, 3, 1, 2, 3, 4, 5};",
        "output": "public static int[] removeDuplicates(int[] arr) {\n    Set<Integer> uniqueSet = new LinkedHashSet<>();\n\n    for (int number : arr) {\n        uniqueSet.add(number);\n    }\n\n    int[] uniqueArray = new int[uniqueSet.size()];\n    int index = 0;\n\n    for (int number : uniqueSet) {\n        uniqueArray[index++] = number;\n    }\n\n    return uniqueArray;\n}\n\nint[] arr = {1, 2, 3, 1, 2, 3, 4, 5};\nint[] uniqueArray = removeDuplicates(arr);\nSystem.out.println(Arrays.toString(uniqueArray));",
        "most_similar_instructions": {
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.5283018867924527,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.5,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.4727272727272728,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.4666666666666667,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4528301886792453,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.44897959183673464,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.4444444444444445,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.43999999999999995,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.4210526315789474,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.4
        },
        "avg_similarity_score": 0.2339160180845888
    },
    {
        "instruction": "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"",
        "output": "public class WordCounter {\n    public static int countWords(String sentence) {\n        String[] words = sentence.split(\" \");\n        return words.length;\n    }\n\n    public static void main(String[] args) {\n        String sentence = \"Hello World! This is a sentence.\";\n        int wordCount = countWords(sentence);\n        System.out.println(\"Number of words: \" + wordCount);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.5957446808510639,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.5490196078431373,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.5,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.4888888888888889,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.47619047619047616,
            "Create a Java method that takes an array of strings as input and returns the longest string in the array.\n[\"cat\", \"dog\", \"elephant\", \"lion\"]": 0.47058823529411764,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.45454545454545453,
            "Write a Java method that takes an integer as input and determines if it is prime or not.": 0.4444444444444445,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.4210526315789474,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.391304347826087
        },
        "avg_similarity_score": 0.27288422232536513
    },
    {
        "instruction": "Create a Java class that represents a book, with attributes such as the title, author, and publication year.",
        "output": "public class Book {\n    private String title;\n    private String author;\n    private int publicationYear;\n\n    public Book(String title, String author, int publicationYear) {\n        this.title = title;\n        this.author = author;\n        this.publicationYear = publicationYear;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getAuthor() {\n        return author;\n    }\n    \n    public int getPublicationYear() {\n        return publicationYear;\n    }\n}\n\n// Example usage:\nBook myBook = new Book(\"To Kill a Mockingbird\", \"Harper Lee\", 1960);\nSystem.out.println(myBook.getTitle());\nSystem.out.println(myBook.getAuthor());\nSystem.out.println(myBook.getPublicationYear());",
        "most_similar_instructions": {
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.5,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.4878048780487805,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.45833333333333326,
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.42857142857142855,
            "Create a Java class to implement a basic calculator with methods for addition, subtraction, multiplication, and division.": 0.39999999999999997,
            "Implement a Java class for a simple stack with push and pop methods.": 0.3870967741935484,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.3829787234042554,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.36842105263157887,
            "Create a Java class representing a Circle with private attributes for radius and color, and methods to get and set their values.\nCircle radius: 5.0, color: \"red\"": 0.34782608695652173,
            "Design a Java class to represent a circle. Include attributes for radius and methods to calculate the area and circumference of the circle.": 0.34146341463414637
        },
        "avg_similarity_score": 0.2442212791310679
    },
    {
        "instruction": "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};",
        "output": "public class AverageCalculator {\n    public static double calculateAverage(int[] numbers) {\n        int sum = 0;\n        for (int number : numbers) {\n            sum += number;\n        }\n        return (double) sum / numbers.length;\n    }\n\n    public static void main(String[] args) {\n        int[] numbers = {4, 6, 2, 8, 5};\n        double average = calculateAverage(numbers);\n        System.out.println(\"Average: \" + average);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.5833333333333334,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5777777777777778,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.5641025641025642,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5581395348837208,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.5116279069767442,
            "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]": 0.4878048780487805,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.47619047619047616,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.46808510638297873,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.46808510638297873,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4571428571428572
        },
        "avg_similarity_score": 0.28072814780945454
    },
    {
        "instruction": "In Java, write a method that swaps the values of two variables.\nint a = 5;\nint b = 10;",
        "output": "public class VariableSwapper {\n    public static void swapVariables(int a, int b) {\n        int temp = a;\n        a = b;\n        b = temp;\n    }\n\n    public static void main(String[] args) {\n        int a = 5;\n        int b = 10;\n        System.out.println(\"Before swap: a = \" + a + \", b = \" + b);\n        swapVariables(a, b);\n        System.out.println(\"After swap: a = \" + a + \", b = \" + b);\n    }\n}",
        "most_similar_instructions": {
            "In Java, write a method that reverses a list of integers.": 0.4827586206896552,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.43243243243243246,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.39999999999999997,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.39999999999999997,
            "Implement a Java method to calculate the GCD (Greatest Common Divisor) of two numbers using the Euclidean algorithm.\nint a = 24, b = 36;": 0.3902439024390244,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.3870967741935484,
            "Implement a Java method that finds the nth Fibonacci number using recursion.\nint n = 5;": 0.3636363636363636,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.358974358974359,
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.35294117647058826,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.34285714285714286
        },
        "avg_similarity_score": 0.2387574693466264
    },
    {
        "instruction": "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};",
        "output": "public class SortedArrayChecker {\n    public static boolean isSorted(int[] numbers) {\n        for (int i = 1; i < numbers.length; i++) {\n            if (numbers[i] < numbers[i - 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        int[] numbers = {1, 3, 5, 7, 9};\n        boolean sorted = isSorted(numbers);\n        if (sorted) {\n            System.out.println(\"The array is sorted.\");\n        } else {\n            System.out.println(\"The array is not sorted.\");\n        }\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.5531914893617021,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.5333333333333332,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.5238095238095238,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.4782608695652174,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.4583333333333333,
            "Write a Java program that removes all duplicate elements from an ArrayList of integers.\n[3, 4, 7, 4, 9, 7, 10]": 0.4545454545454545,
            "Write a Java method to remove duplicates from an array of integers and return the array with unique elements only.\nint[] arr = {1, 2, 3, 1, 2, 3, 4, 5};": 0.4528301886792453,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.43478260869565216,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.4210526315789474,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.41666666666666663
        },
        "avg_similarity_score": 0.26319786286041935
    },
    {
        "instruction": "Please generate a Java class that represents a student with properties such as name, age, and grade.",
        "output": "public class Student {\n    private String name;\n    private int age;\n    private int grade;\n\n    public Student(String name, int age, int grade) {\n        this.name = name;\n        this.age = age;\n        this.grade = grade;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public int getGrade() {\n        return grade;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public void setGrade(int grade) {\n        this.grade = grade;\n    }\n}",
        "most_similar_instructions": {
            "Create a Java class that represents a book, with attributes such as the title, author, and publication year.": 0.5714285714285715,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.5,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.46808510638297873,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.46511627906976744,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.4390243902439025,
            "Implement a Java class for a simple stack with push and pop methods.": 0.4000000000000001,
            "Create a Java class to implement a basic calculator with methods for addition, subtraction, multiplication, and division.": 0.35294117647058826,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.34782608695652173,
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.34285714285714286,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.34285714285714286
        },
        "avg_similarity_score": 0.22606722286583272
    },
    {
        "instruction": "Write a Java code snippet that reverses an array of strings in-place.\nString[] arr = {\"apple\", \"banana\", \"cherry\"}",
        "output": "public class ArrayReversal {\n    public static void reverseArray(String[] arr) {\n        int start = 0;\n        int end = arr.length - 1;\n\n        while (start < end) {\n            String temp = arr[start];\n            arr[start] = arr[end];\n            arr[end] = temp;\n            start++;\n            end--;\n        }\n    }\n\n    public static void main(String[] args) {\n        String[] arr = {\"apple\", \"banana\", \"cherry\"};\n        reverseArray(arr);\n        System.out.println(\"Reversed Array:\");\n        for (String element : arr) {\n            System.out.println(element);\n        }\n    }\n}",
        "most_similar_instructions": {
            "Can you provide a Java code snippet to find the length of the longest common prefix in an array of strings?\nString[] strs = {\"flower\", \"flow\", \"flight\"};": 0.40909090909090906,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.39999999999999997,
            "Please write a Java method to remove all duplicate elements from an ArrayList of strings.\nArrayList<String> list = new ArrayList<>(Arrays.asList(\"apple\", \"orange\", \"banana\", \"apple\", \"pear\", \"banana\"));": 0.391304347826087,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.3902439024390244,
            "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};": 0.3902439024390244,
            "Create a Java method that takes an array of strings as input and returns the longest string in the array.\n[\"cat\", \"dog\", \"elephant\", \"lion\"]": 0.380952380952381,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.380952380952381,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.36842105263157887,
            "Can you provide a Java code snippet that detects loops in a singly-linked list?": 0.3636363636363636,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.358974358974359
        },
        "avg_similarity_score": 0.22994809427628718
    },
    {
        "instruction": "Write a Java code snippet that checks if a number is a perfect square.\nint num = 16",
        "output": "public class PerfectSquareChecker {\n    public static boolean isPerfectSquare(int num) {\n        int sqrt = (int)Math.sqrt(num);\n        return sqrt * sqrt == num;\n    }\n\n    public static void main(String[] args) {\n        int num = 16;\n        boolean isPerfectSquare = isPerfectSquare(num);\n        System.out.println(\"Is Perfect Square: \" + isPerfectSquare);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.5142857142857143,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.5,
            "Create a Java function that determines if a given number is prime.": 0.4827586206896552,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.47058823529411764,
            "Can you provide a Java code snippet to check if a given string is a palindrome?\nString word = \"level\";": 0.4444444444444444,
            "Write a Java method to check if a given string is a valid email address.": 0.43749999999999994,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4000000000000001,
            "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};": 0.39999999999999997,
            "Can you provide a Java code snippet that detects loops in a singly-linked list?": 0.37500000000000006,
            "Provide a Java code snippet to convert a binary number represented as a string to its decimal equivalent.\nString binaryNumber = \"10101\";": 0.36842105263157887
        },
        "avg_similarity_score": 0.23686931818308393
    },
    {
        "instruction": "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}",
        "output": "import java.util.ArrayList;\nimport java.util.HashSet;\n\npublic class DuplicateRemover {\n    public static int[] removeDuplicates(int[] arr) {\n        HashSet<Integer> set = new HashSet<>();\n        ArrayList<Integer> result = new ArrayList<>();\n\n        for (int element : arr) {\n            if (set.add(element)) {\n                result.add(element);\n            }\n        }\n\n        int[] uniqueArr = new int[result.size()];\n        for (int i = 0; i < result.size(); i++) {\n            uniqueArr[i] = result.get(i);\n        }\n\n        return uniqueArr;\n    }\n\n    public static void main(String[] args) {\n        int[] arr = {5, 10, 2, 5, 8, 10, 3};\n        int[] uniqueArr = removeDuplicates(arr);\n        System.out.println(\"Array with duplicates removed:\");\n        for (int element : uniqueArr) {\n            System.out.println(element);\n        }\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5581395348837208,
            "Write a Java method to remove duplicates from an array of integers and return the array with unique elements only.\nint[] arr = {1, 2, 3, 1, 2, 3, 4, 5};": 0.5384615384615385,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.5217391304347826,
            "Write a Java program that removes all duplicate elements from an ArrayList of integers.\n[3, 4, 7, 4, 9, 7, 10]": 0.5116279069767442,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.5,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.4999999999999999,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.4888888888888889,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.47619047619047616,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4444444444444445,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.43902439024390244
        },
        "avg_similarity_score": 0.24522797919553202
    },
    {
        "instruction": "Implement a Java function that finds the index of the first occurrence of a given element in an array of integers.\nint[] arr = {5, 10, 2, 15, 8}\nint element = 2",
        "output": "public class ElementIndexFinder {\n    public static int findFirstIndexOfElement(int[] arr, int element) {\n        for (int i = 0; i < arr.length; i++) {\n            if (arr[i] == element) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    public static void main(String[] args) {\n        int[] arr = {5, 10, 2, 15, 8};\n        int element = 2;\n        int index = findFirstIndexOfElement(arr, element);\n        System.out.println(\"First occurrence of \" + element + \" is at index: \" + index);\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5490196078431372,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.4905660377358491,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.46428571428571425,
            "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}": 0.45283018867924524,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4444444444444444,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.42105263157894735,
            "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]": 0.39999999999999997,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.39215686274509803,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.3636363636363636
        },
        "avg_similarity_score": 0.24904854210574978
    },
    {
        "instruction": "Create a Java program to count the frequency of each element in an array of integers and store it in a HashMap.\nint[] arr = {2, 3, 2, 4, 5, 3, 4}",
        "output": "import java.util.HashMap;\n\npublic class FrequencyCounter {\n    public static HashMap<Integer, Integer> countFrequency(int[] arr) {\n        HashMap<Integer, Integer> frequencyMap = new HashMap<Integer, Integer>();\n\n        for (int element : arr) {\n            frequencyMap.put(element, frequencyMap.getOrDefault(element, 0) + 1);\n        }\n\n        return frequencyMap;\n    }\n\n    public static void main(String[] args) {\n        int[] arr = {2, 3, 2, 4, 5, 3, 4};\n        HashMap<Integer, Integer> frequencyMap = countFrequency(arr);\n        System.out.println(\"Frequency of elements in the array:\");\n        for (int key : frequencyMap.keySet()) {\n            System.out.println(key + \": \" + frequencyMap.get(key));\n        }\n    }\n}",
        "most_similar_instructions": {
            "Write a Java method to remove duplicates from an array of integers and return the array with unique elements only.\nint[] arr = {1, 2, 3, 1, 2, 3, 4, 5};": 0.4918032786885246,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.4912280701754386,
            "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}": 0.4905660377358491,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.4814814814814815,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4814814814814815,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.47058823529411764,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.4615384615384615,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.45283018867924524,
            "Implement a Java function that finds the index of the first occurrence of a given element in an array of integers.\nint[] arr = {5, 10, 2, 15, 8}\nint element = 2": 0.45161290322580644,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.4482758620689655
        },
        "avg_similarity_score": 0.25851208728733543
    },
    {
        "instruction": "Create a Java class named \"Person\" with the following attributes: name (String), age (int), and height (double). Implement a constructor to initialize these attributes and a method named \"displayInfo\" to print the values of these attributes.",
        "output": "public class Person {\n    private String name;\n    private int age;\n    private double height;\n\n    public Person(String name, int age, double height) {\n        this.name = name;\n        this.age = age;\n        this.height = height;\n    }\n\n    public void displayInfo() {\n        System.out.println(\"Name: \" + name);\n        System.out.println(\"Age: \" + age);\n        System.out.println(\"Height: \" + height);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.47457627118644075,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.45161290322580644,
            "Implement a Java class called \"Person\" with attributes \"name\" and \"age\" and a method to check if the person is a minor (below 18 years old).\nname: \"John\", age: 20": 0.39393939393939387,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.39344262295081966,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.3548387096774194,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.33333333333333337,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.3333333333333333,
            "Implement a Java class for a point with x and y coordinates and a method to calculate its distance from the origin.\nx = 3, y = 4": 0.3225806451612903,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.31428571428571433,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.31428571428571433
        },
        "avg_similarity_score": 0.20424795440764748
    },
    {
        "instruction": "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]",
        "output": "public class ArrayMinMax {\n    public static void main(String[] args) {\n        int[] array = {7, 3, 9, 2, 5};\n        int min = findMin(array);\n        int max = findMax(array);\n        System.out.println(\"Minimum element: \" + min);\n        System.out.println(\"Maximum element: \" + max);\n    }\n\n    public static int findMin(int[] array) {\n        int min = Integer.MAX_VALUE;\n        for (int num : array) {\n            if (num < min) {\n                min = num;\n            }\n        }\n        return min;\n    }\n\n    public static int findMax(int[] array) {\n        int max = Integer.MIN_VALUE;\n        for (int num : array) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max;\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.6,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.553191489361702,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.5333333333333332,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.5217391304347826,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.5116279069767442,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.48888888888888893,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.4878048780487805,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.48648648648648646,
            "Create a Java program to count the frequency of each element in an array of integers and store it in a HashMap.\nint[] arr = {2, 3, 2, 4, 5, 3, 4}": 0.47058823529411764,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.46511627906976744
        },
        "avg_similarity_score": 0.2586977089507346
    },
    {
        "instruction": "Create a Java class named \"Student\" with attributes \"name\" (String) and \"age\" (int). Implement getter and setter methods for these attributes.",
        "output": "public class Student {\n    private String name;\n    private int age;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n}",
        "most_similar_instructions": {
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.5454545454545454,
            "Create a Java class named \"Person\" with the following attributes: name (String), age (int), and height (double). Implement a constructor to initialize these attributes and a method named \"displayInfo\" to print the values of these attributes.": 0.5263157894736842,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.5106382978723405,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.4888888888888889,
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.42105263157894735,
            "Implement a Java class called \"BankAccount\" with attributes \"accountNumber\" and \"balance\" and methods for deposit and withdrawal.\naccountNumber: 123456, depositAmount: 100, withdrawalAmount: 50": 0.4090909090909091,
            "Create a Java class to implement a basic calculator with methods for addition, subtraction, multiplication, and division.": 0.36842105263157887,
            "Create a Java class representing a Circle with private attributes for radius and color, and methods to get and set their values.\nCircle radius: 5.0, color: \"red\"": 0.3673469387755102,
            "Create a Java class that represents a book, with attributes such as the title, author, and publication year.": 0.358974358974359,
            "Implement a Java class for a simple stack with push and pop methods.": 0.35294117647058826
        },
        "avg_similarity_score": 0.1920259562621392
    },
    {
        "instruction": "Create a Java class named \"BankAccount\" with attributes \"accountNumber\" (String) and \"balance\" (double). Implement getter and setter methods for these attributes, and a method named \"deposit\" that takes an amount and adds it to the balance.",
        "output": "public class BankAccount {\n    private String accountNumber;\n    private double balance;\n\n    public String getAccountNumber() {\n        return accountNumber;\n    }\n\n    public void setAccountNumber(String accountNumber) {\n        this.accountNumber = accountNumber;\n    }\n\n    public double getBalance() {\n        return balance;\n    }\n\n    public void setBalance(double balance) {\n        this.balance = balance;\n    }\n\n    public void deposit(double amount) {\n        balance += amount;\n    }\n}",
        "most_similar_instructions": {
            "Create a Java class named \"Student\" with attributes \"name\" (String) and \"age\" (int). Implement getter and setter methods for these attributes.": 0.5964912280701755,
            "Create a Java class named \"Person\" with the following attributes: name (String), age (int), and height (double). Implement a constructor to initialize these attributes and a method named \"displayInfo\" to print the values of these attributes.": 0.5277777777777778,
            "Implement a Java class called \"BankAccount\" with attributes \"accountNumber\" and \"balance\" and methods for deposit and withdrawal.\naccountNumber: 123456, depositAmount: 100, withdrawalAmount: 50": 0.47457627118644075,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.3636363636363636,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.36065573770491804,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.3548387096774194,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.3548387096774194,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.3389830508474576,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.3333333333333333,
            "Implement a Java class called \"Person\" with attributes \"name\" and \"age\" and a method to check if the person is a minor (below 18 years old).\nname: \"John\", age: 20": 0.3333333333333333
        },
        "avg_similarity_score": 0.21164450064246615
    },
    {
        "instruction": "Implement a Java method that checks if a string is a palindrome or not. A palindrome is a word or phrase that is the same forwards and backwards.\ninput_string: \"madam\"",
        "output": "public boolean isPalindrome(String inputString) {\n    String reverse = new StringBuilder(inputString).reverse().toString();\n    return inputString.equalsIgnoreCase(reverse);\n}\n\nString inputString = \"madam\";\nboolean isPalindrome = isPalindrome(inputString);\nSystem.out.println(\"Is palindrome: \" + isPalindrome);",
        "most_similar_instructions": {
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.5,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.3913043478260869,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.3829787234042554,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.3673469387755102,
            "Can you provide a Java code snippet to check if a given string is a palindrome?\nString word = \"level\";": 0.36,
            "Write a Java method to check if a given string is a valid email address.": 0.34782608695652173,
            "Write a Java code snippet that checks if a number is a perfect square.\nint num = 16": 0.3333333333333333,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.3272727272727273,
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.32653061224489793,
            "Write a Java method that takes an integer as input and determines if it is prime or not.": 0.32653061224489793
        },
        "avg_similarity_score": 0.19766510816539962
    },
    {
        "instruction": "Implement a Java class that represents a book with attributes such as title, author, and publication year. Create a constructor and getter methods for each attribute.\nbook_title: \"Harry Potter and the Sorcerer's Stone\", book_author: \"J.K. Rowling\", book_year: 1997",
        "output": "public class Book {\n    private String title;\n    private String author;\n    private int year;\n\n    public Book(String title, String author, int year) {\n        this.title = title;\n        this.author = author;\n        this.year = year;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getAuthor() {\n        return author;\n    }\n\n    public int getYear() {\n        return year;\n    }\n}\n\nBook book = new Book(\"Harry Potter and the Sorcerer's Stone\", \"J.K. Rowling\", 1997);",
        "most_similar_instructions": {
            "Create a Java class that represents a book, with attributes such as the title, author, and publication year.": 0.5245901639344261,
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.5185185185185185,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.41791044776119407,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.4057971014492754,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.3835616438356165,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.33333333333333337,
            "Implement a Java class called \"BankAccount\" with attributes \"accountNumber\" and \"balance\" and methods for deposit and withdrawal.\naccountNumber: 123456, depositAmount: 100, withdrawalAmount: 50": 0.33333333333333337,
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.3333333333333333,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.3116883116883117,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.3055555555555556
        },
        "avg_similarity_score": 0.1781725204776191
    },
    {
        "instruction": "Create a Java method that converts a temperature in Fahrenheit to Celsius.\ntemperature_fahrenheit: 72",
        "output": "public double convertToCelsius(double temperatureFahrenheit) {\n    return (temperatureFahrenheit - 32) * 5 / 9;\n}\n\ndouble temperatureFahrenheit = 72;\ndouble temperatureCelsius = convertToCelsius(temperatureFahrenheit);\nSystem.out.println(\"Temperature in Celsius: \" + temperatureCelsius);",
        "most_similar_instructions": {
            "Create a Java program that converts temperature from Celsius to Fahrenheit.\nTemperature in Celsius: 25": 0.5333333333333333,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.4000000000000001,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.4,
            "Create a Java function that determines if a given number is prime.": 0.3703703703703704,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.3636363636363636,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.35897435897435903,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.3448275862068965,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.3333333333333333,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.31578947368421056,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.3125
        },
        "avg_similarity_score": 0.23355044771797756
    },
    {
        "instruction": "Implement a Java method that reverses a given string.\ninput_string: \"hello\"",
        "output": "public String reverseString(String inputString) {\n    return new StringBuilder(inputString).reverse().toString();\n}\n\nString inputString = \"hello\";\nString reversedString = reverseString(inputString);\nSystem.out.println(\"Reversed string: \" + reversedString);",
        "most_similar_instructions": {
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.5625000000000001,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.5517241379310345,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.4827586206896552,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.4827586206896552,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.4666666666666666,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.4615384615384615,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.4444444444444445,
            "Write a Java method to check if a given string is a valid email address.": 0.4444444444444445,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.4444444444444444,
            "In Java, write a method that reverses a list of integers.": 0.43478260869565216
        },
        "avg_similarity_score": 0.26200754187399344
    },
    {
        "instruction": "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}",
        "output": "public int findSum(int[] arr) {\n    int sum = 0;\n\n    for (int num : arr) {\n        sum += num;\n    }\n\n    return sum;\n}\n\nint[] arr = {5, 2, 8, 1, 10};\nint sum = findSum(arr);\nSystem.out.println(\"Sum: \" + sum);",
        "most_similar_instructions": {
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.5957446808510639,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.5909090909090909,
            "Implement a Java function that finds the index of the first occurrence of a given element in an array of integers.\nint[] arr = {5, 10, 2, 15, 8}\nint element = 2": 0.5660377358490567,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5581395348837208,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.5365853658536586,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5333333333333332,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.5116279069767442,
            "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}": 0.5,
            "Implement a Java method that finds the nth Fibonacci number using recursion.\nint n = 5;": 0.4864864864864865,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.47619047619047616
        },
        "avg_similarity_score": 0.2816530885232128
    },
    {
        "instruction": "Write a Java program that prints the numbers from 1 to 100, but for multiples of three, print \"Fizz\" instead of the number, and for multiples of five, print \"Buzz\". For numbers that are multiples of both three and five, print \"FizzBuzz\".",
        "output": "public class FizzBuzz {\n    public static void main(String[] args) {\n        for (int i = 1; i <= 100; i++) {\n            if (i % 3 == 0 && i % 5 == 0) {\n                System.out.println(\"FizzBuzz\");\n            } else if (i % 3 == 0) {\n                System.out.println(\"Fizz\");\n            } else if (i % 5 == 0) {\n                System.out.println(\"Buzz\");\n            } else {\n                System.out.println(i);\n            }\n        }\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program that calculates the factorial of a given number.\n6": 0.2909090909090909,
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.29032258064516125,
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.27586206896551724,
            "Write a Java program that takes in two integers from the user and finds their sum and product.\nEnter First Integer: 5\nEnter Second Integer: 10": 0.2647058823529412,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.26229508196721313,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.25396825396825395,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.25,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.24615384615384614,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.23728813559322035,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.23529411764705882
        },
        "avg_similarity_score": 0.17506065954429278
    },
    {
        "instruction": "Create a Java method that checks if a given string is a valid URL.\nurl: \"https://www.example.com\"",
        "output": "public boolean isValidUrl(String url) {\n    String urlRegex = \"^(https?|ftp)://[\\\\w_-]+(\\\\.[\\\\w_-]+)+([\\\\w.,@?^=%&:/~+#-]*[\\\\w@?^=%&/~+#-])?$\";\n    return url.matches(urlRegex);\n}\n\nString url = \"https://www.example.com\";\nboolean isValid = isValidUrl(url);\nSystem.out.println(\"Is valid URL: \" + isValid);",
        "most_similar_instructions": {
            "Write a Java method to check if a given string is a valid email address.": 0.5882352941176471,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.5294117647058824,
            "Create a Java function that determines if a given number is prime.": 0.5161290322580646,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.5,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.4516129032258065,
            "Write a Java code snippet that checks if a number is a perfect square.\nint num = 16": 0.4444444444444444,
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.43243243243243246,
            "Can you provide a Java code snippet to check if a given string is a palindrome?\nString word = \"level\";": 0.42105263157894735,
            "Implement a Java method that checks if a string is a palindrome or not. A palindrome is a word or phrase that is the same forwards and backwards.\ninput_string: \"madam\"": 0.39999999999999997,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.39999999999999997
        },
        "avg_similarity_score": 0.2334660862208975
    },
    {
        "instruction": "Create a Java program that finds the maximum value in an array of integers.\nArray: [25, 6, 10, 45, 32]",
        "output": "public class MaxValue {\n    public static void main(String[] args) {\n        int[] arr = {25, 6, 10, 45, 32};\n        int max = arr[0];\n        for (int i = 1; i < arr.length; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        System.out.println(\"Maximum value in the array is: \" + max);\n    }}",
        "most_similar_instructions": {
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5853658536585366,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.55,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5116279069767442,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.4878048780487805,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.47619047619047616,
            "Implement a Java function that finds the index of the first occurrence of a given element in an array of integers.\nint[] arr = {5, 10, 2, 15, 8}\nint element = 2": 0.43137254901960786,
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.4285714285714286,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4242424242424242,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.4090909090909091,
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.4000000000000001
        },
        "avg_similarity_score": 0.2593485841571392
    },
    {
        "instruction": "Write a Java program that swaps the values of two variables without using a temporary variable.\nVariable 1: 5\nVariable 2: 10",
        "output": "public class SwapVariables {\n    public static void main(String[] args) {\n        int var1 = 5;\n        int var2 = 10;\n        System.out.println(\"Before swapping: var1 = \" + var1 + \", var2 = \" + var2);\n        var1 = var1 + var2;\n        var2 = var1 - var2;\n        var1 = var1 - var2;\n        System.out.println(\"After swapping: var1 = \" + var1 + \", var2 = \" + var2);\n    }}",
        "most_similar_instructions": {
            "In Java, write a method that swaps the values of two variables.\nint a = 5;\nint b = 10;": 0.6,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.46511627906976744,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4571428571428572,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4444444444444445,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.43902439024390244,
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.4210526315789474,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.41025641025641024,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.4,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.3913043478260869,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.380952380952381
        },
        "avg_similarity_score": 0.2514382827436185
    },
    {
        "instruction": "Design a Java class for a student that stores the student's name, age, and grade. It should have methods for displaying the student's information and updating the grade.\nStudent: Name - \"John Smith\", Age - 18, Grade - 12",
        "output": "public class Student {\n    private String name;\n    private int age;\n    private int grade;\n\n    public Student(String name, int age, int grade) {\n        this.name = name;\n        this.age = age;\n        this.grade = grade;\n    }\n\n    public void displayInformation() {\n        System.out.println(\"Name: \" + name);\n        System.out.println(\"Age: \" + age);\n        System.out.println(\"Grade: \" + grade);\n    }\n\n    public void updateGrade(int newGrade) {\n        grade = newGrade;\n    }\n\n    public static void main(String[] args) {\n        Student student = new Student(\"John Smith\", 18, 12);\n        student.displayInformation();\n        student.updateGrade(11);\n        student.displayInformation();\n    }}",
        "most_similar_instructions": {
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.42105263157894735,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.34375,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.33333333333333337,
            "Design a Java class to represent a circle. Include attributes for radius and methods to calculate the area and circumference of the circle.": 0.32786885245901637,
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.3272727272727273,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.32142857142857145,
            "Create a Java class named \"Student\" with attributes \"name\" (String) and \"age\" (int). Implement getter and setter methods for these attributes.": 0.30508474576271183,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.2950819672131147,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.29411764705882354,
            "Implement a Java class called \"Person\" with attributes \"name\" and \"age\" and a method to check if the person is a minor (below 18 years old).\nname: \"John\", age: 20": 0.29411764705882354
        },
        "avg_similarity_score": 0.16742207847372137
    },
    {
        "instruction": "Create a Java method that converts a string to title case (capitalizing the first letter of each word).\nString: \"hello, world!\"",
        "output": "public class TitleCaseConverter {\n    public static void main(String[] args) {\n        String str = \"hello, world!\";\n        String titleCase = convertToTitleCase(str);\n        System.out.println(\"String in title case: \" + titleCase);\n    }\n\n    public static String convertToTitleCase(String str) {\n        String[] words = str.split(\" \");\n        StringBuilder result = new StringBuilder();\n        for (String word : words) {\n            if (!word.isEmpty()) {\n                result.append(Character.toUpperCase(word.charAt(0)));\n                result.append(word.substring(1));\n                result.append(\" \");\n            }\n        }\n        return result.toString().trim();\n    }}",
        "most_similar_instructions": {
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.4878048780487805,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.4848484848484849,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.4736842105263158,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.4444444444444445,
            "Create a Java method that converts a temperature in Fahrenheit to Celsius.\ntemperature_fahrenheit: 72": 0.4444444444444444,
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.4166666666666667,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.41025641025641024,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.3888888888888889,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.37209302325581395,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.36842105263157887
        },
        "avg_similarity_score": 0.25863675343024795
    },
    {
        "instruction": "Create a Java program that checks if a string contains only numeric characters.\nString: \"12345\"",
        "output": "public class NumericChecker {\n    public static void main(String[] args) {\n        String str = \"12345\";\n        System.out.println(\"Does the string contain only numeric characters? \" + isNumeric(str));\n    }\n\n    public static boolean isNumeric(String str) {\n        if (str == null || str.length() == 0) {\n            return false;\n        }\n        for (int i = 0; i < str.length(); i++) {\n            if (!Character.isDigit(str.charAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }}",
        "most_similar_instructions": {
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.5,
            "Create a Java method that checks if a given string is a valid URL.\nurl: \"https://www.example.com\"": 0.47058823529411764,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.4666666666666667,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.4444444444444445,
            "Create a Java function that determines if a given number is prime.": 0.4444444444444445,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.43749999999999994,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.4,
            "Create a Java method that converts a string to title case (capitalizing the first letter of each word).\nString: \"hello, world!\"": 0.3888888888888889,
            "Write a Java code snippet that checks if a number is a perfect square.\nint num = 16": 0.37500000000000006,
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.3636363636363636
        },
        "avg_similarity_score": 0.23415622393827368
    },
    {
        "instruction": "Design a Java class for a car that stores the car's make, model, year, and color. It should have methods for displaying the car's information and updating the color.\nCar: Make - \"Toyota\", Model - \"Camry\", Year - 2022, Color - \"Black\"",
        "output": "public class Car {\n    private String make;\n    private String model;\n    private int year;\n    private String color;\n\n    public Car(String make, String model, int year, String color) {\n        this.make = make;\n        this.model = model;\n        this.year = year;\n        this.color = color;\n    }\n\n    public void displayInformation() {\n        System.out.println(\"Make: \" + make);\n        System.out.println(\"Model: \" + model);\n        System.out.println(\"Year: \" + year);\n        System.out.println(\"Color: \" + color);\n    }\n\n    public void updateColor(String newColor) {\n        color = newColor;\n    }\n\n    public static void main(String[] args) {\n        Car car = new Car(\"Toyota\", \"Camry\", 2022, \"Black\");\n        car.displayInformation();\n        car.updateColor(\"Red\");\n        car.displayInformation();\n    }}",
        "most_similar_instructions": {
            "Design a Java class for a student that stores the student's name, age, and grade. It should have methods for displaying the student's information and updating the grade.\nStudent: Name - \"John Smith\", Age - 18, Grade - 12": 0.5897435897435896,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.4324324324324324,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.4242424242424242,
            "Design a Java class to represent a circle. Include attributes for radius and methods to calculate the area and circumference of the circle.": 0.3174603174603175,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.3103448275862069,
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.2758620689655173,
            "Implement a Java class that represents a book with attributes such as title, author, and publication year. Create a constructor and getter methods for each attribute.\nbook_title: \"Harry Potter and the Sorcerer's Stone\", book_author: \"J.K. Rowling\", book_year: 1997": 0.26506024096385544,
            "Create a Java class representing a Circle with private attributes for radius and color, and methods to get and set their values.\nCircle radius: 5.0, color: \"red\"": 0.2647058823529412,
            "Implement a Java class for a simple stack with push and pop methods.": 0.2641509433962264,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.2571428571428572
        },
        "avg_similarity_score": 0.1604758732065364
    },
    {
        "instruction": "Create a Java method that generates an array of n random numbers between a given range.\nn=5, range(10, 20)",
        "output": "import java.util.Random;\n\npublic class RandomArray {\n    public static int[] generateRandomArray(int n, int min, int max) {\n        int[] arr = new int[n];\n        Random random = new Random();\n        for (int i = 0; i < n; i++) {\n            arr[i] = random.nextInt(max - min + 1) + min;\n        }\n        return arr;\n    }\n\n    public static void main(String[] args) {\n        int n = 5;\n        int min = 10;\n        int max = 20;\n        int[] arr = generateRandomArray(n, min, max);\n        System.out.println(\"Random Array:\");\n        for (int num : arr) {\n            System.out.println(num);\n        }\n    }}",
        "most_similar_instructions": {
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.45,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.4186046511627907,
            "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};": 0.4090909090909091,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.4090909090909091,
            "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;": 0.39999999999999997,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.3902439024390244,
            "Create a Java program that finds the maximum value in an array of integers.\nArray: [25, 6, 10, 45, 32]": 0.3902439024390244,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.3902439024390244,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.38095238095238093,
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.37209302325581395
        },
        "avg_similarity_score": 0.2630626651053596
    },
    {
        "instruction": "Implement a Java method to reverse an array of strings.\n[\"apple\", \"banana\", \"cherry\", \"date\"]",
        "output": "public class ArrayReverse {\n    public static String[] reverseArray(String[] arr) {\n        int start = 0;\n        int end = arr.length - 1;\n        while (start < end) {\n            String temp = arr[start];\n            arr[start] = arr[end];\n            arr[end] = temp;\n            start++;\n            end--;\n        }\n        return arr;\n    }\n    \n    public static void main(String[] args) {\n        String[] arr = {\"apple\", \"banana\", \"cherry\", \"date\"};\n        String[] reversedArr = reverseArray(arr);\n        System.out.println(\"Reversed Array:\");\n        for (String str : reversedArr) {\n            System.out.println(str);\n        }\n    }\n}",
        "most_similar_instructions": {
            "Write a Java code snippet that reverses an array of strings in-place.\nString[] arr = {\"apple\", \"banana\", \"cherry\"}": 0.5625000000000001,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.48484848484848486,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.47058823529411764,
            "Please write a Java method to remove all duplicate elements from an ArrayList of strings.\nArrayList<String> list = new ArrayList<>(Arrays.asList(\"apple\", \"orange\", \"banana\", \"apple\", \"pear\", \"banana\"));": 0.4285714285714286,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.42857142857142855,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.3783783783783784,
            "Create a Java method that takes an array of strings as input and returns the longest string in the array.\n[\"cat\", \"dog\", \"elephant\", \"lion\"]": 0.3684210526315789,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.3529411764705882,
            "Can you provide a Java code snippet to find the length of the longest common prefix in an array of strings?\nString[] strs = {\"flower\", \"flow\", \"flight\"};": 0.35000000000000003,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.3448275862068965
        },
        "avg_similarity_score": 0.23474181183071427
    },
    {
        "instruction": "Create a Java class for a simple calculator with methods for square and square root.\nnumber=25",
        "output": "public class SimpleCalculator {\n    public static double square(double number) {\n        return number * number;\n    }\n\n    public static double squareRoot(double number) {\n        if (number < 0) {\n            throw new IllegalArgumentException(\"Cannot take square root of negative number\");\n        }\n        return Math.sqrt(number);\n    }\n\n    public static void main(String[] args) {\n        double number = 25;\n        System.out.println(\"Square: \" + square(number));\n        System.out.println(\"Square root: \" + squareRoot(number));\n    }\n}",
        "most_similar_instructions": {
            "Create a Java class to implement a basic calculator with methods for addition, subtraction, multiplication, and division.": 0.5882352941176471,
            "Implement a Java class for a simple stack with push and pop methods.": 0.5333333333333333,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.5142857142857143,
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.45714285714285713,
            "Create a Java class that represents a book, with attributes such as the title, author, and publication year.": 0.39999999999999997,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.39999999999999997,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.372093023255814,
            "Create a Java class named \"Student\" with attributes \"name\" (String) and \"age\" (int). Implement getter and setter methods for these attributes.": 0.36842105263157887,
            "Create a Java class representing a Circle with private attributes for radius and color, and methods to get and set their values.\nCircle radius: 5.0, color: \"red\"": 0.35555555555555557,
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.35294117647058826
        },
        "avg_similarity_score": 0.2176988649291717
    },
    {
        "instruction": "Design a Java class for a student with methods to store and retrieve their name and age.\n\"John Doe\", 20",
        "output": "public class Student {\n    private String name;\n    private int age;\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public static void main(String[] args) {\n        Student student = new Student();\n        student.setName(\"John Doe\");\n        student.setAge(20);\n        System.out.println(\"Name: \" + student.getName());\n        System.out.println(\"Age: \" + student.getAge());\n    }\n}",
        "most_similar_instructions": {
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.5263157894736842,
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.48275862068965514,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.47826086956521735,
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.4324324324324324,
            "Create a Java class for a simple calculator with methods for square and square root.\nnumber=25": 0.4324324324324324,
            "Implement a Java class for a simple stack with push and pop methods.": 0.4242424242424242,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.4210526315789474,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.4074074074074075,
            "Create a Java class named \"Student\" with attributes \"name\" (String) and \"age\" (int). Implement getter and setter methods for these attributes.": 0.3902439024390244,
            "Design a Java class for a student that stores the student's name, age, and grade. It should have methods for displaying the student's information and updating the grade.\nStudent: Name - \"John Smith\", Age - 18, Grade - 12": 0.37931034482758624
        },
        "avg_similarity_score": 0.20374348412483131
    },
    {
        "instruction": "Implement a Java program that converts a decimal number to binary.\nint decimal = 10;",
        "output": "public class DecimalToBinary {\n    public static String convertToBinary(int decimal) {\n        StringBuilder binary = new StringBuilder();\n        while (decimal > 0) {\n            binary.insert(0, decimal % 2);\n            decimal /= 2;\n        }\n        return binary.toString();\n    }\n\n    public static void main(String[] args) {\n        int decimal = 10;\n        System.out.println(\"Binary representation: \" + convertToBinary(decimal));\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4444444444444445,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.4242424242424242,
            "Create a Java method that converts a temperature in Fahrenheit to Celsius.\ntemperature_fahrenheit: 72": 0.4137931034482759,
            "Create a Java program that converts temperature from Celsius to Fahrenheit.\nTemperature in Celsius: 25": 0.4137931034482759,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.4137931034482759,
            "Implement a Java method that finds the nth Fibonacci number using recursion.\nint n = 5;": 0.4137931034482759,
            "Write a Java code snippet that checks if a number is a perfect square.\nint num = 16": 0.3870967741935484,
            "Create a Java function that determines if a given number is prime.": 0.3846153846153846,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.3846153846153846,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.3783783783783784
        },
        "avg_similarity_score": 0.25384676687299695
    },
    {
        "instruction": "Create a Java method that finds the second largest number in an array of integers.\nint[] numbers = {7, 15, 3, 9, 10};",
        "output": "public class SecondLargestNumberFinder {\n    public static int findSecondLargest(int[] numbers) {\n        int largest = Integer.MIN_VALUE;\n        int secondLargest = Integer.MIN_VALUE;\n        for (int num : numbers) {\n            if (num > largest) {\n                secondLargest = largest;\n                largest = num;\n            } else if (num > secondLargest && num < largest) {\n                secondLargest = num;\n            }\n        }\n        return secondLargest;\n    }\n\n    public static void main(String[] args) {\n        int[] numbers = {7, 15, 3, 9, 10};\n        System.out.println(\"Second largest number: \" + findSecondLargest(numbers));\n    }\n}",
        "most_similar_instructions": {
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.5957446808510639,
            "Create a Java program that finds the maximum value in an array of integers.\nArray: [25, 6, 10, 45, 32]": 0.5714285714285713,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5581395348837208,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.5454545454545454,
            "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};": 0.5333333333333332,
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.5,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.47619047619047616,
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.47619047619047616,
            "Create a Java method that generates an array of n random numbers between a given range.\nn=5, range(10, 20)": 0.46511627906976744,
            "Implement a Java function that finds the index of the first occurrence of a given element in an array of integers.\nint[] arr = {5, 10, 2, 15, 8}\nint element = 2": 0.45283018867924524
        },
        "avg_similarity_score": 0.2763487327228981
    },
    {
        "instruction": "Create a Java method that checks if a given string is an anagram of another string.\nString first = \"listen\";\nString second = \"silent\";",
        "output": "import java.util.Arrays;\n\npublic class AnagramChecker {\n    public static boolean isAnagram(String first, String second) {\n        char[] firstArray = first.toCharArray();\n        char[] secondArray = second.toCharArray();\n        Arrays.sort(firstArray);\n        Arrays.sort(secondArray);\n        return Arrays.equals(firstArray, secondArray);\n    }\n\n    public static void main(String[] args) {\n        String first = \"listen\";\n        String second = \"silent\";\n        if (isAnagram(first, second)) {\n            System.out.println(first + \" and \" + second + \" are anagrams.\");\n        } else {\n            System.out.println(first + \" and \" + second + \" are not anagrams.\");\n        }\n    }\n}",
        "most_similar_instructions": {
            "Create a Java method that checks if a given string is a valid URL.\nurl: \"https://www.example.com\"": 0.5365853658536586,
            "Create a Java program that checks if a string contains only numeric characters.\nString: \"12345\"": 0.4864864864864865,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.4864864864864865,
            "Write a Java method that checks if two strings are anagrams of each other.\n\"listen\", \"silent\"": 0.47368421052631576,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.4705882352941177,
            "Create a Java function that determines if a given number is prime.": 0.4705882352941177,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.46153846153846156,
            "Write a Java method to check if a given string is a valid email address.": 0.43243243243243246,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.4285714285714286,
            "Create a Java method that converts a string to title case (capitalizing the first letter of each word).\nString: \"hello, world!\"": 0.4186046511627907
        },
        "avg_similarity_score": 0.2460496114163301
    },
    {
        "instruction": "Create a Java program that generates a random number between 1 and 100 and asks the user to guess the number.",
        "output": "import java.util.Random;\nimport java.util.Scanner;\n\npublic class GuessNumber {\n    public static void main(String[] args) {\n        Random random = new Random();\n        int randomNumber = random.nextInt(100) + 1;\n        Scanner scanner = new Scanner(System.in);\n        int guessedNumber;\n\n        do {\n            System.out.print(\"Guess a number between 1 and 100: \");\n            guessedNumber = scanner.nextInt();\n            if (guessedNumber < randomNumber) {\n                System.out.println(\"Too low. Try again.\");\n            } else if (guessedNumber > randomNumber) {\n                System.out.println(\"Too high. Try again.\");\n            } else {\n                System.out.println(\"Congratulations! You guessed the number.\");\n            }\n        } while (guessedNumber != randomNumber);\n\n        scanner.close();\n    }}",
        "most_similar_instructions": {
            "Implement a Java program that converts a decimal number to binary.\nint decimal = 10;": 0.4,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.4,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.3888888888888889,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.3888888888888889,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3888888888888889,
            "Create a Java function that determines if a given number is prime.": 0.36363636363636365,
            "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;": 0.35555555555555557,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.35555555555555557,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.35294117647058826,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.3414634146341463
        },
        "avg_similarity_score": 0.24885828508743865
    },
    {
        "instruction": "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.",
        "output": "public class Rectangle {\n    private double length;\n    private double width;\n\n    public Rectangle(double length, double width) {\n        this.length = length;\n        this.width = width;\n    }\n\n    public double calculateArea() {\n        return length * width;\n    }\n\n    public static void main(String[] args) {\n        Rectangle rectangle = new Rectangle(5.0, 3.0);\n        System.out.println(\"Area: \" + rectangle.calculateArea());\n    }}",
        "most_similar_instructions": {
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.5714285714285714,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.5660377358490567,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.48000000000000004,
            "Implement a Java class for a point with x and y coordinates and a method to calculate its distance from the origin.\nx = 3, y = 4": 0.48000000000000004,
            "Design a Java class to represent a circle. Include attributes for radius and methods to calculate the area and circumference of the circle.": 0.4680851063829787,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.4680851063829787,
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.4390243902439025,
            "Create a Java class that represents a book, with attributes such as the title, author, and publication year.": 0.42857142857142855,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.4166666666666667,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.41379310344827586
        },
        "avg_similarity_score": 0.27671651505298134
    },
    {
        "instruction": "Design a Java method that calculates the average of an array of doubles.\ndouble[] numbers = {1.5, 2.5, 3.5, 4.5, 5.5}",
        "output": "public class AverageCalculator {\n    public static double calculateAverage(double[] numbers) {\n        double sum = 0;\n        for (double number : numbers) {\n            sum += number;\n        }\n        return sum / numbers.length;\n    }\n\n    public static void main(String[] args) {\n        double[] numbers = {1.5, 2.5, 3.5, 4.5, 5.5};\n        System.out.println(\"Average: \" + calculateAverage(numbers));\n    }}",
        "most_similar_instructions": {
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.5957446808510639,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.5490196078431373,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.5238095238095238,
            "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]": 0.5,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4999999999999999,
            "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};": 0.4583333333333333,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.4363636363636364,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.43478260869565216,
            "Create a Java method that finds the second largest number in an array of integers.\nint[] numbers = {7, 15, 3, 9, 10};": 0.4255319148936171,
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.4255319148936171
        },
        "avg_similarity_score": 0.24635385119616057
    },
    {
        "instruction": "Write a Java program that checks if a given string is a palindrome sentence (ignoring spaces and punctuation).\nString sentence = \"A man, a plan, a canal, Panama!\"",
        "output": "public class PalindromeSentence {\n    public static boolean isPalindromeSentence(String sentence) {\n        sentence = sentence.toLowerCase().replaceAll(\"[^a-z]\", \"\");\n        int length = sentence.length();\n        for (int i = 0; i < length / 2; i++) {\n            if (sentence.charAt(i) != sentence.charAt(length - 1 - i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        String sentence = \"A man, a plan, a canal, Panama!\";\n        if (isPalindromeSentence(sentence)) {\n            System.out.println(sentence + \" is a palindrome sentence.\");\n        } else {\n            System.out.println(sentence + \" is not a palindrome sentence.\");\n        }\n    }}",
        "most_similar_instructions": {
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.5909090909090909,
            "Create a Java method that checks if a given string is a valid URL.\nurl: \"https://www.example.com\"": 0.43478260869565216,
            "Can you provide a Java code snippet to check if a given string is a palindrome?\nString word = \"level\";": 0.43478260869565216,
            "Write a Java method to check if a given string is a valid email address.": 0.42857142857142855,
            "Create a Java program that checks if a string contains only numeric characters.\nString: \"12345\"": 0.42857142857142855,
            "Implement a Java method that checks if a string is a palindrome or not. A palindrome is a word or phrase that is the same forwards and backwards.\ninput_string: \"madam\"": 0.41379310344827586,
            "Write a Java code snippet that checks if a number is a perfect square.\nint num = 16": 0.409090909090909,
            "Create a Java method that checks if a given string is an anagram of another string.\nString first = \"listen\";\nString second = \"silent\";": 0.40816326530612246,
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.37037037037037035,
            "Create a Java function that determines if a given number is prime.": 0.358974358974359
        },
        "avg_similarity_score": 0.21617303729196696
    },
    {
        "instruction": "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2",
        "output": "public class ElementCounter {\n    public static int countOccurrences(int[] arr, int element) {\n        int count = 0;\n        for (int num : arr) {\n            if (num == element) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    public static void main(String[] args) {\n        int[] numbers = {1, 2, 3, 2, 4, 2, 5};\n        int element = 2;\n        int occurrenceCount = countOccurrences(numbers, element);\n        System.out.println(occurrenceCount);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.5957446808510639,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5833333333333334,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5777777777777778,
            "Design a Java method that calculates the average of an array of doubles.\ndouble[] numbers = {1.5, 2.5, 3.5, 4.5, 5.5}": 0.56,
            "Implement a Java function that finds the index of the first occurrence of a given element in an array of integers.\nint[] arr = {5, 10, 2, 15, 8}\nint element = 2": 0.5357142857142857,
            "Create a Java program to count the frequency of each element in an array of integers and store it in a HashMap.\nint[] arr = {2, 3, 2, 4, 5, 3, 4}": 0.5357142857142857,
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.5106382978723404,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.5098039215686274,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.48,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.4782608695652174
        },
        "avg_similarity_score": 0.2818515231491652
    },
    {
        "instruction": "Create a Java program that sorts an array of strings in alphabetical order.\n[\"banana\", \"apple\", \"cherry\", \"date\"]",
        "output": "import java.util.Arrays;\n\npublic class StringSorter {\n    public static void sortStrings(String[] arr) {\n        Arrays.sort(arr);\n        for (String str : arr) {\n            System.out.println(str);\n        }\n    }\n    \n    public static void main(String[] args) {\n        String[] fruits = {\"banana\", \"apple\", \"cherry\", \"date\"};\n        sortStrings(fruits);\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java method to reverse an array of strings.\n[\"apple\", \"banana\", \"cherry\", \"date\"]": 0.5806451612903226,
            "Write a Java code snippet that reverses an array of strings in-place.\nString[] arr = {\"apple\", \"banana\", \"cherry\"}": 0.5714285714285715,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.48780487804878053,
            "Create a Java method that takes an array of strings as input and returns the longest string in the array.\n[\"cat\", \"dog\", \"elephant\", \"lion\"]": 0.4390243902439025,
            "Create a Java program that finds the maximum value in an array of integers.\nArray: [25, 6, 10, 45, 32]": 0.4324324324324324,
            "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};": 0.39999999999999997,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.3888888888888889,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.37837837837837834,
            "Create a Java program that converts temperature from Celsius to Fahrenheit.\nTemperature in Celsius: 25": 0.37500000000000006,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.36842105263157887
        },
        "avg_similarity_score": 0.23945942102040724
    },
    {
        "instruction": "Describe a Java method that returns the number of characters in the longest word of a sentence.\n\"The quick brown fox\"",
        "output": "public static int findLongestWordLength(String sentence) {\n    String[] words = sentence.split(\" \");\n    int maxLength = 0;\n    \n    for (String word : words) {\n        if (word.length() > maxLength) {\n            maxLength = word.length();\n        }\n    }\n    \n    return maxLength;\n}\n\nString sentence = \"The quick brown fox\";\nint longestWordLength = findLongestWordLength(sentence);\nSystem.out.println(longestWordLength);",
        "most_similar_instructions": {
            "Implement a Java method to find the length of the longest word in a given sentence.\nSentence: \"The quick brown fox jumps over the lazy dog\"": 0.5957446808510638,
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.5,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.4736842105263158,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.4444444444444444,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.42105263157894735,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.41025641025641024,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.39999999999999997,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.3902439024390244,
            "Create a Java method that finds the second largest number in an array of integers.\nint[] numbers = {7, 15, 3, 9, 10};": 0.37209302325581395,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.37209302325581395
        },
        "avg_similarity_score": 0.2512973759493972
    },
    {
        "instruction": "Create a Java program that counts and prints the number of even and odd integers in an array.\n[1, 2, 3, 4, 5]",
        "output": "public class EvenOddCounter {\n    public static void countEvenOdd(int[] arr) {\n        int evenCount = 0;\n        int oddCount = 0;\n        \n        for (int num : arr) {\n            if (num % 2 == 0) {\n                evenCount++;\n            } else {\n                oddCount++;\n            }\n        }\n        \n        System.out.println(\"Number of even integers: \" + evenCount);\n        System.out.println(\"Number of odd integers: \" + oddCount);\n    }\n    \n    public static void main(String[] args) {\n        int[] numbers = {1, 2, 3, 4, 5};\n        countEvenOdd(numbers);\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.5833333333333334,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.5660377358490566,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.5652173913043478,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5652173913043478,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.5,
            "Design a Java method that calculates the average of an array of doubles.\ndouble[] numbers = {1.5, 2.5, 3.5, 4.5, 5.5}": 0.4999999999999999,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.4897959183673469,
            "Create a Java program to count the frequency of each element in an array of integers and store it in a HashMap.\nint[] arr = {2, 3, 2, 4, 5, 3, 4}": 0.4814814814814815,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.48,
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.46511627906976744
        },
        "avg_similarity_score": 0.2884184492883881
    },
    {
        "instruction": "Design a Java program that calculates the sum of all multiples of 3 or 5 below a given number.\nint limit = 20;",
        "output": "public class MultiplesSumCalculator {\n    public static int calculateMultiplesSum(int limit) {\n        int sum = 0;\n\n        for (int i = 0; i < limit; i++) {\n            if (i % 3 == 0 || i % 5 == 0) {\n                sum += i;\n            }\n        }\n\n        return sum;\n    }\n\n    public static void main(String[] args) {\n        int limit = 20;\n        System.out.println(calculateMultiplesSum(limit));\n    }}",
        "most_similar_instructions": {
            "Write a Java program that calculates the factorial of a given number.\n6": 0.5714285714285714,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.5365853658536586,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4888888888888889,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.4888888888888889,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.4285714285714286,
            "Design a Java method that calculates the average of an array of doubles.\ndouble[] numbers = {1.5, 2.5, 3.5, 4.5, 5.5}": 0.4255319148936171,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.41025641025641024,
            "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]": 0.3902439024390244,
            "Implement a Java program that converts a decimal number to binary.\nint decimal = 10;": 0.3888888888888889,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3783783783783784
        },
        "avg_similarity_score": 0.2581562684805864
    },
    {
        "instruction": "Create a Java method that performs linear search to find the index of a given element in an array.\narray: [4, 2, 6, 8, 1], element: 6",
        "output": "public class LinearSearch {\n    public static int searchElement(int[] array, int element) {\n        for (int i = 0; i < array.length; i++) {\n            if (array[i] == element) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    public static void main(String[] args) {\n        int[] array = {4, 2, 6, 8, 1};\n        int element = 6;\n\n        System.out.println(searchElement(array, element));\n    }}",
        "most_similar_instructions": {
            "Implement a Java function that finds the index of the first occurrence of a given element in an array of integers.\nint[] arr = {5, 10, 2, 15, 8}\nint element = 2": 0.5172413793103449,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5106382978723405,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.5,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.4897959183673469,
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.4897959183673469,
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.46808510638297873,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.4615384615384615,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.4583333333333333,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.4444444444444444,
            "Create a Java program that finds the maximum value in an array of integers.\nArray: [25, 6, 10, 45, 32]": 0.425531914893617
        },
        "avg_similarity_score": 0.2738879574880229
    },
    {
        "instruction": "Create a Java method that removes all duplicates from an ArrayList of strings.\n[\"apple\", \"banana\", \"orange\", \"apple\", \"pear\", \"banana\"]",
        "output": "import java.util.ArrayList;\nimport java.util.LinkedHashSet;\n\npublic class DuplicatesRemover {\n    public static ArrayList<String> removeDuplicates(ArrayList<String> list) {\n        LinkedHashSet<String> set = new LinkedHashSet<>(list);\n        return new ArrayList<>(set);\n    }\n\n    public static void main(String[] args) {\n        ArrayList<String> fruits = new ArrayList<>();\n        fruits.add(\"apple\");\n        fruits.add(\"banana\");\n        fruits.add(\"orange\");\n        fruits.add(\"apple\");\n        fruits.add(\"pear\");\n        fruits.add(\"banana\");\n\n        ArrayList<String> uniqueFruits = removeDuplicates(fruits);\n        System.out.println(\"Fruits without duplicates: \" + uniqueFruits);\n    }\n}",
        "most_similar_instructions": {
            "Please write a Java method to remove all duplicate elements from an ArrayList of strings.\nArrayList<String> list = new ArrayList<>(Arrays.asList(\"apple\", \"orange\", \"banana\", \"apple\", \"pear\", \"banana\"));": 0.5957446808510638,
            "Create a Java program that sorts an array of strings in alphabetical order.\n[\"banana\", \"apple\", \"cherry\", \"date\"]": 0.5,
            "Implement a Java method to reverse an array of strings.\n[\"apple\", \"banana\", \"cherry\", \"date\"]": 0.48484848484848486,
            "Write a Java program that removes all duplicate elements from an ArrayList of integers.\n[3, 4, 7, 4, 9, 7, 10]": 0.45,
            "Write a Java code snippet that reverses an array of strings in-place.\nString[] arr = {\"apple\", \"banana\", \"cherry\"}": 0.43243243243243246,
            "Create a Java method that takes an array of strings as input and returns the longest string in the array.\n[\"cat\", \"dog\", \"elephant\", \"lion\"]": 0.372093023255814,
            "Create a Java method that generates an array of n random numbers between a given range.\nn=5, range(10, 20)": 0.35,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.3414634146341463,
            "Create a Java method that finds the second largest number in an array of integers.\nint[] numbers = {7, 15, 3, 9, 10};": 0.3414634146341463,
            "Create a Java method that checks if a given string is an anagram of another string.\nString first = \"listen\";\nString second = \"silent\";": 0.3414634146341463
        },
        "avg_similarity_score": 0.21908337881065648
    },
    {
        "instruction": "Design a Java class representing a shape with an abstract method to calculate its area. Create concrete classes Circle and Rectangle that inherit from the Shape class and implement the area calculation method.",
        "output": "public abstract class Shape {\n    public abstract double calculateArea();\n}\n\npublic class Circle extends Shape {\n    private double radius;\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public double calculateArea() {\n        return Math.PI * radius * radius;\n    }\n}\n\npublic class Rectangle extends Shape {\n    private double length;\n    private double width;\n\n    public Rectangle(double length, double width) {\n        this.length = length;\n        this.width = width;\n    }\n\n    public double calculateArea() {\n        return length * width;\n   }\n\n    public static void main(String[] args) {\n        Shape circle = new Circle(5);\n        System.out.println(\"Area of circle: \" + circle.calculateArea());\n\n        Shape rectangle = new Rectangle(3, 4);\n        System.out.println(\"Area of rectangle: \" + rectangle.calculateArea());\n    }\n}",
        "most_similar_instructions": {
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.43137254901960786,
            "Implement a Java class for a point with x and y coordinates and a method to calculate its distance from the origin.\nx = 3, y = 4": 0.3728813559322034,
            "Design a Java class to represent a circle. Include attributes for radius and methods to calculate the area and circumference of the circle.": 0.35714285714285715,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.3548387096774193,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.3529411764705882,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.3508771929824562,
            "Design a Java class for a student with methods to store and retrieve their name and age.\n\"John Doe\", 20": 0.339622641509434,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.31746031746031744,
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.3098591549295775,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.3050847457627119
        },
        "avg_similarity_score": 0.19719164042411438
    },
    {
        "instruction": "Create a Java class that implements the Runnable interface and overrides the run() method to make it print \"Hello, world!\" when executed. Then create a thread using this class and start it.",
        "output": "public class HelloWorldThread implements Runnable {\n    public void run() {\n        System.out.println(\"Hello, world!\");\n    }\n\n    public static void main(String[] args) {\n        Thread thread = new Thread(new HelloWorldThread());\n        thread.start();\n    }\n}",
        "most_similar_instructions": {
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.2909090909090909,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.28571428571428575,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.28571428571428575,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.2857142857142857,
            "Create a Java class to implement a basic calculator with methods for addition, subtraction, multiplication, and division.": 0.2857142857142857,
            "Create a Java class that represents a book, with attributes such as the title, author, and publication year.": 0.28,
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.2711864406779661,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.2692307692307692,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.2692307692307692,
            "Create a Java class named \"Person\" with the following attributes: name (String), age (int), and height (double). Implement a constructor to initialize these attributes and a method named \"displayInfo\" to print the values of these attributes.": 0.2647058823529412
        },
        "avg_similarity_score": 0.198043262540108
    },
    {
        "instruction": "Write a Java program to reverse a string using recursion.\nString input = \"Hello, world!\"",
        "output": "public class StringReverser {\n    public static String reverseString(String input) {\n        if (input.isEmpty()) {\n            return input;\n        } else {\n            return reverseString(input.substring(1)) + input.charAt(0);\n        }\n    }\n\n    public static void main(String[] args) {\n        String input = \"Hello, world!\";\n        String reversed = reverseString(input);\n        System.out.println(\"Reversed string: \" + reversed);\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java method to reverse a string without using any built-in functions.": 0.5,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.4827586206896552,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.4615384615384615,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.45161290322580644,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.45161290322580644,
            "Create a Java program that checks if a string contains only numeric characters.\nString: \"12345\"": 0.4137931034482759,
            "Write a Java method to check if a given string is a valid email address.": 0.4137931034482759,
            "Create a Java method that converts a string to title case (capitalizing the first letter of each word).\nString: \"hello, world!\"": 0.4,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.3783783783783784,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.375
        },
        "avg_similarity_score": 0.2245584826330945
    },
    {
        "instruction": "Design a Java class representing a person with properties name and age. Provide getters and setters for these properties.",
        "output": "public class Person {\n    private String name;\n    private int age;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n}",
        "most_similar_instructions": {
            "Create a Java class named \"Student\" with attributes \"name\" (String) and \"age\" (int). Implement getter and setter methods for these attributes.": 0.5,
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.5,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.47619047619047616,
            "Design a Java class for a student with methods to store and retrieve their name and age.\n\"John Doe\", 20": 0.46153846153846156,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.43243243243243246,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.4186046511627907,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.4150943396226416,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.39999999999999997,
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.37837837837837834,
            "Implement a Java class for a simple stack with push and pop methods.": 0.37499999999999994
        },
        "avg_similarity_score": 0.1963268855838636
    },
    {
        "instruction": "Create a Java class that represents a student with properties name and grade. Provide a parameterized constructor and a toString() method that returns a string representation of the student's information.",
        "output": "public class Student {\n    private String name;\n    private int grade;\n\n    public Student(String name, int grade) {\n        this.name = name;\n        this.grade = grade;\n    }\n\n    @Override\n    public String toString() {\n        return \"Student{name='\" + name + \"', grade=\" + grade + \"}\";\n    }\n}",
        "most_similar_instructions": {
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.5454545454545454,
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.5,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.42105263157894735,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.40740740740740744,
            "Design a Java class representing a person with properties name and age. Provide getters and setters for these properties.": 0.39999999999999997,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.39999999999999997,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.3928571428571428,
            "Create a Java class named \"Person\" with the following attributes: name (String), age (int), and height (double). Implement a constructor to initialize these attributes and a method named \"displayInfo\" to print the values of these attributes.": 0.3880597014925373,
            "Create a Java class that represents a book, with attributes such as the title, author, and publication year.": 0.3673469387755102,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.36065573770491804
        },
        "avg_similarity_score": 0.23598668968171518
    },
    {
        "instruction": "Write a Java program to sort an array of strings in alphabetical order.\nString[] names = {\"John\", \"Emma\", \"Adam\", \"Zoe\"};",
        "output": "import java.util.Arrays;\n\npublic class StringSorter {\n    public static void sortStrings(String[] names) {\n        Arrays.sort(names);\n    }\n\n    public static void main(String[] args) {\n        String[] names = {\"John\", \"Emma\", \"Adam\", \"Zoe\"};\n        sortStrings(names);\n        System.out.println(Arrays.toString(names));\n    }\n}",
        "most_similar_instructions": {
            "Create a Java program that sorts an array of strings in alphabetical order.\n[\"banana\", \"apple\", \"cherry\", \"date\"]": 0.5555555555555555,
            "Write a Java code snippet that reverses an array of strings in-place.\nString[] arr = {\"apple\", \"banana\", \"cherry\"}": 0.4864864864864865,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.47368421052631576,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.42857142857142855,
            "Implement a Java method to reverse an array of strings.\n[\"apple\", \"banana\", \"cherry\", \"date\"]": 0.4242424242424242,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.4186046511627907,
            "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}": 0.3902439024390244,
            "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};": 0.380952380952381,
            "Write a Java program that sorts an array of objects based on a specific property in ascending order.\nStudent class: String name, int age\narray: [{name: \"John\", age: 25}, {name: \"Alice\", age: 20}, {name: \"Bob\", age: 30}]\nSort by age": 0.37288135593220345,
            "Write a Java program to reverse a string using recursion.\nString input = \"Hello, world!\"": 0.36363636363636365
        },
        "avg_similarity_score": 0.22484163333944726
    },
    {
        "instruction": "Implement a Java method that takes a string as input and returns true if it is a palindrome (reads the same forwards and backwards), false otherwise.\nString input = \"level\";",
        "output": "public class PalindromeChecker {\n    public static boolean isPalindrome(String input) {\n        String reversed = new StringBuilder(input).reverse().toString();\n        return input.equals(reversed);\n    }\n\n    public static void main(String[] args) {\n        String input = \"level\";\n        boolean isPalindrome = isPalindrome(input);\n        System.out.println(\"Is palindrome? \" + isPalindrome);\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java method that checks if a string is a palindrome or not. A palindrome is a word or phrase that is the same forwards and backwards.\ninput_string: \"madam\"": 0.5333333333333333,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.5306122448979592,
            "Write a Java method that takes an integer as input and determines if it is prime or not.": 0.46808510638297873,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.46808510638297873,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.4528301886792453,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.4390243902439025,
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.4285714285714286,
            "Create a Java method that takes an array of strings as input and returns the longest string in the array.\n[\"cat\", \"dog\", \"elephant\", \"lion\"]": 0.4150943396226415,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.4090909090909091,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.391304347826087
        },
        "avg_similarity_score": 0.22571164387066814
    },
    {
        "instruction": "Design a Java interface named Printable with an abstract method print(). Implement the interface in a class named Document and override the print() method to print \"Printing document...\".",
        "output": "public interface Printable {\n    void print();\n}\n\npublic class Document implements Printable {\n    public void print() {\n        System.out.println(\"Printing document...\");\n    }\n}",
        "most_similar_instructions": {
            "Design a Java class representing a shape with an abstract method to calculate its area. Create concrete classes Circle and Rectangle that inherit from the Shape class and implement the area calculation method.": 0.3934426229508197,
            "Create a Java class named \"Person\" with the following attributes: name (String), age (int), and height (double). Implement a constructor to initialize these attributes and a method named \"displayInfo\" to print the values of these attributes.": 0.31250000000000006,
            "Create a Java class that implements the Runnable interface and overrides the run() method to make it print \"Hello, world!\" when executed. Then create a thread using this class and start it.": 0.30000000000000004,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.29629629629629634,
            "Describe a Java method that returns the number of characters in the longest word of a sentence.\n\"The quick brown fox\"": 0.28571428571428575,
            "Create a Java class named \"BankAccount\" with attributes \"accountNumber\" (String) and \"balance\" (double). Implement getter and setter methods for these attributes, and a method named \"deposit\" that takes an amount and adds it to the balance.": 0.28125000000000006,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.27906976744186046,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.2692307692307692,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.26666666666666666,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.26666666666666666
        },
        "avg_similarity_score": 0.1907915632480167
    },
    {
        "instruction": "Write a Java program to find the sum of all the even numbers between 1 and a given number (inclusive) using a for loop.\nNumber: 10",
        "output": "public class EvenSumCalculator {\n    public static int calculateEvenSum(int number) {\n        int sum = 0;\n        for (int i = 2; i <= number; i+=2) {\n            sum += i;\n        }\n        return sum;\n    }\n\n    public static void main(String[] args) {\n        int number = 10;\n        int evenSum = calculateEvenSum(number);\n        System.out.println(\"Sum of even numbers between 1 and \" + number + \": \" + evenSum);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.5365853658536585,
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.5217391304347826,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.4897959183673469,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.4888888888888889,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.46153846153846156,
            "Design a Java program that calculates the sum of all multiples of 3 or 5 below a given number.\nint limit = 20;": 0.41666666666666663,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.40816326530612246,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.3913043478260869,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.3773584905660377,
            "Write a Java program that swaps the values of two variables without using a temporary variable.\nVariable 1: 5\nVariable 2: 10": 0.37500000000000006
        },
        "avg_similarity_score": 0.24662563069853902
    },
    {
        "instruction": "Implement a Java method that takes a sorted array of integers and a target value, and returns the index position of the target value in the array using binary search.\nint[] numbers = {2, 4, 6, 8, 10};\nTarget: 6",
        "output": "public class BinarySearch {\n    public static int search(int[] numbers, int target) {\n        int left = 0;\n        int right = numbers.length - 1;\n\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n\n            if (numbers[mid] == target) {\n                return mid;\n            }\n\n            if (numbers[mid] < target) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n\n        return -1;\n    }\n\n    public static void main(String[] args) {\n        int[] numbers = {2, 4, 6, 8, 10};\n        int target = 6;\n        int index = search(numbers, target);\n        System.out.println(\"Index of \" + target + \": \" + index);\n    }\n}",
        "most_similar_instructions": {
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.4927536231884058,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.4262295081967213,
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.4262295081967213,
            "Create a Java method that takes an array of strings as input and returns the longest string in the array.\n[\"cat\", \"dog\", \"elephant\", \"lion\"]": 0.4126984126984126,
            "Create a Java method that performs linear search to find the index of a given element in an array.\narray: [4, 2, 6, 8, 1], element: 6": 0.3939393939393939,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.3728813559322034,
            "Implement a Java function that finds the index of the first occurrence of a given element in an array of integers.\nint[] arr = {5, 10, 2, 15, 8}\nint element = 2": 0.3714285714285714,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.37037037037037035,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.36666666666666664,
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.3636363636363637
        },
        "avg_similarity_score": 0.2392456003395838
    },
    {
        "instruction": "Implement a Java program to calculate the factorial of a given positive integer.\n7",
        "output": "public static int factorial(int num) {\n    if (num == 0) {\n        return 1;\n    }\n    int result = 1;\n    for (int i = 1; i <= num; i++) {\n        result *= i;\n    }\n    return result;\n}\n\nint num = 7;\nint factorial = factorial(num);\nSystem.out.println(factorial);",
        "most_similar_instructions": {
            "Write a Java program that calculates the factorial of a given number.\n6": 0.5925925925925927,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.5806451612903226,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.5517241379310344,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.4864864864864865,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.48484848484848486,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.45161290322580644,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.43750000000000006,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.43750000000000006,
            "Implement a Java method to calculate the GCD (Greatest Common Divisor) of two numbers using the Euclidean algorithm.\nint a = 24, b = 36;": 0.4324324324324324,
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.4117647058823529
        },
        "avg_similarity_score": 0.27278537356155375
    },
    {
        "instruction": "How can I create a Java class with a constructor and a method that prints a message?\nThe message to print is \"Hello, World!\"",
        "output": "public class HelloWorld {\n    private String message;\n\n    public HelloWorld(String message) {\n        this.message = message;\n    }\n\n    public void printMessage() {\n        System.out.println(message);\n    }\n\n    public static void main(String[] args) {\n        HelloWorld hello = new HelloWorld(\"Hello, World!\");\n        hello.printMessage();\n    }\n}",
        "most_similar_instructions": {
            "Create a Java class that represents a student with properties name and grade. Provide a parameterized constructor and a toString() method that returns a string representation of the student's information.": 0.4727272727272728,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.4186046511627907,
            "Create a Java class named \"Person\" with the following attributes: name (String), age (int), and height (double). Implement a constructor to initialize these attributes and a method named \"displayInfo\" to print the values of these attributes.": 0.4,
            "Create a Java method that converts a string to title case (capitalizing the first letter of each word).\nString: \"hello, world!\"": 0.39999999999999997,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.375,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.3673469387755102,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.3636363636363636,
            "Create a Java method that converts a temperature in Fahrenheit to Celsius.\ntemperature_fahrenheit: 72": 0.35897435897435903,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.35897435897435903,
            "Create a Java class that implements the Runnable interface and overrides the run() method to make it print \"Hello, world!\" when executed. Then create a thread using this class and start it.": 0.35714285714285715
        },
        "avg_similarity_score": 0.23798696240607345
    },
    {
        "instruction": "Implement a Java method to find the common elements between two arrays of integers.\n[2, 5, 8, 9, 3], [7, 2, 3, 5, 6]",
        "output": "public static int[] findCommonElements(int[] arr1, int[] arr2) {\n    Set<Integer> set1 = new HashSet<>();\n    Set<Integer> commonElements = new HashSet<>();\n\n    for (int num : arr1) {\n        set1.add(num);\n    }\n\n    for (int num : arr2) {\n        if (set1.contains(num)) {\n            commonElements.add(num);\n        }\n    }\n\n    int[] result = new int[commonElements.size()];\n    int index = 0;\n    for (int num : commonElements) {\n        result[index] = num;\n        index++;\n    }\n\n    return result;\n}\n\nint[] arr1 = {2, 5, 8, 9, 3};\nint[] arr2 = {7, 2, 3, 5, 6};\nint[] commonElements = findCommonElements(arr1, arr2);\nSystem.out.println(Arrays.toString(commonElements));",
        "most_similar_instructions": {
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5454545454545454,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.48000000000000004,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.46511627906976744,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.4489795918367347,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.4489795918367347,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.4444444444444445,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.43999999999999995,
            "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}": 0.43478260869565216,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.43478260869565216,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.4313725490196078
        },
        "avg_similarity_score": 0.23259145796903263
    },
    {
        "instruction": "Write a Java code snippet that generates a fibonacci sequence of a specified length.\nLength: 10",
        "output": "public class Fibonacci {\n    public static void generateFibonacciSequence(int length) {\n        int[] fibonacci = new int[length];\n        fibonacci[0] = 0;\n        fibonacci[1] = 1;\n\n        for (int i = 2; i < length; i++) {\n            fibonacci[i] = fibonacci[i - 1] + fibonacci[i - 2];\n        }\n\n        System.out.println(\"Fibonacci sequence of length \" + length + \":\");\n        for (int num : fibonacci) {\n            System.out.print(num + \" \");\n        }\n    }\n\n    public static void main(String[] args) {\n        int sequenceLength = 10;\n        generateFibonacciSequence(sequenceLength);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java code snippet that checks if a number is a perfect square.\nint num = 16": 0.48484848484848486,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.41379310344827586,
            "Write a Java code snippet that reverses an array of strings in-place.\nString[] arr = {\"apple\", \"banana\", \"cherry\"}": 0.411764705882353,
            "Can you provide a Java code snippet that detects loops in a singly-linked list?": 0.38709677419354843,
            "Create a Java method that generates an array of n random numbers between a given range.\nn=5, range(10, 20)": 0.37837837837837834,
            "In Java, write a method that reverses a list of integers.": 0.3703703703703703,
            "Write a Java program that swaps the values of two variables without using a temporary variable.\nVariable 1: 5\nVariable 2: 10": 0.3684210526315789,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.3636363636363636,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.3636363636363636,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.35555555555555557
        },
        "avg_similarity_score": 0.2394055773860322
    },
    {
        "instruction": "Create a Java class that calculates the square root of a given number using the Math.sqrt() function.\nNumber: 25",
        "output": "public class SquareRootCalculator {\n    public static double calculateSquareRoot(double number) {\n        return Math.sqrt(number);\n    }\n\n    public static void main(String[] args) {\n        double inputNumber = 25;\n        double squareRoot = calculateSquareRoot(inputNumber);\n        System.out.println(\"Square root of \" + inputNumber + \" is: \" + squareRoot);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.55,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.5454545454545455,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.5142857142857143,
            "Create a Java function that determines if a given number is prime.": 0.4375,
            "Create a Java class for a simple calculator with methods for square and square root.\nnumber=25": 0.4324324324324324,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.4324324324324324,
            "Design a Java program that calculates the sum of all multiples of 3 or 5 below a given number.\nint limit = 20;": 0.4285714285714286,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.41025641025641024,
            "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]": 0.41025641025641024,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.4
        },
        "avg_similarity_score": 0.2674340936657759
    },
    {
        "instruction": "Write a Java code snippet that finds the maximum element in an array.\nArray: {10, 5, 20, 15, 25}",
        "output": "public class ArrayMaxElementFinder {\n    public static int findMaxElement(int[] array) {\n        int max = Integer.MIN_VALUE;\n\n        for (int num : array) {\n            if (num > max) {\n                max = num;\n            }\n        }\n\n        return max;\n    }\n\n    public static void main(String[] args) {\n        int[] numbers = {10, 5, 20, 15, 25};\n        int maxElement = findMaxElement(numbers);\n        System.out.println(\"Maximum element in the array: \" + maxElement);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java program that finds the maximum value in an array of integers.\nArray: [25, 6, 10, 45, 32]": 0.5641025641025641,
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.5128205128205129,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5128205128205129,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.5,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.47619047619047616,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.4444444444444444,
            "Implement a Java function that finds the index of the first occurrence of a given element in an array of integers.\nint[] arr = {5, 10, 2, 15, 8}\nint element = 2": 0.44000000000000006,
            "Create a Java method that finds the second largest number in an array of integers.\nint[] numbers = {7, 15, 3, 9, 10};": 0.43902439024390244,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.43902439024390244
        },
        "avg_similarity_score": 0.24565028055150984
    },
    {
        "instruction": "Design a Java class that calculates the area and circumference of a circle given the radius.\nRadius: 5.5",
        "output": "public class Circle {\n    private double radius;\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public double calculateArea() {\n        return Math.PI * Math.pow(radius, 2);\n    }\n\n    public double calculateCircumference() {\n        return 2 * Math.PI * radius;\n    }\n\n    public static void main(String[] args) {\n        double radius = 5.5;\n        Circle circle = new Circle(radius);\n        double area = circle.calculateArea();\n        double circumference = circle.calculateCircumference();\n\n        System.out.println(\"Area of the circle: \" + area);\n        System.out.println(\"Circumference of the circle: \" + circumference);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java class that calculates the square root of a given number using the Math.sqrt() function.\nNumber: 25": 0.5128205128205129,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.5,
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.4864864864864865,
            "Design a Java class to represent a circle. Include attributes for radius and methods to calculate the area and circumference of the circle.": 0.47619047619047616,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.46153846153846156,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.45454545454545453,
            "Design a Java program that calculates the sum of all multiples of 3 or 5 below a given number.\nint limit = 20;": 0.43902439024390244,
            "Implement a Java class for a quadratic equation solver that calculates the roots of a quadratic equation.\na = 2, b = -5, c = 3": 0.42857142857142855,
            "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]": 0.42105263157894735,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.42105263157894735
        },
        "avg_similarity_score": 0.27367152423612906
    },
    {
        "instruction": "Design a Java class representing a book with properties like title, author, and publication year.\nTitle: \"The Great Gatsby\"\nAuthor: \"F. Scott Fitzgerald\"\nPublication Year: 1925",
        "output": "public class Book {\n    private String title;\n    private String author;\n    private int publicationYear;\n\n    public Book(String title, String author, int publicationYear) {\n        this.title = title;\n        this.author = author;\n        this.publicationYear = publicationYear;\n    }\n\n    public String getTitle() {\n        return title;\n    }\n\n    public String getAuthor() {\n        return author;\n    }\n\n    public int getPublicationYear() {\n        return publicationYear;\n    }\n\n    public static void main(String[] args) {\n        String title = \"The Great Gatsby\";\n        String author = \"F. Scott Fitzgerald\";\n        int publicationYear = 1925;\n\n        Book book = new Book(title, author, publicationYear);\n\n        System.out.println(\"Title: \" + book.getTitle());\n        System.out.println(\"Author: \" + book.getAuthor());\n        System.out.println(\"Publication Year: \" + book.getPublicationYear());\n    }\n}",
        "most_similar_instructions": {
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.53125,
            "Create a Java class that represents a book, with attributes such as the title, author, and publication year.": 0.5,
            "Implement a Java class that represents a book with attributes such as title, author, and publication year. Create a constructor and getter methods for each attribute.\nbook_title: \"Harry Potter and the Sorcerer's Stone\", book_author: \"J.K. Rowling\", book_year: 1997": 0.43478260869565216,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.40909090909090906,
            "Design a Java class representing a person with properties name and age. Provide getters and setters for these properties.": 0.39999999999999997,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.35999999999999993,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.33333333333333337,
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.3255813953488372,
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.3181818181818182,
            "Implement a Java class for a simple stack with push and pop methods.": 0.30769230769230776
        },
        "avg_similarity_score": 0.17617926487843824
    },
    {
        "instruction": "Can you show me the code to sort an array of integers in ascending order using the bubble sort algorithm?\nint[] arr = {7, 3, 9, 1};",
        "output": "public void bubbleSort(int[] arr) {\n    int n = arr.length;\n    for (int i = 0; i < n - 1; i++) {\n        for (int j = 0; j < n - i - 1; j++) {\n            if (arr[j] > arr[j + 1]) {\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n}\n\nint[] arr = {7, 3, 9, 1};\nbubbleSort(arr);\nSystem.out.println(\"Sorted array in ascending order: \" + Arrays.toString(arr));",
        "most_similar_instructions": {
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.52,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.4444444444444444,
            "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};": 0.40816326530612246,
            "Create a Java method that finds the second largest number in an array of integers.\nint[] numbers = {7, 15, 3, 9, 10};": 0.37500000000000006,
            "Write a Java method to remove duplicates from an array of integers and return the array with unique elements only.\nint[] arr = {1, 2, 3, 1, 2, 3, 4, 5};": 0.3571428571428571,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.35294117647058826,
            "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}": 0.33333333333333337,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.32653061224489793,
            "Can you show me the code to connect to a MySQL database using Java, given the following connection details: database url = 'jdbc:mysql://localhost:3306/myDatabase', username = 'root', password = 'mypassword'?": 0.32142857142857145,
            "Create a Java program to count the frequency of each element in an array of integers and store it in a HashMap.\nint[] arr = {2, 3, 2, 4, 5, 3, 4}": 0.3157894736842105
        },
        "avg_similarity_score": 0.1373206203333043
    },
    {
        "instruction": "Can you show me the code to reverse a string in Java?\nString str = \"Hello, World!\";",
        "output": "public String reverseString(String str) {\n    StringBuilder reversed = new StringBuilder(str);\n    return reversed.reverse().toString();\n}\n\nString str = \"Hello, World!\";\nString reversedString = reverseString(str);\nSystem.out.println(\"Reversed string: \" + reversedString);",
        "most_similar_instructions": {
            "Write a Java program to reverse a string using recursion.\nString input = \"Hello, world!\"": 0.4666666666666667,
            "Can you provide a Java code snippet to check if a given string is a palindrome?\nString word = \"level\";": 0.39999999999999997,
            "Can you show me the code to connect to a MySQL database using Java, given the following connection details: database url = 'jdbc:mysql://localhost:3306/myDatabase', username = 'root', password = 'mypassword'?": 0.3913043478260869,
            "Can you show me the code to sort an array of integers in ascending order using the bubble sort algorithm?\nint[] arr = {7, 3, 9, 1};": 0.380952380952381,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.3636363636363636,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.3333333333333333,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.28571428571428575,
            "Can you provide a Java code snippet to find the length of the longest common prefix in an array of strings?\nString[] strs = {\"flower\", \"flow\", \"flight\"};": 0.2857142857142857,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.2777777777777778,
            "Create a Java method that converts a string to title case (capitalizing the first letter of each word).\nString: \"hello, world!\"": 0.27027027027027023
        },
        "avg_similarity_score": 0.1378476455479277
    },
    {
        "instruction": "What is the Java code to swap two numbers without using a temporary variable?\nint a = 5;\nint b = 10;",
        "output": "int a = 5;\nint b = 10;\n\na = a + b;\nb = a - b;\na = a - b;\n\nSystem.out.println(\"a = \" + a);\nSystem.out.println(\"b = \" + b);",
        "most_similar_instructions": {
            "Write a Java program that swaps the values of two variables without using a temporary variable.\nVariable 1: 5\nVariable 2: 10": 0.4285714285714286,
            "In Java, write a method that swaps the values of two variables.\nint a = 5;\nint b = 10;": 0.4210526315789474,
            "Implement a Java method to calculate the GCD (Greatest Common Divisor) of two numbers using the Euclidean algorithm.\nint a = 24, b = 36;": 0.37209302325581395,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.27906976744186046,
            "Write a Java code snippet that generates a fibonacci sequence of a specified length.\nLength: 10": 0.2777777777777778,
            "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;": 0.2727272727272727,
            "Write a Java code snippet that checks if a number is a perfect square.\nint num = 16": 0.27027027027027023,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.2631578947368421,
            "Write a Java program to find the sum of all the even numbers between 1 and a given number (inclusive) using a for loop.\nNumber: 10": 0.2608695652173913,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.2608695652173913
        },
        "avg_similarity_score": 0.1469798869324655
    },
    {
        "instruction": "Write a Java method that removes duplicates from an ArrayList of strings.\nArrayList<String> names = new ArrayList<>(Arrays.asList(\"John\", \"Jane\", \"John\", \"Alex\", \"Jane\"));",
        "output": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.LinkedHashSet;\n\npublic class RemoveDuplicates {\n\n    public static void main(String[] args) {\n        ArrayList<String> names = new ArrayList<>(Arrays.asList(\"John\", \"Jane\", \"John\", \"Alex\", \"Jane\"));\n        removeDuplicates(names);\n        System.out.println(names);\n    }\n\n    public static void removeDuplicates(ArrayList<String> list) {\n        LinkedHashSet<String> set = new LinkedHashSet<>(list);\n        list.clear();\n        list.addAll(set);\n    }\n}",
        "most_similar_instructions": {
            "Please write a Java method to remove all duplicate elements from an ArrayList of strings.\nArrayList<String> list = new ArrayList<>(Arrays.asList(\"apple\", \"orange\", \"banana\", \"apple\", \"pear\", \"banana\"));": 0.576923076923077,
            "Create a Java method that removes all duplicates from an ArrayList of strings.\n[\"apple\", \"banana\", \"orange\", \"apple\", \"pear\", \"banana\"]": 0.5116279069767442,
            "Write a Java program to sort an array of strings in alphabetical order.\nString[] names = {\"John\", \"Emma\", \"Adam\", \"Zoe\"};": 0.4186046511627907,
            "Write a Java program that removes all duplicate elements from an ArrayList of integers.\n[3, 4, 7, 4, 9, 7, 10]": 0.39999999999999997,
            "Write a Java code snippet that reverses an array of strings in-place.\nString[] arr = {\"apple\", \"banana\", \"cherry\"}": 0.380952380952381,
            "Create a Java method that takes an array of strings as input and returns the longest string in the array.\n[\"cat\", \"dog\", \"elephant\", \"lion\"]": 0.3333333333333333,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.3333333333333333,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.32558139534883723,
            "Implement a Java method to reverse an array of strings.\n[\"apple\", \"banana\", \"cherry\", \"date\"]": 0.3157894736842105,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.30434782608695654
        },
        "avg_similarity_score": 0.19779876558724932
    },
    {
        "instruction": "How would you write a Java method to calculate the area of a circle given its radius?\ndouble radius = 5.0;",
        "output": "public static double calculateArea(double radius) {\n    return Math.PI * radius * radius;\n}\n\ndouble radius = 5.0;\ndouble area = calculateArea(radius);\nSystem.out.println(area);",
        "most_similar_instructions": {
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.5789473684210527,
            "Design a Java class that calculates the area and circumference of a circle given the radius.\nRadius: 5.5": 0.5500000000000002,
            "Implement a Java program to calculate the factorial of a given positive integer.\n7": 0.4571428571428571,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.42105263157894735,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.41176470588235287,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.41025641025641024,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.4090909090909091,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.391304347826087,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3888888888888889,
            "Write a Java method to check if a given string is a valid email address.": 0.3888888888888889
        },
        "avg_similarity_score": 0.2515997880984886
    },
    {
        "instruction": "Could you write a Java method that reverses the order of elements in an ArrayList without using any additional data structures?\nArrayList: [1, 2, 3, 4, 5]",
        "output": "public static void reverseArrayList(ArrayList<Integer> list) {\n    int size = list.size();\n\n    for (int i = 0; i < size / 2; i++) {\n        int temp = list.get(i);\n        list.set(i, list.get(size - i - 1));\n        list.set(size - i - 1, temp);\n    }\n}\n\npublic static void main(String[] args) {\n    ArrayList<Integer> arrayList = new ArrayList<>(Arrays.asList(1, 2, 3, 4, 5));\n    reverseArrayList(arrayList);\n    System.out.println(\"Reversed ArrayList: \" + arrayList);\n}",
        "most_similar_instructions": {
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.52,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.52,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.5,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.5,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.4897959183673469,
            "Create a Java program that counts and prints the number of even and odd integers in an array.\n[1, 2, 3, 4, 5]": 0.48,
            "Design a Java method that calculates the average of an array of doubles.\ndouble[] numbers = {1.5, 2.5, 3.5, 4.5, 5.5}": 0.4615384615384615,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.4528301886792453,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.4230769230769231,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.4230769230769231
        },
        "avg_similarity_score": 0.2410064456811417
    },
    {
        "instruction": "Write a Java program that counts the total number of words in a given sentence.\nSentence: \"Hello, world! Welcome to the Java programming language.\"",
        "output": "public class WordCounter {\n    public static int countWords(String sentence) {\n        String[] words = sentence.split(\"\\\\s+\");\n        return words.length;\n    }\n\n    public static void main(String[] args) {\n        String sentence = \"Hello, world! Welcome to the Java programming language.\";\n        int wordCount = countWords(sentence);\n        System.out.println(\"Total number of words: \" + wordCount);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.5853658536585366,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.5365853658536585,
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.5098039215686274,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.48648648648648646,
            "Describe a Java method that returns the number of characters in the longest word of a sentence.\n\"The quick brown fox\"": 0.4444444444444445,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.425531914893617,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.4186046511627907,
            "Implement a Java method to find the length of the longest word in a given sentence.\nSentence: \"The quick brown fox jumps over the lazy dog\"": 0.4,
            "Create a Java program that counts and prints the number of even and odd integers in an array.\n[1, 2, 3, 4, 5]": 0.3829787234042554,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.380952380952381
        },
        "avg_similarity_score": 0.25297628969238733
    },
    {
        "instruction": "Implement a Java method that finds the minimum and maximum elements in an array without using in-built functions.\nArray: [5, 2, 9, 1, 7]",
        "output": "public static void findMinMax(int[] arr) {\n    int min = arr[0];\n    int max = arr[0];\n\n    for (int i = 1; i < arr.length; i++) {\n        if (arr[i] < min) {\n            min = arr[i];\n        }\n\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n    }\n\n    System.out.println(\"Minimum element: \" + min);\n    System.out.println(\"Maximum element: \" + max);\n}\n\npublic static void main(String[] args) {\n    int[] array = {5, 2, 9, 1, 7};\n    findMinMax(array);\n}",
        "most_similar_instructions": {
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.5957446808510639,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5333333333333332,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5217391304347826,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.52,
            "Write a Java code snippet that finds the maximum element in an array.\nArray: {10, 5, 20, 15, 25}": 0.5,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.45454545454545453,
            "Implement a Java function that merges two sorted arrays into a single sorted array without using in-built functions.": 0.45454545454545453,
            "Implement a Java method that finds the nth Fibonacci number using recursion.\nint n = 5;": 0.45,
            "Create a Java program that finds the maximum value in an array of integers.\nArray: [25, 6, 10, 45, 32]": 0.4444444444444445,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.44
        },
        "avg_similarity_score": 0.24548006630699867
    },
    {
        "instruction": "Create a Java method to remove duplicate elements from an array.\nArray: [1, 2, 3, 2, 4, 1]",
        "output": "public static int[] removeDuplicates(int[] arr) {\n    Set<Integer> set = new LinkedHashSet<>();\n\n    for (int num : arr) {\n        set.add(num);\n    }\n\n    int[] uniqueArray = new int[set.size()];\n    int index = 0;\n\n    for (int num : set) {\n        uniqueArray[index++] = num;\n    }\n\n    return uniqueArray;\n}\n\npublic static void main(String[] args) {\n    int[] array = {1, 2, 3, 2, 4, 1};\n    int[] result = removeDuplicates(array);\n    System.out.println(\"Array without duplicates: \" + Arrays.toString(result));\n}",
        "most_similar_instructions": {
            "Write a Java method to remove duplicates from an array of integers and return the array with unique elements only.\nint[] arr = {1, 2, 3, 1, 2, 3, 4, 5};": 0.5833333333333334,
            "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}": 0.55,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.4878048780487805,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.4864864864864865,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.4736842105263158,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.46511627906976744,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.4545454545454546,
            "Create a Java method that performs linear search to find the index of a given element in an array.\narray: [4, 2, 6, 8, 1], element: 6": 0.4444444444444445,
            "Create a Java program that counts and prints the number of even and odd integers in an array.\n[1, 2, 3, 4, 5]": 0.4390243902439025,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4390243902439025
        },
        "avg_similarity_score": 0.22998617199078816
    },
    {
        "instruction": "Create a Java method that finds the largest prime factor of a given number.\nNumber: 24",
        "output": "public static int findLargestPrimeFactor(int number) {\n    int largestPrimeFactor = -1;\n\n    while (number % 2 == 0) {\n        largestPrimeFactor = 2;\n        number /= 2;\n    }\n\n    for (int i = 3; i <= Math.sqrt(number); i += 2) {\n        while (number % i == 0) {\n            largestPrimeFactor = i;\n            number /= i;\n        }\n    }\n\n    if (number > 2) {\n        largestPrimeFactor = number;\n    }\n\n    return largestPrimeFactor;\n}\n\npublic static void main(String[] args) {\n    int number = 24;\n    int largestPrimeFactor = findLargestPrimeFactor(number);\n    System.out.println(\"Largest prime factor of \" + number + \": \" + largestPrimeFactor);\n}",
        "most_similar_instructions": {
            "Create a Java class that calculates the square root of a given number using the Math.sqrt() function.\nNumber: 25": 0.5555555555555556,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.5517241379310345,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.5161290322580646,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.5161290322580646,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.5,
            "Create a Java function that determines if a given number is prime.": 0.5,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.48484848484848486,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.48484848484848486,
            "Create a Java method that finds the second largest number in an array of integers.\nint[] numbers = {7, 15, 3, 9, 10};": 0.47368421052631576,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.47058823529411764
        },
        "avg_similarity_score": 0.2863514819978536
    },
    {
        "instruction": "Write a Java program to compute the sum and average of elements in an array.\nArray: [10, 20, 30, 40, 50]",
        "output": "public static void computeSumAndAverage(int[] arr) {\n    int sum = 0;\n\n    for (int num : arr) {\n        sum += num;\n    }\n\n    double average = (double) sum / arr.length;\n\n    System.out.println(\"Sum: \" + sum);\n    System.out.println(\"Average: \" + average);\n}\n\npublic static void main(String[] args) {\n    int[] array = {10, 20, 30, 40, 50};\n    computeSumAndAverage(array);\n}",
        "most_similar_instructions": {
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.5365853658536585,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5238095238095238,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.5106382978723405,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5,
            "Write a Java code snippet that finds the maximum element in an array.\nArray: {10, 5, 20, 15, 25}": 0.5,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.4736842105263158,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.46511627906976744,
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.46511627906976744,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.4545454545454545,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.4390243902439024
        },
        "avg_similarity_score": 0.2529160853709326
    },
    {
        "instruction": "Create a Java program that generates a random password with a given length.\nLength: 8",
        "output": "public static String generateRandomPassword(int length) {\n    String characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    StringBuilder password = new StringBuilder();\n\n    for (int i = 0; i < length; i++) {\n        int index = (int) (Math.random() * characters.length());\n        password.append(characters.charAt(index));\n    }\n\n    return password.toString();\n}\n\npublic static void main(String[] args) {\n    int length = 8;\n    String randomPassword = generateRandomPassword(length);\n    System.out.println(\"Random password: \" + randomPassword);\n}",
        "most_similar_instructions": {
            "Write a Java code snippet that generates a fibonacci sequence of a specified length.\nLength: 10": 0.5161290322580646,
            "Create a Java function that determines if a given number is prime.": 0.4444444444444445,
            "Create a Java method that generates an array of n random numbers between a given range.\nn=5, range(10, 20)": 0.4444444444444444,
            "Create a Java program that generates a random number between 1 and 100 and asks the user to guess the number.": 0.4444444444444444,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.42857142857142855,
            "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;": 0.4102564102564102,
            "Create a Java program that checks if a string contains only numeric characters.\nString: \"12345\"": 0.4000000000000001,
            "Create a Java method that finds the largest prime factor of a given number.\nNumber: 24": 0.38709677419354843,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.37500000000000006,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.37500000000000006
        },
        "avg_similarity_score": 0.24529992527494748
    },
    {
        "instruction": "Implement a Java class that represents a student with attributes like name, age, and grade. Add a method to calculate the average grade of a list of students.\nList<Student> students = [...list of students...]",
        "output": "public class Student {\n    private String name;\n    private int age;\n    private double grade;\n\n    // constructor, getters and setters\n\n    public static double calculateAverageGrade(List<Student> students) {\n        double totalGrade = 0.0;\n        for (Student student : students) {\n            totalGrade += student.getGrade();\n        }\n        return totalGrade / students.size();\n    }\n}\n\nList<Student> students = [...list of students...];\ndouble averageGrade = Student.calculateAverageGrade(students);",
        "most_similar_instructions": {
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.5172413793103449,
            "Create a Java class that represents a student with properties name and grade. Provide a parameterized constructor and a toString() method that returns a string representation of the student's information.": 0.4923076923076923,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.4912280701754386,
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.4705882352941177,
            "Implement a Java class called \"Person\" with attributes \"name\" and \"age\" and a method to check if the person is a minor (below 18 years old).\nname: \"John\", age: 20": 0.43749999999999994,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.4333333333333333,
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.41666666666666663,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.41379310344827586,
            "Implement a Java class for a point with x and y coordinates and a method to calculate its distance from the origin.\nx = 3, y = 4": 0.4000000000000001,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.3823529411764706
        },
        "avg_similarity_score": 0.2376737477391406
    },
    {
        "instruction": "Implement a Java method that takes an array of integers and finds the maximum element without using any built-in functions.\nint[] arr = {4, 2, 9, 7, 5};",
        "output": "public class MaxFinder {\n    public static int findMax(int[] arr) {\n        int max = arr[0];\n        for (int i = 1; i < arr.length; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n\n    public static void main(String[] args) {\n        int[] arr = {4, 2, 9, 7, 5};\n        System.out.println(\"Maximum element: \" + findMax(arr));\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java method that finds the minimum and maximum elements in an array without using in-built functions.\nArray: [5, 2, 9, 1, 7]": 0.5660377358490566,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.4799999999999999,
            "Implement a Java method to reverse a string without using any built-in functions.": 0.4761904761904762,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.46808510638297873,
            "Implement a Java method that finds the nth Fibonacci number using recursion.\nint n = 5;": 0.46511627906976744,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.4528301886792452,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.4528301886792452,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.4482758620689655,
            "Write a Java method to remove duplicates from an array of integers and return the array with unique elements only.\nint[] arr = {1, 2, 3, 1, 2, 3, 4, 5};": 0.4482758620689655,
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.44
        },
        "avg_similarity_score": 0.2516684820988285
    },
    {
        "instruction": "Write a Java method that checks if a given year is a leap year or not. Return true if it is a leap year, false otherwise.\nint year = 2024;",
        "output": "public class LeapYearChecker {\n    public static boolean isLeapYear(int year) {\n        if (year % 4 == 0) {\n            if (year % 100 != 0 || year % 400 == 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public static void main(String[] args) {\n        int year = 2024;\n        System.out.println(\"Is leap year? \" + isLeapYear(year));\n    }\n}",
        "most_similar_instructions": {
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.5957446808510638,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.4782608695652174,
            "Write a Java code snippet that checks if a number is a perfect square.\nint num = 16": 0.4347826086956522,
            "Implement a Java method that checks if a string is a palindrome or not. A palindrome is a word or phrase that is the same forwards and backwards.\ninput_string: \"madam\"": 0.4333333333333333,
            "Create a Java method that checks if a given string is a valid URL.\nurl: \"https://www.example.com\"": 0.4166666666666667,
            "Implement a Java method that takes a string as input and returns true if it is a palindrome (reads the same forwards and backwards), false otherwise.\nString input = \"level\";": 0.41379310344827586,
            "Write a Java method to check if a given string is a valid email address.": 0.4090909090909091,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.4090909090909091,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.4,
            "Write a Java program that checks if a given string is a palindrome sentence (ignoring spaces and punctuation).\nString sentence = \"A man, a plan, a canal, Panama!\"": 0.39285714285714285
        },
        "avg_similarity_score": 0.19630771368886846
    },
    {
        "instruction": "Please provide a Java code snippet to find the maximum element in an array.\nint[] numbers = {5, 2, 9, 3, 7}",
        "output": "public class MaxElementFinder {\n    public static int findMaxElement(int[] numbers) {\n        int max = numbers[0];\n\n        for (int i = 1; i < numbers.length; i++) {\n            if (numbers[i] > max) {\n                max = numbers[i];\n            }\n        }\n\n        return max;\n    }\n\n    public static void main(String[] args) {\n        int[] numbers = {5, 2, 9, 3, 7};\n        System.out.println(findMaxElement(numbers));\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5853658536585366,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.5652173913043478,
            "Write a Java code snippet that finds the maximum element in an array.\nArray: {10, 5, 20, 15, 25}": 0.5500000000000002,
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.4878048780487805,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.4782608695652174,
            "Implement a Java method that finds the minimum and maximum elements in an array without using in-built functions.\nArray: [5, 2, 9, 1, 7]": 0.4782608695652174,
            "Can you provide a Java code snippet to find the length of the longest common prefix in an array of strings?\nString[] strs = {\"flower\", \"flow\", \"flight\"};": 0.4680851063829788,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.4583333333333333,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.42553191489361697,
            "Create a Java program to count the frequency of each element in an array of integers and store it in a HashMap.\nint[] arr = {2, 3, 2, 4, 5, 3, 4}": 0.4230769230769231
        },
        "avg_similarity_score": 0.2288650046091056
    },
    {
        "instruction": "How can I implement a binary search algorithm in Java to search for a specific element in a sorted array?\nint[] array = {1, 2, 3, 4, 5, 6, 7}; \nint target = 5;",
        "output": "public class BinarySearch {\n\n    public static int binarySearch(int[] array, int target) {\n        int left = 0;\n        int right = array.length - 1;\n\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n\n            if (array[mid] == target) {\n                return mid;\n            }\n            if (array[mid] < target) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return -1;\n    }\n\n    public static void main(String[] args) {\n        int[] array = {1, 2, 3, 4, 5, 6, 7};\n        int target = 5;\n        System.out.println(binarySearch(array, target));\n    }\n}",
        "most_similar_instructions": {
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.5263157894736842,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.45614035087719296,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.4482758620689655,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.4,
            "Please provide a Java code snippet to find the maximum element in an array.\nint[] numbers = {5, 2, 9, 3, 7}": 0.37735849056603776,
            "Create a Java method to remove duplicate elements from an array.\nArray: [1, 2, 3, 2, 4, 1]": 0.36,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.3548387096774193,
            "Create a Java program to count the frequency of each element in an array of integers and store it in a HashMap.\nint[] arr = {2, 3, 2, 4, 5, 3, 4}": 0.3492063492063492,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.34615384615384615
        },
        "avg_similarity_score": 0.1974713191744412
    },
    {
        "instruction": "Can you provide a Java code snippet to merge two sorted arrays into one sorted array?\nint[] array1 = {1, 3, 6, 9};\nint[] array2 = {2, 4, 5, 8};",
        "output": "public class ArrayMerger {\n    public static int[] mergeArrays(int[] array1, int[] array2) {\n        int[] result = new int[array1.length + array2.length];\n        int i = 0, j = 0, k = 0;\n\n        while (i < array1.length && j < array2.length) {\n            if (array1[i] < array2[j]) {\n                result[k++] = array1[i++];\n            } else {\n                result[k++] = array2[j++];\n            }\n        }\n\n        while (i < array1.length) {\n            result[k++] = array1[i++];\n        }\n\n        while (j < array2.length) {\n            result[k++] = array2[j++];\n        }\n\n        return result;\n    }\n\n    public static void main(String[] args) {\n        int[] array1 = {1, 3, 6, 9};\n        int[] array2 = {2, 4, 5, 8};\n        int[] mergedArray = mergeArrays(array1, array2);\n        for (int num : mergedArray) {\n            System.out.print(num + \" \");\n        }\n    }\n}",
        "most_similar_instructions": {
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.5555555555555555,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.4150943396226415,
            "How can I implement a binary search algorithm in Java to search for a specific element in a sorted array?\nint[] array = {1, 2, 3, 4, 5, 6, 7}; \nint target = 5;": 0.39999999999999997,
            "Please provide a Java code snippet to find the maximum element in an array.\nint[] numbers = {5, 2, 9, 3, 7}": 0.3673469387755102,
            "Create a Java method to remove duplicate elements from an array.\nArray: [1, 2, 3, 2, 4, 1]": 0.34782608695652173,
            "Write a Java method to remove duplicates from an array of integers and return the array with unique elements only.\nint[] arr = {1, 2, 3, 1, 2, 3, 4, 5};": 0.3448275862068965,
            "Implement a Java function that merges two sorted arrays into a single sorted array without using in-built functions.": 0.3404255319148936,
            "Can you provide a Java code snippet to check if a given string is a palindrome?\nString word = \"level\";": 0.3404255319148936,
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.3333333333333333,
            "Can you provide a Java code snippet to find the length of the longest common prefix in an array of strings?\nString[] strs = {\"flower\", \"flow\", \"flight\"};": 0.3333333333333333
        },
        "avg_similarity_score": 0.16579693643833235
    },
    {
        "instruction": "How can I write a Java program to calculate the power of a number using recursion?\nint base = 2;\nint exponent = 5;",
        "output": "public class PowerCalculator {\n    public static int calculatePower(int base, int exponent) {\n        if (exponent == 0) {\n            return 1;\n        } else {\n            return base * calculatePower(base, exponent - 1);\n        }\n    }\n\n    public static void main(String[] args) {\n        int base = 2;\n        int exponent = 5;\n        System.out.println(calculatePower(base, exponent));\n    }\n}",
        "most_similar_instructions": {
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.5945945945945945,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.5714285714285713,
            "How would you write a Java method to calculate the area of a circle given its radius?\ndouble radius = 5.0;": 0.46511627906976744,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.4583333333333333,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4571428571428572,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.45,
            "Write a Java program to reverse a string using recursion.\nString input = \"Hello, world!\"": 0.4444444444444444,
            "Implement a Java program to calculate the factorial of a given positive integer.\n7": 0.4444444444444444,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.43902439024390244,
            "Implement a Java method that finds the nth Fibonacci number using recursion.\nint n = 5;": 0.43243243243243246
        },
        "avg_similarity_score": 0.25406011096129477
    },
    {
        "instruction": "Implement a Java class for a stack using an array with push and pop methods. The class should have a constructor that takes the maximum size of the stack as a parameter.\nMaximum size: 5\npush(1), push(2), push(3), pop(), push(4)",
        "output": "public class ArrayStack {\n    private int[] stack;\n    private int top;\n    private int maxSize;\n\n    public ArrayStack(int maxSize) {\n        stack = new int[maxSize];\n        top = -1;\n        this.maxSize = maxSize;\n    }\n\n    public void push(int value) {\n        if (top == maxSize - 1) {\n            System.out.println(\"Stack is full.\");\n        } else {\n            stack[++top] = value;\n        }\n    }\n\n    public int pop() {\n        if (top == -1) {\n            System.out.println(\"Stack is empty.\");\n            return -1;\n        } else {\n            return stack[top--];\n        }\n    }\n\n    public static void main(String[] args) {\n        ArrayStack stack = new ArrayStack(5);\n        stack.push(1);\n        stack.push(2);\n        stack.push(3);\n        System.out.println(stack.pop());\n        stack.push(4);\n    }}",
        "most_similar_instructions": {
            "Implement a Java class for a simple stack with push and pop methods.": 0.4210526315789473,
            "Implement a Java class for a quadratic equation solver that calculates the roots of a quadratic equation.\na = 2, b = -5, c = 3": 0.3582089552238806,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.34782608695652173,
            "Implement a Java class for a point with x and y coordinates and a method to calculate its distance from the origin.\nx = 3, y = 4": 0.3428571428571428,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.3243243243243243,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.31884057971014496,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.2985074626865672,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.29411764705882354,
            "Create a Java class that represents a student with properties name and grade. Provide a parameterized constructor and a toString() method that returns a string representation of the student's information.": 0.29333333333333333,
            "Implement a Java method that takes a sorted array of integers and a target value, and returns the index position of the target value in the array using binary search.\nint[] numbers = {2, 4, 6, 8, 10};\nTarget: 6": 0.2891566265060241
        },
        "avg_similarity_score": 0.20245287845959767
    },
    {
        "instruction": "Write a Java class that computes the average of an array of integers and returns the result.\nArray: [5, 10, 15, 20, 25]",
        "output": "public class Average {\n    public static double calculateAverage(int[] array) {\n        int sum = 0;\n        for (int num : array) {\n            sum += num;\n        }\n        return (double) sum / array.length;\n    }\n\n    public static void main(String[] args) {\n        int[] array = {5, 10, 15, 20, 25};\n        double average = calculateAverage(array);\n        System.out.println(\"Average: \" + average);\n    }}",
        "most_similar_instructions": {
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.5333333333333332,
            "Write a Java code snippet that finds the maximum element in an array.\nArray: {10, 5, 20, 15, 25}": 0.5238095238095238,
            "Write a Java program that calculates the average of an integer array.\n[5, 9, 12, 7, 3]": 0.5,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.5,
            "Write a Java program to compute the sum and average of elements in an array.\nArray: [10, 20, 30, 40, 50]": 0.5,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4782608695652174,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.4680851063829787,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.46511627906976744,
            "Create a Java program that finds the maximum value in an array of integers.\nArray: [25, 6, 10, 45, 32]": 0.46511627906976744
        },
        "avg_similarity_score": 0.27714560097314583
    },
    {
        "instruction": "Implement a Java class for a queue using a linked list with enqueue and dequeue methods.\nenqueue(1), enqueue(2), enqueue(3), dequeue(), enqueue(4)",
        "output": "public class LinkedListQueue {\n    private Node front;\n    private Node rear;\n\n    private static class Node {\n        private int data;\n        private Node next;\n\n        public Node(int data) {\n            this.data = data;\n            next = null;\n        }\n    }\n\n    public void enqueue(int value) {\n        Node newNode = new Node(value);\n        if (rear == null) {\n            front = rear = newNode;\n        } else {\n            rear.next = newNode;\n            rear = newNode;\n        }\n    }\n\n    public int dequeue() throws NoSuchElementException {\n        if (front == null) {\n            throw new NoSuchElementException(\"Queue is empty.\");\n        }\n        int value = front.data;\n        if (front == rear) {\n            front = rear = null;\n        } else {\n            front = front.next;\n        }\n        return value;\n    }\n\n    public static void main(String[] args) {\n        LinkedListQueue queue = new LinkedListQueue();\n        queue.enqueue(1);\n        queue.enqueue(2);\n        queue.enqueue(3);\n        System.out.println(queue.dequeue());\n        queue.enqueue(4);\n    }}",
        "most_similar_instructions": {
            "Implement a Java class for a simple stack with push and pop methods.": 0.47368421052631576,
            "Implement a Java class for a stack using an array with push and pop methods. The class should have a constructor that takes the maximum size of the stack as a parameter.\nMaximum size: 5\npush(1), push(2), push(3), pop(), push(4)": 0.4057971014492754,
            "Implement a Java class for a point with x and y coordinates and a method to calculate its distance from the origin.\nx = 3, y = 4": 0.39215686274509803,
            "Implement a Java class for a quadratic equation solver that calculates the roots of a quadratic equation.\na = 2, b = -5, c = 3": 0.37499999999999994,
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.37209302325581395,
            "How can I implement a binary search algorithm in Java to search for a specific element in a sorted array?\nint[] array = {1, 2, 3, 4, 5, 6, 7}; \nint target = 5;": 0.3508771929824561,
            "Create a Java class for a simple calculator with methods for square and square root.\nnumber=25": 0.3333333333333333,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.32,
            "Design a Java class for a student with methods to store and retrieve their name and age.\n\"John Doe\", 20": 0.3111111111111111,
            "Create a Java program that counts and prints the number of even and odd integers in an array.\n[1, 2, 3, 4, 5]": 0.2916666666666667
        },
        "avg_similarity_score": 0.19642435308190798
    },
    {
        "instruction": "Create a Java program to print the pattern given below using nested loops:\n1 \n2 2 \n3 3 3 \n4 4 4 4 \n5 5 5 5 5",
        "output": "public class NumberPattern {\n    public static void printPattern() {\n        for (int i = 1; i <= 5; i++) {\n            for (int j = 1; j <= i; j++) {\n                System.out.print(i + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static void main(String[] args) {\n        printPattern();\n    }}",
        "most_similar_instructions": {
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.39215686274509803,
            "Create a Java program that counts and prints the number of even and odd integers in an array.\n[1, 2, 3, 4, 5]": 0.39215686274509803,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.39215686274509803,
            "Design a Java method that calculates the average of an array of doubles.\ndouble[] numbers = {1.5, 2.5, 3.5, 4.5, 5.5}": 0.3773584905660378,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.37209302325581395,
            "Create a Java method to remove duplicate elements from an array.\nArray: [1, 2, 3, 2, 4, 1]": 0.34782608695652173,
            "Write a Java method to remove duplicates from an array of integers and return the array with unique elements only.\nint[] arr = {1, 2, 3, 1, 2, 3, 4, 5};": 0.3448275862068965,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.33962264150943394,
            "Create a Java program to count the frequency of each element in an array of integers and store it in a HashMap.\nint[] arr = {2, 3, 2, 4, 5, 3, 4}": 0.3389830508474576,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.3333333333333333
        },
        "avg_similarity_score": 0.19123677508908013
    },
    {
        "instruction": "Write a Java program to calculate the area of a rectangle given its length and width.\nLength: 10\nWidth: 5",
        "output": "public class Rectangle {\n    private double length;\n    private double width;\n\n    public Rectangle(double length, double width) {\n        this.length = length;\n        this.width = width;\n    }\n\n    public double getArea() {\n        return length * width;\n    }\n\n    public static void main(String[] args) {\n        double length = 10;\n        double width = 5;\n        Rectangle rectangle = new Rectangle(length, width);\n        double area = rectangle.getArea();\n        System.out.println(\"Area: \" + area);\n    }}",
        "most_similar_instructions": {
            "How would you write a Java method to calculate the area of a circle given its radius?\ndouble radius = 5.0;": 0.5853658536585366,
            "Implement a Java program to calculate the factorial of a given positive integer.\n7": 0.5294117647058824,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4848484848484849,
            "How can I write a Java program to calculate the power of a number using recursion?\nint base = 2;\nint exponent = 5;": 0.47619047619047616,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.4571428571428572,
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.45,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.4489795918367347,
            "Write a Java code snippet that generates a fibonacci sequence of a specified length.\nLength: 10": 0.4444444444444445,
            "Write a Java program to find the sum of all the even numbers between 1 and a given number (inclusive) using a for loop.\nNumber: 10": 0.4347826086956522,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.4210526315789474
        },
        "avg_similarity_score": 0.2649474889236497
    },
    {
        "instruction": "Create a Java program that generates the Fibonacci sequence up to a given number. Take the input number as a command-line argument.",
        "output": "public class FibonacciSequence {\n    public static void main(String[] args) {\n        int limit = Integer.parseInt(args[0]);\n        int[] sequence = new int[limit];\n        sequence[0] = 0;\n        sequence[1] = 1;\n\n        for (int i = 2; i < limit; i++) {\n            sequence[i] = sequence[i - 1] + sequence[i - 2];\n        }\n\n        System.out.println(\"Fibonacci sequence up to \" + limit + \":\");\n        for (int num : sequence) {\n            System.out.print(num + \" \");\n        }\n    }}",
        "most_similar_instructions": {
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.5116279069767442,
            "Create a Java class that calculates the square root of a given number using the Math.sqrt() function.\nNumber: 25": 0.46511627906976744,
            "Create a Java method that finds the largest prime factor of a given number.\nNumber: 24": 0.46153846153846156,
            "Create a Java program that generates a random number between 1 and 100 and asks the user to guess the number.": 0.4545454545454545,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4444444444444444,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.4210526315789474,
            "Create a Java program that generates a random password with a given length.\nLength: 8": 0.4210526315789474,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.4186046511627907,
            "Create a Java function that determines if a given number is prime.": 0.4,
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.3902439024390244
        },
        "avg_similarity_score": 0.24117245138596577
    },
    {
        "instruction": "Design a Java method that takes an array of strings as input and returns the count of strings that start with a vowel.\n[\"apple\", \"banana\", \"orange\"]",
        "output": "public class VowelCount {\n    public static int countStringsStartingWithVowel(String[] strings) {\n        int count = 0;\n\n        for (String s : strings) {\n            if (s.toLowerCase().startsWith(\"a\") || s.toLowerCase().startsWith(\"e\") || s.toLowerCase().startsWith(\"i\")\n                    || s.toLowerCase().startsWith(\"o\") || s.toLowerCase().startsWith(\"u\")) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n\n    public static void main(String[] args) {\n        String[] strings = {\"apple\", \"banana\", \"orange\"};\n        System.out.println(\"Number of strings starting with a vowel: \" + countStringsStartingWithVowel(strings));\n    }}",
        "most_similar_instructions": {
            "Create a Java method that takes an array of strings as input and returns the longest string in the array.\n[\"cat\", \"dog\", \"elephant\", \"lion\"]": 0.5599999999999999,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.5,
            "Create a JavaScript function that takes an array of numbers and returns the product of all elements.": 0.46511627906976744,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.4642857142857143,
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.4528301886792453,
            "Implement a Java method to reverse an array of strings.\n[\"apple\", \"banana\", \"cherry\", \"date\"]": 0.45,
            "Create a Java method that removes all duplicates from an ArrayList of strings.\n[\"apple\", \"banana\", \"orange\", \"apple\", \"pear\", \"banana\"]": 0.4444444444444444,
            "Implement a Java function that accepts an integer array and returns the square of each element in a new array.": 0.4347826086956522,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.4347826086956522,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.41666666666666663
        },
        "avg_similarity_score": 0.2396919431535088
    },
    {
        "instruction": "Implement a Java class named \"Person\" with attributes for name and age. Add a method to compare the ages of two person objects.",
        "output": "public class Person {\n    private String name;\n    private int age;\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public int compareAges(Person otherPerson) {\n        if (age < otherPerson.getAge()) {\n            return -1;\n        } else if (age > otherPerson.getAge()) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n\n    public static void main(String[] args) {\n        Person person1 = new Person(\"John\", 25);\n        Person person2 = new Person(\"Alice\", 30);\n\n        System.out.println(\"Comparison result: \" + person1.compareAges(person2));\n    }\n    \n    public int getAge() {\n        return age;\n    }}",
        "most_similar_instructions": {
            "Implement a Java class called \"Person\" with attributes \"name\" and \"age\" and a method to check if the person is a minor (below 18 years old).\nname: \"John\", age: 20": 0.5660377358490566,
            "Implement a Java class that represents a student with attributes like name, age, and grade. Add a method to calculate the average grade of a list of students.\nList<Student> students = [...list of students...]": 0.4912280701754386,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.4897959183673469,
            "Create a Java class named \"Person\" with the following attributes: name (String), age (int), and height (double). Implement a constructor to initialize these attributes and a method named \"displayInfo\" to print the values of these attributes.": 0.47457627118644075,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.4583333333333333,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.45614035087719296,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.43478260869565216,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.425531914893617,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.425531914893617,
            "Create a Java class named \"Student\" with attributes \"name\" (String) and \"age\" (int). Implement getter and setter methods for these attributes.": 0.4090909090909091
        },
        "avg_similarity_score": 0.2407518183719035
    },
    {
        "instruction": "Design a Java method that takes a number as input and prints a multiplication table for that number up to 10.\n7",
        "output": "public class MultiplicationTable {\n    public static void printTable(int number) {\n        for (int i = 1; i <= 10; i++) {\n            System.out.println(number + \" x \" + i + \" = \" + (number * i));\n        }\n    }\n\n    public static void main(String[] args) {\n        int number = 7;\n        printTable(number);\n    }}",
        "most_similar_instructions": {
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.45,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.43243243243243246,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.4285714285714286,
            "Design a Java method that takes an array of strings as input and returns the count of strings that start with a vowel.\n[\"apple\", \"banana\", \"orange\"]": 0.41666666666666663,
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.40816326530612246,
            "Write a Java method that takes an integer as input and determines if it is prime or not.": 0.39999999999999997,
            "Implement a Java method that takes a string as input and returns true if it is a palindrome (reads the same forwards and backwards), false otherwise.\nString input = \"level\";": 0.39215686274509803,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.3913043478260869,
            "Implement a Java program that converts a decimal number to binary.\nint decimal = 10;": 0.3888888888888889,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.3783783783783784
        },
        "avg_similarity_score": 0.2396188456502969
    },
    {
        "instruction": "Create a Java program that reads two integers from the user and determines their greatest common divisor (GCD) using the Euclidean algorithm.",
        "output": "import java.util.Scanner;\n\npublic class GCD {\n    public static int calculateGCD(int a, int b) {\n        if (b == 0) {\n            return a;\n        } else {\n            return calculateGCD(b, a % b);\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        System.out.print(\"Enter the first integer: \");\n        int num1 = scanner.nextInt();\n        \n        System.out.print(\"Enter the second integer: \");\n        int num2 = scanner.nextInt();\n\n        System.out.println(\"GCD: \" + calculateGCD(num1, num2));\n    }}",
        "most_similar_instructions": {
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.47368421052631576,
            "Write a Java program that takes in two integers from the user and finds their sum and product.\nEnter First Integer: 5\nEnter Second Integer: 10": 0.4583333333333333,
            "Implement a Java method to calculate the GCD (Greatest Common Divisor) of two numbers using the Euclidean algorithm.\nint a = 24, b = 36;": 0.4444444444444445,
            "Create a Java program that generates a random number between 1 and 100 and asks the user to guess the number.": 0.37209302325581395,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.34782608695652173,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.3414634146341463,
            "Create a Java class that calculates the square root of a given number using the Math.sqrt() function.\nNumber: 25": 0.3333333333333333,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.3255813953488372,
            "Create a Java program that converts temperature from Celsius to Fahrenheit.\nTemperature in Celsius: 25": 0.3243243243243243,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3243243243243243
        },
        "avg_similarity_score": 0.21102356193212085
    },
    {
        "instruction": "Create a Python function to remove all occurrences of a specific element from a list.\nlist = [1, 2, 3, 2, 4, 2, 5]\nelement = 2",
        "output": "def removeOccurrences(lst, element):\n    return [x for x in lst if x != element]\n\nlst = [1, 2, 3, 2, 4, 2, 5]\nelement = 2\nresult = removeOccurrences(lst, element)\nprint(result)",
        "most_similar_instructions": {
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.56,
            "Create a Java method to remove duplicate elements from an array.\nArray: [1, 2, 3, 2, 4, 1]": 0.46511627906976744,
            "Create a Java program to count the frequency of each element in an array of integers and store it in a HashMap.\nint[] arr = {2, 3, 2, 4, 5, 3, 4}": 0.3928571428571428,
            "How can I implement a binary search algorithm in Java to search for a specific element in a sorted array?\nint[] array = {1, 2, 3, 4, 5, 6, 7}; \nint target = 5;": 0.3859649122807018,
            "Write a Java method to remove duplicates from an array of integers and return the array with unique elements only.\nint[] arr = {1, 2, 3, 1, 2, 3, 4, 5};": 0.3636363636363636,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.36,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.35555555555555557,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.35294117647058826,
            "Create a Java method that performs linear search to find the index of a given element in an array.\narray: [4, 2, 6, 8, 1], element: 6": 0.34615384615384615,
            "Create a Java program that counts and prints the number of even and odd integers in an array.\n[1, 2, 3, 4, 5]": 0.3333333333333333
        },
        "avg_similarity_score": 0.17673597826033374
    },
    {
        "instruction": "Create a Python function to find the index of the first occurrence of a specified element in a list.\nlist = [5, 3, 8, 2, 9, 5, 6]\nelement = 5",
        "output": "def findFirstOccurrence(lst, element):\n    for i in range(len(lst)):\n        if lst[i] == element:\n            return i\n    return -1\n\nlst = [5, 3, 8, 2, 9, 5, 6]\nelement = 5\nindex = findFirstOccurrence(lst, element)\nprint(\"Index of first occurrence:\", index)",
        "most_similar_instructions": {
            "Create a Python function to remove all occurrences of a specific element from a list.\nlist = [1, 2, 3, 2, 4, 2, 5]\nelement = 2": 0.5555555555555556,
            "Implement a Java function that finds the index of the first occurrence of a given element in an array of integers.\nint[] arr = {5, 10, 2, 15, 8}\nint element = 2": 0.5000000000000001,
            "Create a Java method that performs linear search to find the index of a given element in an array.\narray: [4, 2, 6, 8, 1], element: 6": 0.4642857142857143,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.4255319148936171,
            "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]": 0.4166666666666667,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.40816326530612246,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.4,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.39285714285714285,
            "Implement a Java method to find the common elements between two arrays of integers.\n[2, 5, 8, 9, 3], [7, 2, 3, 5, 6]": 0.37735849056603776,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.3703703703703704
        },
        "avg_similarity_score": 0.19706661829061314
    },
    {
        "instruction": "Write a Java program to generate and print the first n Fibonacci numbers.\nint n = 8;",
        "output": "public class FibonacciGenerator {\n    public static void generateFibonacci(int n) {\n        int n1 = 0, n2 = 1, n3;\n        System.out.print(n1 + \" \" + n2);\n\n        for (int i = 2; i < n; ++i) {\n            n3 = n1 + n2;\n            System.out.print(\" \" + n3);\n            n1 = n2;\n            n2 = n3;\n        }\n    }\n\n    public static void main(String[] args) {\n        int n = 8;\n        generateFibonacci(n);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.38888888888888884,
            "Implement a Java method that finds the nth Fibonacci number using recursion.\nint n = 5;": 0.38709677419354843,
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.375,
            "Develop a recursive Java function to compute the nth Fibonacci number.": 0.3703703703703703,
            "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}": 0.3684210526315789,
            "How can I write a Java program to calculate the power of a number using recursion?\nint base = 2;\nint exponent = 5;": 0.3684210526315789,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.358974358974359,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.35294117647058826,
            "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;": 0.35000000000000003,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.3448275862068966
        },
        "avg_similarity_score": 0.22585920341383384
    },
    {
        "instruction": "Write a Java program to find the length of the longest consecutive sequence of a given array of integers.\n[1, 9, 3, 10, 4, 20, 2]",
        "output": "public class LongestConsecutiveSequence {\n    public static int findMaxLength(int[] arr) {\n        HashSet<Integer> set = new HashSet<>();\n        for (int num : arr) {\n            set.add(num);\n        }\n\n        int maxLength = 0;\n        for (int num : arr) {\n            if (!set.contains(num - 1)) {\n                int currentLength = 1;\n                while (set.contains(num + currentLength)) {\n                    currentLength++;\n                }\n                maxLength = Math.max(maxLength, currentLength);\n            }\n        }\n\n        return maxLength;\n    }\n\n    public static vo",
        "most_similar_instructions": {
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5714285714285715,
            "Write a Java program to find the length of the longest increasing subarray in an integer array.\n[1, 2, 3, 2, 5, 7, 9, 8, 7, 6]": 0.5660377358490566,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.5,
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.47826086956521735,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.47058823529411764,
            "Write a Java program to find the sum of all the even numbers between 1 and a given number (inclusive) using a for loop.\nNumber: 10": 0.46153846153846156,
            "Implement a Java function that finds the index of the first occurrence of a given element in an array of integers.\nint[] arr = {5, 10, 2, 15, 8}\nint element = 2": 0.45614035087719296,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.44897959183673475,
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.4347826086956522,
            "Write a Java program to calculate the area of a rectangle given its length and width.\nLength: 10\nWidth: 5": 0.4347826086956522
        },
        "avg_similarity_score": 0.26058086043228607
    },
    {
        "instruction": "Can you provide a Java code snippet to find the greatest common divisor (GCD) of two numbers?\nnum1: 36, num2: 48",
        "output": "public static int findGCD(int num1, int num2) {\n    if (num2 == 0) {\n        return num1;\n    }\n\n    return findGCD(num2, num1 % num2);\n}\n\nint num1 = 36;\nint num2 = 48;\nint gcd = findGCD(num1, num2);\nSystem.out.println(\"GCD of \" + num1 + \" and \" + num2 + \" is \" + gcd);",
        "most_similar_instructions": {
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.5405405405405405,
            "Can you provide a Java code snippet to find the length of the longest common prefix in an array of strings?\nString[] strs = {\"flower\", \"flow\", \"flight\"};": 0.5106382978723405,
            "Implement a Java method to calculate the GCD (Greatest Common Divisor) of two numbers using the Euclidean algorithm.\nint a = 24, b = 36;": 0.5,
            "Please provide a Java code snippet to find the maximum element in an array.\nint[] numbers = {5, 2, 9, 3, 7}": 0.42857142857142855,
            "Can you provide a Java code snippet to check if a given string is a palindrome?\nString word = \"level\";": 0.4,
            "Can you provide a Java code snippet that detects loops in a singly-linked list?": 0.3888888888888889,
            "Can you provide a Java code snippet to merge two sorted arrays into one sorted array?\nint[] array1 = {1, 3, 6, 9};\nint[] array2 = {2, 4, 5, 8};": 0.3673469387755102,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.3333333333333333,
            "Create a Java program that reads two integers from the user and determines their greatest common divisor (GCD) using the Euclidean algorithm.": 0.3255813953488372,
            "Implement a Java method to find the common elements between two arrays of integers.\n[2, 5, 8, 9, 3], [7, 2, 3, 5, 6]": 0.3111111111111111
        },
        "avg_similarity_score": 0.19086499041043856
    },
    {
        "instruction": "Can you write a Java code snippet to count the number of occurrences of a given element in an array?\narray: [1, 2, 1, 4, 1]\nelement: 1",
        "output": "public static int countOccurrences(int[] arr, int element) {\n    int count = 0;\n\n    for (int num : arr) {\n        if (num == element) {\n            count++;\n        }\n    }\n\n    return count;\n}\n\nint[] array = {1, 2, 1, 4, 1};\nint element = 1;\nint occurrences = countOccurrences(array, element);\nSystem.out.println(\"Number of occurrences: \" + occurrences);",
        "most_similar_instructions": {
            "Create a Java method that performs linear search to find the index of a given element in an array.\narray: [4, 2, 6, 8, 1], element: 6": 0.5454545454545454,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.49056603773584906,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.4814814814814815,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.4782608695652174,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.47058823529411764,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.47058823529411764,
            "Write a Java code snippet that finds the maximum element in an array.\nArray: {10, 5, 20, 15, 25}": 0.46808510638297873,
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.45833333333333337,
            "Please provide a Java code snippet to find the maximum element in an array.\nint[] numbers = {5, 2, 9, 3, 7}": 0.4489795918367347,
            "Can you provide a Java code snippet to find the length of the longest common prefix in an array of strings?\nString[] strs = {\"flower\", \"flow\", \"flight\"};": 0.4444444444444445
        },
        "avg_similarity_score": 0.24795812540108053
    },
    {
        "instruction": "Create a Java interface called Shape with a method to calculate the area of the shape. Implement this interface in classes Circle and Rectangle, each with its own implementation of the calculateArea() method.",
        "output": "public interface Shape {\n    double calculateArea();\n}\n\npublic class Circle implements Shape {\n    private double radius;\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    @Override\n    public double calculateArea() {\n        return Math.PI * radius * radius;\n    }\n}\n\npublic class Rectangle implements Shape {\n    private double width;\n    private double height;\n\n    public Rectangle(double width, double height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    @Override\n    public double calculateArea() {\n        return width * height;\n    }\n}\n\nCircle circle = new Circle(5);\ndouble circleArea = circle.calculateArea();\n\nRectangle rectangle = new Rectangle(4, 6);\ndouble rectangleArea = rectangle.calculateArea();",
        "most_similar_instructions": {
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.45614035087719296,
            "Design a Java class representing a shape with an abstract method to calculate its area. Create concrete classes Circle and Rectangle that inherit from the Shape class and implement the area calculation method.": 0.4242424242424243,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.37931034482758624,
            "How would you write a Java method to calculate the area of a circle given its radius?\ndouble radius = 5.0;": 0.37037037037037035,
            "Design a Java interface named Printable with an abstract method print(). Implement the interface in a class named Document and override the print() method to print \"Printing document...\".": 0.360655737704918,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.36,
            "Design a Java class to represent a circle. Include attributes for radius and methods to calculate the area and circumference of the circle.": 0.35714285714285715,
            "Write a Java program to calculate the area of a rectangle given its length and width.\nLength: 10\nWidth: 5": 0.339622641509434,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.3137254901960784,
            "Implement a Java class for a point with x and y coordinates and a method to calculate its distance from the origin.\nx = 3, y = 4": 0.3050847457627119
        },
        "avg_similarity_score": 0.20730744419258873
    },
    {
        "instruction": "Implement a Java class called BankAccount with methods to deposit, withdraw, and check the balance.",
        "output": "public class BankAccount {\n    private double balance;\n\n    public BankAccount() {\n        balance = 0;\n    }\n\n    public void deposit(double amount) {\n        balance += amount;\n    }\n\n    public void withdraw(double amount) {\n        if (amount > balance) {\n            System.out.println(\"Insufficient funds\");\n        } else {\n            balance -= amount;\n        }\n    }\n\n    public double getBalance() {\n        return balance;\n    }\n}\n\nBankAccount account = new BankAccount();\naccount.deposit(100);\n\naccount.withdraw(50);\n\ndouble balance = account.getBalance();\nSystem.out.println(\"Current balance: \" + balance);",
        "most_similar_instructions": {
            "Implement a Java class called \"BankAccount\" with attributes \"accountNumber\" and \"balance\" and methods for deposit and withdrawal.\naccountNumber: 123456, depositAmount: 100, withdrawalAmount: 50": 0.5263157894736841,
            "Design a Java class representing a simple bank account with methods for depositing, withdrawing, and checking the balance.": 0.4848484848484848,
            "Implement a Java class for a simple stack with push and pop methods.": 0.42857142857142855,
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.42424242424242425,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.4,
            "Implement a Java class called \"Person\" with attributes \"name\" and \"age\" and a method to check if the person is a minor (below 18 years old).\nname: \"John\", age: 20": 0.4,
            "Design a Java class for a student with methods to store and retrieve their name and age.\n\"John Doe\", 20": 0.4,
            "Design a Java class that represents a bank account, with attributes such as account number, account holder name, and balance. Implement methods to deposit and withdraw money from the account.": 0.4,
            "Create a Java class named \"BankAccount\" with attributes \"accountNumber\" (String) and \"balance\" (double). Implement getter and setter methods for these attributes, and a method named \"deposit\" that takes an amount and adds it to the balance.": 0.39215686274509803,
            "Create a Java class for a simple calculator with methods for square and square root.\nnumber=25": 0.37500000000000006
        },
        "avg_similarity_score": 0.22275726137097587
    },
    {
        "instruction": "Develop a Java function to find the minimum and maximum elements in an array of integers.\nint[] arr = {4, 2, 9, 1, 7};",
        "output": "public static void findMinMax(int[] arr) {\n    int min = Integer.MAX_VALUE;\n    int max = Integer.MIN_VALUE;\n\n    for (int num : arr) {\n        if (num < min) {\n            min = num;\n        }\n        if (num > max) {\n            max = num;\n        }\n    }\n\n    System.out.println(\"Minimum: \" + min);\n    System.out.println(\"Maximum: \" + max);\n}\n\nint[] arr = {4, 2, 9, 1, 7};\nfindMinMax(arr);",
        "most_similar_instructions": {
            "Please provide a Java code snippet to find the maximum element in an array.\nint[] numbers = {5, 2, 9, 3, 7}": 0.5909090909090909,
            "Implement a Java method that finds the minimum and maximum elements in an array without using in-built functions.\nArray: [5, 2, 9, 1, 7]": 0.5833333333333334,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5581395348837209,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.5333333333333332,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.5306122448979592,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5,
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.4888888888888889,
            "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}": 0.4888888888888889,
            "Implement a Java method that takes an array of integers and finds the maximum element without using any built-in functions.\nint[] arr = {4, 2, 9, 7, 5};": 0.47058823529411764,
            "Implement a Java method to find the common elements between two arrays of integers.\n[2, 5, 8, 9, 3], [7, 2, 3, 5, 6]": 0.4680851063829787
        },
        "avg_similarity_score": 0.24416439158889414
    },
    {
        "instruction": "Create a Java class called Person with properties such as name, age, and address. Include a method to change the address.",
        "output": "public class Person {\n    private String name;\n    private int age;\n    private String address;\n\n    public Person(String name, int age, String address) {\n        this.name = name;\n        this.age = age;\n        this.address = address;\n    }\n\n    public void changeAddress(String newAddress) {\n        address = newAddress;\n    }\n}\n\nPerson person = new Person(\"John\", 25, \"123 Main St\");\nperson.changeAddress(\"456 Elm St\");",
        "most_similar_instructions": {
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.5263157894736842,
            "Implement a Java class called \"Person\" with attributes \"name\" and \"age\" and a method to check if the person is a minor (below 18 years old).\nname: \"John\", age: 20": 0.5098039215686274,
            "Implement a Java class named \"Person\" with attributes for name and age. Add a method to compare the ages of two person objects.": 0.5,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.4888888888888889,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.4680851063829788,
            "Create a Java class named \"Person\" with the following attributes: name (String), age (int), and height (double). Implement a constructor to initialize these attributes and a method named \"displayInfo\" to print the values of these attributes.": 0.45614035087719296,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.4545454545454545,
            "Design a Java class representing a person with properties name and age. Provide getters and setters for these properties.": 0.45,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.43636363636363634,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.42553191489361697
        },
        "avg_similarity_score": 0.23136282722062673
    },
    {
        "instruction": "Create a Java class called Circle with a property for radius. Include a method to calculate the circumference of the circle.",
        "output": "public class Circle {\n    private double radius;\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public double calculateCircumference() {\n        return 2 * Math.PI * radius;\n    }\n}\n\nCircle circle = new Circle(4);\ndouble circumference = circle.calculateCircumference();\nSystem.out.println(\"Circumference: \" + circumference);",
        "most_similar_instructions": {
            "Design a Java class to represent a circle. Include attributes for radius and methods to calculate the area and circumference of the circle.": 0.5909090909090909,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.5333333333333333,
            "Create a Java class called Person with properties such as name, age, and address. Include a method to change the address.": 0.5238095238095238,
            "Create a Java interface called Shape with a method to calculate the area of the shape. Implement this interface in classes Circle and Rectangle, each with its own implementation of the calculateArea() method.": 0.48148148148148145,
            "Implement a Java class named \"Person\" with attributes for name and age. Add a method to compare the ages of two person objects.": 0.4545454545454545,
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.43636363636363634,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.43478260869565216,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.42105263157894735,
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.41025641025641024,
            "Create a Java class representing a Circle with private attributes for radius and color, and methods to get and set their values.\nCircle radius: 5.0, color: \"red\"": 0.40816326530612246
        },
        "avg_similarity_score": 0.25417865293880415
    },
    {
        "instruction": "Write a Java program to find and print the prime numbers between 1 and 100.",
        "output": "public class PrimeNumbers {\n    public static boolean isPrime(int num) {\n        if (num <= 1) {\n            return false;\n        }\n        for (int i = 2; i <= Math.sqrt(num); i++) {\n            if (num % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Prime numbers between 1 and 100:\");\n        for (int i = 1; i <= 100; i++) {\n            if (isPrime(i)) {\n                System.out.print(i + \" \");\n            }\n        }\n    }}",
        "most_similar_instructions": {
            "Write a Java program to generate and print the first n Fibonacci numbers.\nint n = 8;": 0.5806451612903225,
            "Write a Java program to find the sum of all the even numbers between 1 and a given number (inclusive) using a for loop.\nNumber: 10": 0.5365853658536585,
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.4571428571428572,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.4000000000000001,
            "Write a Java program to calculate the area of a rectangle given its length and width.\nLength: 10\nWidth: 5": 0.4,
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.4,
            "Write a Java program to find the length of the longest consecutive sequence of a given array of integers.\n[1, 9, 3, 10, 4, 20, 2]": 0.3902439024390244,
            "Create a Java program that generates a random number between 1 and 100 and asks the user to guess the number.": 0.3888888888888889,
            "Write a Java program to compute the sum and average of elements in an array.\nArray: [10, 20, 30, 40, 50]": 0.3888888888888889,
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.38709677419354843
        },
        "avg_similarity_score": 0.24057023494087507
    },
    {
        "instruction": "Implement a Java class to perform basic arithmetic operations (addition, subtraction, multiplication, division) on two numbers and display the result.\nNumbers: 10, 5",
        "output": "public class ArithmeticOperations {\n    public static int add(int a, int b) {\n        return a + b;\n    }\n\n    public static int subtract(int a, int b) {\n        return a - b;\n    }\n\n    public static int multiply(int a, int b) {\n        return a * b;\n    }\n\n    public static int divide(int a, int b) {\n        if (b == 0) {\n            throw new ArithmeticException(\"Cannot divide by zero.\");\n        }\n        return a / b;\n    }\n\n    public static void main(String[] args) {\n        int a = 10;\n        int b = 5;\n        System.out.println(\"Addition: \" + add(a, b));\n        System.out.println(\"Subtraction: \" + subtract(a, b));\n        System.out.println(\"Multiplication: \" + multiply(a, b));\n        System.out.println(\"Division: \" + divide(a, b));\n    }}",
        "most_similar_instructions": {
            "Create a Java class to implement a basic calculator with methods for addition, subtraction, multiplication, and division.": 0.45,
            "Implement a Java class called BankAccount with methods to deposit, withdraw, and check the balance.": 0.3684210526315789,
            "Write a Java program to find and print the prime numbers between 1 and 100.": 0.31578947368421056,
            "Write a Java program to generate and print the first n Fibonacci numbers.\nint n = 8;": 0.30769230769230765,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.30434782608695654,
            "Implement a Java method to calculate the GCD (Greatest Common Divisor) of two numbers using the Euclidean algorithm.\nint a = 24, b = 36;": 0.30434782608695654,
            "Write a Java class that computes the average of an array of integers and returns the result.\nArray: [5, 10, 15, 20, 25]": 0.30434782608695654,
            "Design a Java class for a circle with methods to calculate its area and circumference.\nradius = 4.5": 0.2926829268292683,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.2916666666666667,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.28571428571428575
        },
        "avg_similarity_score": 0.1946161608508728
    },
    {
        "instruction": "Develop a Java class to check if a given number is a palindrome or not (a number that remains the same when its digits are reversed).\nNumber: 12321",
        "output": "public class PalindromeChecker {\n    public static boolean isPalindrome(int num) {\n        int originalNum = num;\n        int reversedNum = 0;\n        while (num != 0) {\n            int digit = num % 10;\n            reversedNum = (reversedNum * 10) + digit;\n            num /= 10;\n        }\n        return originalNum == reversedNum;\n    }\n\n    public static void main(String[] args) {\n        int num = 12321;\n        boolean isPalindrome = isPalindrome(num);\n        System.out.println(\"Is palindrome: \" + isPalindrome);\n    }}",
        "most_similar_instructions": {
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.5454545454545454,
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.4782608695652174,
            "Implement a Java method that checks if a string is a palindrome or not. A palindrome is a word or phrase that is the same forwards and backwards.\ninput_string: \"madam\"": 0.44067796610169496,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.43478260869565216,
            "Can you provide a Java code snippet to check if a given string is a palindrome?\nString word = \"level\";": 0.425531914893617,
            "Write a Java method to check if a given string is a valid email address.": 0.41860465116279066,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.39999999999999997,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.37209302325581395,
            "Write a Java method that checks if a given year is a leap year or not. Return true if it is a leap year, false otherwise.\nint year = 2024;": 0.3508771929824561,
            "Create a Java function that determines if a given number is prime.": 0.35000000000000003
        },
        "avg_similarity_score": 0.1977619033365209
    },
    {
        "instruction": "Design a Java class to check if two strings are anagrams (contain the same characters in a different order) or not.\nStrings: \"listen\", \"silent\"",
        "output": "public class AnagramChecker {\n    public static boolean areAnagrams(String str1, String str2) {\n        if (str1.length() != str2.length()) {\n            return false;\n        }\n        int[] frequencyCount = new int[26];\n        for (int i = 0; i < str1.length(); i++) {\n            frequencyCount[str1.charAt(i) - 'a']++;\n            frequencyCount[str2.charAt(i) - 'a']--;\n        }\n        for (int count : frequencyCount) {\n            if (count != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        String str1 = \"listen\";\n        String str2 = \"silent\";\n        boolean areAnagrams = areAnagrams(str1, str2);\n        System.out.println(\"Are anagrams: \" + areAnagrams);\n    }}",
        "most_similar_instructions": {
            "Write a Java method that checks if two strings are anagrams of each other.\n\"listen\", \"silent\"": 0.45,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.4,
            "Create a Java program to check if a given year is a leap year or not.\nYear: 2024": 0.380952380952381,
            "Develop a Java class to check if a given number is a palindrome or not (a number that remains the same when its digits are reversed).\nNumber: 12321": 0.3461538461538462,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.3333333333333333,
            "Implement a Java class called BankAccount with methods to deposit, withdraw, and check the balance.": 0.3076923076923077,
            "Write a Java method to check if a given string is a valid email address.": 0.3076923076923077,
            "Implement a Java class called \"Person\" with attributes \"name\" and \"age\" and a method to check if the person is a minor (below 18 years old).\nname: \"John\", age: 20": 0.2962962962962963,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.2926829268292683,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.28571428571428575
        },
        "avg_similarity_score": 0.19645674035584765
    },
    {
        "instruction": "Write a Java method that checks if an array contains a specific element.\nint[] arr = {1, 2, 3, 4, 5}\n2",
        "output": "public static boolean containsElement(int[] arr, int element) {\n    for (int num : arr) {\n        if (num == element) {\n            return true;\n        }\n    }\n    return false;\n}\n\nint[] arr = {1, 2, 3, 4, 5};\nint element = 2;\nboolean containsElement = containsElement(arr, element);\nSystem.out.println(\"Does the array contain \" + element + \"? \" + containsElement);",
        "most_similar_instructions": {
            "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};": 0.5909090909090909,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.5652173913043478,
            "Write a Java method to remove duplicates from an array of integers and return the array with unique elements only.\nint[] arr = {1, 2, 3, 1, 2, 3, 4, 5};": 0.5098039215686274,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.4782608695652174,
            "Design a Java method that calculates the average of an array of doubles.\ndouble[] numbers = {1.5, 2.5, 3.5, 4.5, 5.5}": 0.4782608695652174,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.4782608695652174,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.4680851063829788,
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.46511627906976744,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.46511627906976744,
            "Create a Java method to remove duplicate elements from an array.\nArray: [1, 2, 3, 2, 4, 1]": 0.4615384615384615
        },
        "avg_similarity_score": 0.2613031351468271
    },
    {
        "instruction": "Create a Java class called \"Calculator\" with methods \"add\", \"subtract\", \"multiply\", and \"divide\" that perform the respective operations on two given numbers. Test the calculator by calling each method with appropriate arguments.",
        "output": "public class Calculator {\n    public static double add(double num1, double num2) {\n        return num1 + num2;\n    }\n\n    public static double subtract(double num1, double num2) {\n        return num1 - num2;\n    }\n\n    public static double multiply(double num1, double num2) {\n        return num1 * num2;\n    }\n\n    public static double divide(double num1, double num2) {\n        if (num2 != 0)\n            return num1 / num2;\n        else\n            throw new ArithmeticException(\"Cannot divide by zero!\");\n    }}\n\ndouble num1 = 10.0;\ndouble num2 = 5.0;\n\ndouble resultAdd = Calculator.add(num1, num2);\nSystem.out.println(\"Addition: \" + resultAdd);\n\ndouble resultSubtract = Calculator.subtract(num1, num2);\nSystem.out.println(\"Subtraction: \" + resultSubtract);\n\ndouble resultMultiply = Calculator.multiply(num1, num2);\nSystem.out.println(\"Multiplication: \" + resultMultiply);\n\ndouble resultDivide = Calculator.divide(num1, num2);\nSystem.out.println(\"Division: \" + resultDivide);",
        "most_similar_instructions": {
            "Implement a Java class called BankAccount with methods to deposit, withdraw, and check the balance.": 0.3404255319148936,
            "Implement a Java class to perform basic arithmetic operations (addition, subtraction, multiplication, division) on two numbers and display the result.\nNumbers: 10, 5": 0.3272727272727273,
            "Create a Java class for a simple calculator with methods for square and square root.\nnumber=25": 0.32653061224489793,
            "Create a Java class to implement a basic calculator with methods for addition, subtraction, multiplication, and division.": 0.32653061224489793,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.3157894736842105,
            "Create a Java class that calculates the square root of a given number using the Math.sqrt() function.\nNumber: 25": 0.3076923076923077,
            "Create a Java class called Circle with a property for radius. Include a method to calculate the circumference of the circle.": 0.3018867924528302,
            "Create a Java class called Person with properties such as name, age, and address. Include a method to change the address.": 0.3018867924528302,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.28571428571428575,
            "How can I create a Java class with a constructor and a method that prints a message?\nThe message to print is \"Hello, World!\"": 0.28571428571428575
        },
        "avg_similarity_score": 0.17912452817099758
    },
    {
        "instruction": "Write a Java program that takes two numbers as input and prints the maximum of the two numbers.\nint number1 = 5, number2 = 10;",
        "output": "int number1 = 5;\nint number2 = 10;\n\nint maxNumber = Math.max(number1, number2);\nSystem.out.println(\"Maximum number: \" + maxNumber);",
        "most_similar_instructions": {
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.46153846153846156,
            "Write a Java program that swaps the values of two variables without using a temporary variable.\nVariable 1: 5\nVariable 2: 10": 0.4444444444444445,
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.44000000000000006,
            "In Java, write a method that swaps the values of two variables.\nint a = 5;\nint b = 10;": 0.4390243902439025,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.41509433962264153,
            "Write a Java program to generate and print the first n Fibonacci numbers.\nint n = 8;": 0.41025641025641024,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.4090909090909091,
            "Write a Java program that takes in two integers from the user and finds their sum and product.\nEnter First Integer: 5\nEnter Second Integer: 10": 0.40816326530612246,
            "Design a Java method that takes a number as input and prints a multiplication table for that number up to 10.\n7": 0.4,
            "Conceive a Java program that takes an input string and outputs a string processed according to the Caesar cipher (shift of 3).": 0.4
        },
        "avg_similarity_score": 0.25736239249812737
    },
    {
        "instruction": "Create a Java class called \"Car\" with attributes \"brand\", \"model\", and \"year\" and a parameterized constructor. Instantiate an object of the \"Car\" class with the brand as \"Toyota\", model as \"Camry\", and year as 2020. Print the attributes of the car.",
        "output": "public class Car {\n    private String brand;\n    private String model;\n    private int year;\n\n    public Car(String brand, String model, int year) {\n        this.brand = brand;\n        this.model = model;\n        this.year = year;\n    }\n\n    public void printCarDetails() {\n        System.out.println(\"Brand: \" + brand);\n        System.out.println(\"Model: \" + model);\n        System.out.println(\"Year: \" + year);\n    }}\n\nCar car = new Car(\"Toyota\", \"Camry\", 2020);\ncar.printCarDetails();",
        "most_similar_instructions": {
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.4266666666666667,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.3636363636363636,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.35820895522388063,
            "Design a Java class for a car that stores the car's make, model, year, and color. It should have methods for displaying the car's information and updating the color.\nCar: Make - \"Toyota\", Model - \"Camry\", Year - 2022, Color - \"Black\"": 0.34567901234567905,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.3384615384615385,
            "Create a Java class named \"Person\" with the following attributes: name (String), age (int), and height (double). Implement a constructor to initialize these attributes and a method named \"displayInfo\" to print the values of these attributes.": 0.33766233766233766,
            "Create a Java class that represents a student with properties name and grade. Provide a parameterized constructor and a toString() method that returns a string representation of the student's information.": 0.3333333333333333,
            "Create a Java class called Circle with a property for radius. Include a method to calculate the circumference of the circle.": 0.3225806451612903,
            "Create a Java class named \"BankAccount\" with attributes \"accountNumber\" (String) and \"balance\" (double). Implement getter and setter methods for these attributes, and a method named \"deposit\" that takes an amount and adds it to the balance.": 0.3116883116883117,
            "Create a Java class that represents a book, with attributes such as the title, author, and publication year.": 0.3050847457627119
        },
        "avg_similarity_score": 0.1771506121872989
    },
    {
        "instruction": "Write a Java method that accepts a number as input and checks if it is prime. Return true if it is, false otherwise.\nint number = 13;",
        "output": "public class PrimeChecker {\n    public static boolean isPrime(int number) {\n        if (number <= 1)\n            return false;\n        for (int divisor = 2; divisor <= Math.sqrt(number); divisor++) {\n            if (number % divisor == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public static void main(String[] args) {\n        int number = 13;\n        boolean isPrime = isPrime(number);\n        System.out.println(\"Is Prime: \" + isPrime);\n    }}",
        "most_similar_instructions": {
            "Write a Java method that checks if a given year is a leap year or not. Return true if it is a leap year, false otherwise.\nint year = 2024;": 0.5818181818181819,
            "Write a Java method that takes an integer as input and determines if it is prime or not.": 0.5454545454545455,
            "Implement a Java method that takes a string as input and returns true if it is a palindrome (reads the same forwards and backwards), false otherwise.\nString input = \"level\";": 0.509090909090909,
            "Design a Java method that takes a number as input and prints a multiplication table for that number up to 10.\n7": 0.41666666666666663,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.3902439024390244,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.380952380952381,
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.3773584905660377,
            "Write a Java code snippet that checks if a number is a perfect square.\nint num = 16": 0.372093023255814,
            "Create a Java function that determines if a given number is prime.": 0.3684210526315789,
            "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};": 0.36734693877551017
        },
        "avg_similarity_score": 0.20716010283729577
    },
    {
        "instruction": "Create a Java class called \"Person\" with attributes \"name\" and \"age\" and a parameterized constructor. Override the \"toString()\" method to return a string representation of the person object. Instantiate an object of the \"Person\" class with the name as \"John\" and age as 25. Print the person object.",
        "output": "public class Person {\n    private String name;\n    private int age;\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    @Override\n    public String toString() {\n        return \"Name: \" + name + \", Age: \" + age;\n    }}\n\nPerson person = new Person(\"John\", 25);\nSystem.out.println(person);",
        "most_similar_instructions": {
            "Create a Java class called \"Car\" with attributes \"brand\", \"model\", and \"year\" and a parameterized constructor. Instantiate an object of the \"Car\" class with the brand as \"Toyota\", model as \"Camry\", and year as 2020. Print the attributes of the car.": 0.5617977528089888,
            "Implement a Java class called \"Person\" with attributes \"name\" and \"age\" and a method to check if the person is a minor (below 18 years old).\nname: \"John\", age: 20": 0.4871794871794872,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.4594594594594595,
            "Create a Java class that represents a student with properties name and grade. Provide a parameterized constructor and a toString() method that returns a string representation of the student's information.": 0.430379746835443,
            "Implement a Java class named \"Person\" with attributes for name and age. Add a method to compare the ages of two person objects.": 0.4225352112676057,
            "Create a Java class called Person with properties such as name, age, and address. Include a method to change the address.": 0.4057971014492754,
            "Create a Java class named \"Person\" with the following attributes: name (String), age (int), and height (double). Implement a constructor to initialize these attributes and a method named \"displayInfo\" to print the values of these attributes.": 0.380952380952381,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.3658536585365854,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.36111111111111105,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.35616438356164387
        },
        "avg_similarity_score": 0.19603187142326078
    },
    {
        "instruction": "Write a Java method that accepts two strings as input and concatenates them together with a space in between. Return the concatenated string.\nString string1 = \"Hello\";\nString string2 = \"world\";",
        "output": "public class StringConcatenator {\n    public static String concatenateStrings(String string1, String string2) {\n        return string1 + \" \" + string2;\n    }\n\n    public static void main(String[] args) {\n        String string1 = \"Hello\";\n        String string2 = \"world\";\n        String concatenatedString = concatenateStrings(string1, string2);\n        System.out.println(\"Concatenated string: \" + concatenatedString);\n    }}",
        "most_similar_instructions": {
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.4642857142857143,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.4489795918367347,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.3902439024390244,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.3829787234042554,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.37735849056603776,
            "Create a Java method that takes an array of strings as input and returns the longest string in the array.\n[\"cat\", \"dog\", \"elephant\", \"lion\"]": 0.37735849056603776,
            "Write a Java program to reverse a string using recursion.\nString input = \"Hello, world!\"": 0.37209302325581395,
            "Write a Java method that accepts a number as input and checks if it is prime. Return true if it is, false otherwise.\nint number = 13;": 0.3636363636363637,
            "Design a Java method that takes an array of strings as input and returns the count of strings that start with a vowel.\n[\"apple\", \"banana\", \"orange\"]": 0.3636363636363637,
            "Create a Java method that converts a string to title case (capitalizing the first letter of each word).\nString: \"hello, world!\"": 0.36000000000000004
        },
        "avg_similarity_score": 0.20453418354935893
    },
    {
        "instruction": "Write a Java method that prints the Pascal's triangle up to a given number of rows.\nrows = 5",
        "output": "public class PascalTriangle {\n    public static void main(String[] args) {\n        int rows = 5;\n        System.out.println(\"Pascal's Triangle:\");\n        int[][] triangle = generatePascalTriangle(rows);\n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j <= i; j++) {\n                System.out.print(triangle[i][j] + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static int[][] generatePascalTriangle(int rows) {\n        int[][] triangle = new int[rows][];\n        for (int i = 0; i < rows; i++) {\n            triangle[i] = new int[i+1];\n            triangle[i][0] = 1;\n            triangle[i][i] = 1;\n            for (int j = 1; j < i; j++) {\n                triangle[i][j] = triangle[i-1][j-1] + triangle[i-1][j];\n            }\n        }\n        return triangle;\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.5128205128205129,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.5,
            "Create a Java method that finds the largest prime factor of a given number.\nNumber: 24": 0.45714285714285713,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.4444444444444444,
            "Write a Java program to check if a given number is positive, negative, or zero.\nint num = -5;": 0.43243243243243246,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.42857142857142855,
            "Create a Java program that generates the Fibonacci sequence up to a given number. Take the input number as a command-line argument.": 0.42857142857142855,
            "Implement a Java method that finds the nth Fibonacci number using recursion.\nint n = 5;": 0.4117647058823529,
            "Write a Java method to check if a given string is a valid email address.": 0.4117647058823529,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.4117647058823529
        },
        "avg_similarity_score": 0.27170790879137163
    },
    {
        "instruction": "Create a Java method that calculates the sum of two matrices.\nmatrix1 = {{1, 2}, {3, 4}}\nmatrix2 = {{5, 6}, {7, 8}}",
        "output": "public class MatrixAddition {\n    public static void main(String[] args) {\n        int[][] matrix1 = {{1, 2}, {3, 4}};\n        int[][] matrix2 = {{5, 6}, {7, 8}};\n        int[][] sumMatrix = addMatrices(matrix1, matrix2);\n        System.out.println(\"Sum of matrices:\");\n        for (int[] row : sumMatrix) {\n            for (int element : row) {\n                System.out.print(element + \" \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static int[][] addMatrices(int[][] matrix1, int[][] matrix2) {\n        int rows = matrix1.length;\n        int columns = matrix1[0].length;\n        int[][] sumMatrix = new int[rows][columns];\n        for (int i = 0; i < rows; i++) {\n            for (int j = 0; j < columns; j++) {\n                sumMatrix[i][j] = matrix1[i][j] + matrix2[i][j];\n            }\n        }\n        return sumMatrix;\n    }\n}",
        "most_similar_instructions": {
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.5652173913043478,
            "Design a Java method that calculates the average of an array of doubles.\ndouble[] numbers = {1.5, 2.5, 3.5, 4.5, 5.5}": 0.5217391304347826,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.5098039215686274,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5,
            "Create a Java program that counts and prints the number of even and odd integers in an array.\n[1, 2, 3, 4, 5]": 0.5,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.4782608695652174,
            "Create a Java program that computes the average of an integer array and prints it out.\n[2, 4, 6, 8, 10]": 0.47619047619047616,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.46511627906976744,
            "Could you write a Java method that reverses the order of elements in an ArrayList without using any additional data structures?\nArrayList: [1, 2, 3, 4, 5]": 0.4583333333333333,
            "Create a Java function that calculates the average of a list of numbers.\nnumbers: [5, 8, 6, 4, 9]": 0.45
        },
        "avg_similarity_score": 0.2584244076854021
    },
    {
        "instruction": "Write a Java method that sorts a given array in ascending order.\narray = [4, 1, 5, 3, 2]",
        "output": "import java.util.Arrays;\n\npublic class ArraySorter {\n    public static void main(String[] args) {\n        int[] array = {4, 1, 5, 3, 2};\n        sortArray(array);\n        System.out.println(\"Sorted array: \" + Arrays.toString(array));\n    }\n\n    public static void sortArray(int[] array) {\n        Arrays.sort(array);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.5714285714285715,
            "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};": 0.5365853658536586,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4878048780487805,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.46511627906976744,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.46511627906976744,
            "Write a Java method that checks if an array contains a specific element.\nint[] arr = {1, 2, 3, 4, 5}\n2": 0.4615384615384615,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.45,
            "Create a Java method that performs linear search to find the index of a given element in an array.\narray: [4, 2, 6, 8, 1], element: 6": 0.4444444444444445,
            "Create a Java method to remove duplicate elements from an array.\nArray: [1, 2, 3, 2, 4, 1]": 0.4444444444444444,
            "Write a Java method that prints the Pascal's triangle up to a given number of rows.\nrows = 5": 0.43243243243243246
        },
        "avg_similarity_score": 0.26517363173417546
    },
    {
        "instruction": "Create a Java method that finds the maximum element in a given array.\narray = [5, 3, 7, 1, 9]",
        "output": "public class MaxElementFinder {\n    public static void main(String[] args) {\n        int[] array = {5, 3, 7, 1, 9};\n        int maxElement = findMaxElement(array);\n        System.out.println(\"Maximum element: \" + maxElement);\n    }\n\n    public static int findMaxElement(int[] array) {\n        int maxElement = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] > maxElement) {\n                maxElement = array[i];\n            }\n        }\n        return maxElement;\n    }\n}",
        "most_similar_instructions": {
            "Write a Java code snippet that finds the maximum element in an array.\nArray: {10, 5, 20, 15, 25}": 0.5789473684210527,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5641025641025641,
            "How would you write a Java method that finds the second largest element in an integer array?\nint[] arr = {5, 3, 9, 1, 7, 2};": 0.5454545454545454,
            "Implement a Java method that finds the minimum and maximum elements in an array without using in-built functions.\nArray: [5, 2, 9, 1, 7]": 0.5454545454545454,
            "Write a Java method to find the maximum element in a two-dimensional array.\nint[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};": 0.5454545454545454,
            "Write a Java method that sorts a given array in ascending order.\narray = [4, 1, 5, 3, 2]": 0.5405405405405405,
            "Create a Java method that finds the second largest number in an array of integers.\nint[] numbers = {7, 15, 3, 9, 10};": 0.5365853658536586,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5238095238095238,
            "Create a Java method that finds the largest prime factor of a given number.\nNumber: 24": 0.5142857142857142,
            "Create a Java program that finds the maximum value in an array of integers.\nArray: [25, 6, 10, 45, 32]": 0.5128205128205129
        },
        "avg_similarity_score": 0.2850629657835696
    },
    {
        "instruction": "Create a Java method that removes all duplicates from a given list of integers.\nlist = [7, 3, 5, 7, 2, 5, 3]",
        "output": "import java.util.ArrayList;\nimport java.util.HashSet;\nimport java.util.List;\n\npublic class DuplicateRemover {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>();\n        list.add(7);\n        list.add(3);\n        list.add(5);\n        list.add(7);\n        list.add(2);\n        list.add(5);\n        list.add(3);\n\n        removeDuplicates(list);\n        System.out.println(\"List after removing duplicates: \" + list);\n    }\n\n    public static void removeDuplicates(List<Integer> list) {\n        HashSet<Integer> set = new HashSet<>(list);\n        list.clear();\n        list.addAll(set);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java method that removes all duplicates from an ArrayList of strings.\n[\"apple\", \"banana\", \"orange\", \"apple\", \"pear\", \"banana\"]": 0.4878048780487805,
            "Write a Java program that removes all duplicate elements from an ArrayList of integers.\n[3, 4, 7, 4, 9, 7, 10]": 0.46511627906976744,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.4444444444444445,
            "Create a Java method that finds the maximum element in a given array.\narray = [5, 3, 7, 1, 9]": 0.43902439024390244,
            "Create a Python function to remove all occurrences of a specific element from a list.\nlist = [1, 2, 3, 2, 4, 2, 5]\nelement = 2": 0.4255319148936171,
            "Implement a Java method that counts the occurrences of a specific element in an array of integers.\n[1, 2, 3, 2, 4, 2, 5], 2": 0.4255319148936171,
            "In Java, write a method that reverses a list of integers.": 0.4242424242424242,
            "Create a Java method that calculates the sum of two matrices.\nmatrix1 = {{1, 2}, {3, 4}}\nmatrix2 = {{5, 6}, {7, 8}}": 0.4186046511627907,
            "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}": 0.4090909090909091,
            "Create a Java method that finds the second largest number in an array of integers.\nint[] numbers = {7, 15, 3, 9, 10};": 0.4090909090909091
        },
        "avg_similarity_score": 0.2503408083387844
    },
    {
        "instruction": "Implement a Java method that checks if a given string contains only digits.\ntext = \"1234\"",
        "output": "public class DigitChecker {\n    public static void main(String[] args) {\n        String text = \"1234\";\n        boolean containsOnlyDigits = checkIfContainsOnlyDigits(text);\n        System.out.println(\"String contains only digits: \" + containsOnlyDigits);\n    }\n\n    public static boolean checkIfContainsOnlyDigits(String text) {\n        for (int i = 0; i < text.length(); i++) {\n            if (!Character.isDigit(text.charAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n}",
        "most_similar_instructions": {
            "Create a Java program that checks if a string contains only numeric characters.\nString: \"12345\"": 0.6,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.5925925925925926,
            "Create a Java method that checks if a given string is a valid URL.\nurl: \"https://www.example.com\"": 0.5294117647058824,
            "Create a Java method that checks if a given string is an anagram of another string.\nString first = \"listen\";\nString second = \"silent\";": 0.4864864864864865,
            "Implement a Java method that reads a text file and returns the number of lines.": 0.4666666666666667,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.4666666666666667,
            "Write a Java method to check if a given string is a valid email address.": 0.4666666666666667,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.45161290322580644,
            "Create a Java function that determines if a given number is prime.": 0.4444444444444445,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.43749999999999994
        },
        "avg_similarity_score": 0.23561981342698174
    },
    {
        "instruction": "Create a Java method to convert a decimal number to binary format.\n12",
        "output": "public class DecimalToBinaryConverter {\n    public static void main(String[] args) {\n        int decimal = 12;\n        String binary = convertToBinary(decimal);\n        System.out.println(\"Binary: \" + binary);\n    }\n\n    public static String convertToBinary(int decimal) {\n        return Integer.toBinaryString(decimal);\n    }\n}",
        "most_similar_instructions": {
            "Implement a Java program that converts a decimal number to binary.\nint decimal = 10;": 0.5185185185185186,
            "Create a Java method that converts a temperature in Fahrenheit to Celsius.\ntemperature_fahrenheit: 72": 0.42857142857142855,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.42857142857142855,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.42857142857142855,
            "Implement a Java method to check if a given number is prime or not.\nNumber: 17": 0.41379310344827586,
            "Create a Java method that finds the largest prime factor of a given number.\nNumber: 24": 0.41379310344827586,
            "Provide a Java code snippet to convert a binary number represented as a string to its decimal equivalent.\nString binaryNumber = \"10101\";": 0.41176470588235287,
            "Create a Java method to calculate the sum of digits in a positive integer.\nint num = 12345;": 0.4000000000000001,
            "Create a Java function that determines if a given number is prime.": 0.4,
            "Create a Java method to count the number of occurrences of a specified character in a given string.": 0.3870967741935484
        },
        "avg_similarity_score": 0.2281936943486267
    },
    {
        "instruction": "Write a Java program to calculate the largest number among three given numbers.\nInput: 10, 25, 5",
        "output": "public class LargestNumberFinder {\n    public static void main(String[] args) {\n        int num1 = 10;\n        int num2 = 25;\n        int num3 = 5;\n        \n        int largest = num1;\n        \n        if (num2 > largest) {\n            largest = num2;\n        }\n        \n        if (num3 > largest) {\n            largest = num3;\n        }\n        \n        System.out.println(\"The largest number is: \" + largest);\n    }}",
        "most_similar_instructions": {
            "Write a Java program to calculate the area of a rectangle given its length and width.\nLength: 10\nWidth: 5": 0.5405405405405405,
            "How can I write a Java program to calculate the power of a number using recursion?\nint base = 2;\nint exponent = 5;": 0.46153846153846156,
            "Implement a Java program to calculate the factorial of a given positive integer.\n7": 0.45161290322580644,
            "Create a Java program to find the factorial of a number using recursion.\nNumber: 5": 0.43749999999999994,
            "Write a Java program to find and print the prime numbers between 1 and 100.": 0.43749999999999994,
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.4324324324324324,
            "Write a Java program to find the Fibonacci series up to a given number of terms.\nNumber of terms: 10": 0.4324324324324324,
            "Write a Java program to generate and print the first n Fibonacci numbers.\nint n = 8;": 0.42424242424242425,
            "How would you write a Java method to calculate the area of a circle given its radius?\ndouble radius = 5.0;": 0.42105263157894735,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.4000000000000001
        },
        "avg_similarity_score": 0.23687182697100267
    },
    {
        "instruction": "Create a Java method that calculates the sum of all even numbers from 1 to a given number (inclusive).\nInput: 10",
        "output": "public class EvenNumberSumCalculator {\n    public static void main(String[] args) {\n        int number = 10;\n\n        int sum = calculateEvenNumberSum(number);\n\n        System.out.println(\"The sum of even numbers from 1 to \" + number + \" is: \" + sum);\n    }\n\n    public static int calculateEvenNumberSum(int number) {\n        int sum = 0;\n        for (int i = 1; i <= number; i++) {\n            if (i % 2 == 0) {\n                sum += i;\n            }\n        }\n        return sum;\n    }}",
        "most_similar_instructions": {
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.6,
            "Write a Java program to find the sum of all the even numbers between 1 and a given number (inclusive) using a for loop.\nNumber: 10": 0.5957446808510638,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.5909090909090909,
            "Create a Java method that finds the largest prime factor of a given number.\nNumber: 24": 0.5405405405405405,
            "Write a Java program that calculates the factorial of a given number.\n6": 0.5294117647058824,
            "Design a Java program that calculates the sum of all multiples of 3 or 5 below a given number.\nint limit = 20;": 0.5116279069767442,
            "Create a Java class that calculates the square root of a given number using the Math.sqrt() function.\nNumber: 25": 0.4878048780487805,
            "Create a Java function that calculates the power of a given number using a recursive approach.\nbase: 2, exponent: 5": 0.4878048780487805,
            "Create a Java method that generates an array of n random numbers between a given range.\nn=5, range(10, 20)": 0.47619047619047616,
            "Create a Java method that calculates the sum of two matrices.\nmatrix1 = {{1, 2}, {3, 4}}\nmatrix2 = {{5, 6}, {7, 8}}": 0.47619047619047616
        },
        "avg_similarity_score": 0.2794768325465675
    },
    {
        "instruction": "How can I write a Java program that merges two sorted arrays into a single sorted array?\nInput: Array1 = [1, 3, 5], Array2 = [2, 4, 6]",
        "output": "public class SortedArrayMerger {\n    public static void main(String[] args) {\n        int[] array1 = {1, 3, 5};\n        int[] array2 = {2, 4, 6};\n\n        int[] mergedArray = mergeSortedArrays(array1, array2);\n\n        System.out.println(\"Merged sorted array: \" + Arrays.toString(mergedArray));\n    }\n\n    public static int[] mergeSortedArrays(int[] array1, int[] array2) {\n        int[] mergedArray = new int[array1.length + array2.length];\n        int i = 0, j = 0, k = 0;\n\n        while (i < array1.length && j < array2.length) {\n            if (array1[i] <= array2[j]) {\n                mergedArray[k++] = array1[i++];\n            } else {\n                mergedArray[k++] = array2[j++];\n            }\n        }\n\n        while (i < array1.length) {\n            mergedArray[k++] = array1[i++];\n        }\n\n        while (j < array2.length) {\n            mergedArray[k++] = array2[j++];\n        }\n\n        return mergedArray;\n    }}",
        "most_similar_instructions": {
            "Can you provide a Java code snippet to merge two sorted arrays into one sorted array?\nint[] array1 = {1, 3, 6, 9};\nint[] array2 = {2, 4, 5, 8};": 0.5555555555555555,
            "Can you write a Java method to concatenate two arrays of integers into a single array?\nint[] arr1 = {1, 2, 3}; int[] arr2 = {4, 5, 6};": 0.5384615384615384,
            "Implement a Java function that merges two sorted arrays into a single sorted array without using in-built functions.": 0.5333333333333333,
            "Write a Java program that swaps the values of two variables without using a temporary variable.\nVariable 1: 5\nVariable 2: 10": 0.41666666666666663,
            "How can I implement a binary search algorithm in Java to search for a specific element in a sorted array?\nint[] array = {1, 2, 3, 4, 5, 6, 7}; \nint target = 5;": 0.41379310344827586,
            "Write a Java method that sorts a given array in ascending order.\narray = [4, 1, 5, 3, 2]": 0.40909090909090906,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.40816326530612246,
            "How can I write a Java program that reads a text file and prints its content to the console?": 0.39999999999999997,
            "Write a Java method that checks if an array contains a specific element.\nint[] arr = {1, 2, 3, 4, 5}\n2": 0.3829787234042554,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.3829787234042554
        },
        "avg_similarity_score": 0.2157710322012732
    },
    {
        "instruction": "Create a Java program that finds and prints all prime numbers between two given numbers.\nInput: 1 and 20",
        "output": "public class PrimeNumberFinder {\n    public static void main(String[] args) {\n        int start = 1;\n        int end = 20;\n\n        System.out.println(\"Prime numbers between \" + start + \" and \" + end + \":\");\n        for (int number = start; number <= end; number++) {\n            if (checkPrime(number)) {\n                System.out.println(number);\n            }\n        }\n    }\n\n    public static boolean checkPrime(int number) {\n        if (number < 2) {\n            return false;\n        }\n        for (int i = 2; i <= Math.sqrt(number); i++) {\n            if (number % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }}",
        "most_similar_instructions": {
            "Write a Java program to find and print the prime numbers between 1 and 100.": 0.5294117647058824,
            "Write a Java program that finds the greatest common divisor (GCD) of two numbers.\n20, 30": 0.45714285714285713,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.42105263157894735,
            "Create a Java program that generates a random number between 1 and 100 and asks the user to guess the number.": 0.4,
            "Create a Java method that generates an array of n random numbers between a given range.\nn=5, range(10, 20)": 0.4,
            "Create a Java method that calculates the sum of all even numbers from 1 to a given number (inclusive).\nInput: 10": 0.4,
            "Create a Java method that finds the largest prime factor of a given number.\nNumber: 24": 0.39999999999999997,
            "Write a Java program that takes two numbers as input and prints the maximum of the two numbers.\nint number1 = 5, number2 = 10;": 0.380952380952381,
            "Create a Java program that counts and prints the number of even and odd integers in an array.\n[1, 2, 3, 4, 5]": 0.380952380952381,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.380952380952381
        },
        "avg_similarity_score": 0.225332136644474
    },
    {
        "instruction": "Implement a Java method that prints all even numbers between a given range (inclusive).\nRange: 1 to 10",
        "output": "public class EvenNumberPrinter {\n    public static void main(String[] args) {\n        int start = 1;\n        int end = 10;\n        printEvenNumbers(start, end);\n    }\n\n    public static void printEvenNumbers(int start, int end) {\n        for (int i = start; i <= end; i++) {\n            if (i % 2 == 0) {\n                System.out.println(i + \" is even.\");\n            }\n        }\n    }}",
        "most_similar_instructions": {
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.5945945945945946,
            "Create a Java method that calculates the sum of all even numbers from 1 to a given number (inclusive).\nInput: 10": 0.5641025641025642,
            "Create a Java method that generates an array of n random numbers between a given range.\nn=5, range(10, 20)": 0.5641025641025642,
            "Create a Java program that finds and prints all prime numbers between two given numbers.\nInput: 1 and 20": 0.4864864864864865,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.4666666666666666,
            "Write a Java program to find the sum of all the even numbers between 1 and a given number (inclusive) using a for loop.\nNumber: 10": 0.4545454545454546,
            "Implement a Java method to calculate the sum of all prime numbers less than or equal to a given number.\nint n = 10;": 0.4390243902439025,
            "Implement a Java program that converts a decimal number to binary.\nint decimal = 10;": 0.43750000000000006,
            "Create a Java program to generate a random integer between a given range of minimum and maximum (inclusive).\nint min = 1; int max = 10;": 0.42857142857142855,
            "Implement a Java method that checks if a given string contains only digits.\ntext = \"1234\"": 0.42424242424242425
        },
        "avg_similarity_score": 0.24296362214961437
    },
    {
        "instruction": "Implement a Java method that checks whether all elements in a given array are even numbers.\nArray: [2, 4, 6, 8, 10]",
        "output": "public class EvenNumberChecker {\n    public static void main(String[] args) {\n        int[] array = {2, 4, 6, 8, 10};\n        boolean allEven = checkAllEven(array);\n        if (allEven) {\n            System.out.println(\"All elements are even numbers.\");\n        } else {\n            System.out.println(\"Not all elements are even numbers.\");\n        }\n    }\n\n    public static boolean checkAllEven(int[] array) {\n        for (int num : array) {\n            if (num % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }}",
        "most_similar_instructions": {
            "Implement a Java method that finds the sum of all elements in an integer array.\nint[] arr = {5, 2, 8, 1, 10}": 0.5454545454545454,
            "Write a Java program that finds the sum of all elements in a given array of integers.\nArray: [1, 2, 3, 4, 5]": 0.5333333333333332,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.5,
            "Implement a Java method that prints all even numbers between a given range (inclusive).\nRange: 1 to 10": 0.45,
            "Write a Java method that sorts a given array in ascending order.\narray = [4, 1, 5, 3, 2]": 0.45,
            "Create a Java method that performs linear search to find the index of a given element in an array.\narray: [4, 2, 6, 8, 1], element: 6": 0.44897959183673464,
            "Implement a Java program that calculates the sum of all numbers in a given range.\nstart: 1, end: 10": 0.43902439024390244,
            "Create a Java method that finds the maximum element in a given array.\narray = [5, 3, 7, 1, 9]": 0.43902439024390244,
            "Implement a Java method that checks if a given string contains only digits.\ntext = \"1234\"": 0.43243243243243246,
            "Implement a Java method that takes a sorted array of integers and a target value, and returns the index position of the target value in the array using binary search.\nint[] numbers = {2, 4, 6, 8, 10};\nTarget: 6": 0.4262295081967213
        },
        "avg_similarity_score": 0.25012133363295785
    },
    {
        "instruction": "Create a Java class called \"Employee\" with instance variables name and salary, and a method to calculate the yearly salary.",
        "output": "public class Employee {\n    private String name;\n    private double salary;\n\n    public Employee(String name, double salary) {\n        this.name = name;\n        this.salary = salary;\n    }\n\n    public double calculateYearlySalary() {\n        return salary * 12;\n    }\n}}",
        "most_similar_instructions": {
            "Create a Java class called Person with properties such as name, age, and address. Include a method to change the address.": 0.5853658536585366,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.5454545454545454,
            "Create a Java class called Circle with a property for radius. Include a method to calculate the circumference of the circle.": 0.5365853658536585,
            "Implement a Java class called \"Person\" with attributes \"name\" and \"age\" and a method to check if the person is a minor (below 18 years old).\nname: \"John\", age: 20": 0.48,
            "Implement a Java class for a point with x and y coordinates and a method to calculate its distance from the origin.\nx = 3, y = 4": 0.47826086956521735,
            "Implement a Java class named \"Person\" with attributes for name and age. Add a method to compare the ages of two person objects.": 0.46511627906976744,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.4444444444444445,
            "Create a Java class that represents a student with properties name and grade. Provide a parameterized constructor and a toString() method that returns a string representation of the student's information.": 0.43137254901960786,
            "Create a Java class named \"Person\" with the following attributes: name (String), age (int), and height (double). Implement a constructor to initialize these attributes and a method named \"displayInfo\" to print the values of these attributes.": 0.42857142857142855,
            "How can I create a Java class with a constructor and a method that prints a message?\nThe message to print is \"Hello, World!\"": 0.4090909090909091
        },
        "avg_similarity_score": 0.23509447325745114
    },
    {
        "instruction": "Create a Java class representing a car with attributes such as make, model, year, and color. Include getter and setter methods for each attribute.\ncar_make: \"Toyota\", car_model: \"Camry\", car_year: 2022, car_color: \"Blue\"",
        "output": "public class Car {\n    private String make;\n    private String model;\n    private int year;\n    private String color;\n\n    public String getMake() {\n        return make;\n    }\n\n    public void setMake(String make) {\n        this.make = make;\n    }\n\n    public String getModel() {\n        return model;\n    }\n\n    public void setModel(String model) {\n        this.model = model;\n    }\n\n    public int getYear() {\n        return year;\n    }\n\n    public void setYear(int year) {\n        this.year = year;\n    }\n\n    public String getColor() {\n        return color;\n    }\n\n    public void setColor(String color) {\n        this.color = color;\n    }}\n\nCar car = new Car();\ncar.setMake(\"Toyota\");\ncar.setModel(\"Camry\");\ncar.setYear(2022);\ncar.setColor(\"Blue\");",
        "most_similar_instructions": {
            "Implement a Java class representing a car with attributes for its make, model, and year. Include a method to display the details of the car.\nCar make: \"Toyota\", Car model: \"Corolla\", Car year: 2022": 0.5714285714285715,
            "Design a Java class for a car that stores the car's make, model, year, and color. It should have methods for displaying the car's information and updating the color.\nCar: Make - \"Toyota\", Model - \"Camry\", Year - 2022, Color - \"Black\"": 0.5263157894736842,
            "Design a Java class that represents a car, with attributes such as make, model, year, and color. Implement a method to display the car's details.": 0.48387096774193544,
            "Create a Java class named \"Student\" with attributes \"name\" (String) and \"age\" (int). Implement getter and setter methods for these attributes.": 0.4210526315789474,
            "Create a Java class called \"Car\" with attributes \"brand\", \"model\", and \"year\" and a parameterized constructor. Instantiate an object of the \"Car\" class with the brand as \"Toyota\", model as \"Camry\", and year as 2020. Print the attributes of the car.": 0.4155844155844156,
            "Create a Java class that represents a book, with attributes such as the title, author, and publication year.": 0.40740740740740744,
            "Create a Java class representing a Circle with private attributes for radius and color, and methods to get and set their values.\nCircle radius: 5.0, color: \"red\"": 0.40625000000000006,
            "Implement a Java class that represents a book with attributes such as title, author, and publication year. Create a constructor and getter methods for each attribute.\nbook_title: \"Harry Potter and the Sorcerer's Stone\", book_author: \"J.K. Rowling\", book_year: 1997": 0.40506329113924044,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.3666666666666667,
            "Design a Java class representing a book with attributes for its title, author, and publication year. Include methods to get and set each attribute.\nBook title: \"To Kill a Mockingbird\", Book author: \"Harper Lee\", Book publication year: 1960": 0.35135135135135137
        },
        "avg_similarity_score": 0.1549765345872216
    },
    {
        "instruction": "How would you write a Java method to convert a string to uppercase?\ninput_string: \"hello, world!\"",
        "output": "public static String convertToUppercase(String input) {\n    return input.toUpperCase();\n}\n\nString input = \"hello, world!\";\nString uppercaseString = convertToUppercase(input);\nSystem.out.println(uppercaseString);",
        "most_similar_instructions": {
            "Write a Java program to reverse a string using recursion.\nString input = \"Hello, world!\"": 0.5806451612903226,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.5517241379310345,
            "How would you write a Java method to calculate the area of a circle given its radius?\ndouble radius = 5.0;": 0.4736842105263158,
            "Create a Java method that converts a string to title case (capitalizing the first letter of each word).\nString: \"hello, world!\"": 0.4736842105263158,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.47058823529411764,
            "Create a Java method to convert a decimal number to binary format.\n12": 0.4666666666666667,
            "Write a Java method to check if a given string is a valid email address.": 0.43749999999999994,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.4324324324324324,
            "Can you show me the code to reverse a string in Java?\nString str = \"Hello, World!\";": 0.42424242424242425,
            "Provide a Java code snippet to convert a binary number represented as a string to its decimal equivalent.\nString binaryNumber = \"10101\";": 0.42105263157894735
        },
        "avg_similarity_score": 0.22242747645597746
    },
    {
        "instruction": "Implement a Java class that represents a student with attributes such as name, age, and grade. Include getter and setter methods for each attribute.\nstudent_name: \"John Doe\", student_age: 18, student_grade: 12",
        "output": "public class Student {\n    private String name;\n    private int age;\n    private int grade;\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n\n    public int getGrade() {\n        return grade;\n    }\n\n    public void setGrade(int grade) {\n        this.grade = grade;\n    }}\n\nStudent student = new Student();\nstudent.setName(\"John Doe\");\nstudent.setAge(18);\nstudent.setGrade(12);",
        "most_similar_instructions": {
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.5517241379310345,
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.5490196078431372,
            "Design a Java class for a student that stores the student's name, age, and grade. It should have methods for displaying the student's information and updating the grade.\nStudent: Name - \"John Smith\", Age - 18, Grade - 12": 0.5,
            "Design a Java class representing a student with attributes for their name, age, and list of courses. Include methods to add and remove courses from the list.\nStudent name: \"John Doe\", Student age: 20, Course list: [Math, Science]": 0.5,
            "Create a Java class representing a car with attributes such as make, model, year, and color. Include getter and setter methods for each attribute.\ncar_make: \"Toyota\", car_model: \"Camry\", car_year: 2022, car_color: \"Blue\"": 0.4857142857142857,
            "Create a Java class named \"Student\" with attributes \"name\" (String) and \"age\" (int). Implement getter and setter methods for these attributes.": 0.4727272727272727,
            "Implement a Java class that represents a book with attributes such as title, author, and publication year. Create a constructor and getter methods for each attribute.\nbook_title: \"Harry Potter and the Sorcerer's Stone\", book_author: \"J.K. Rowling\", book_year: 1997": 0.44155844155844154,
            "Implement a Java class that represents a student with attributes like name, age, and grade. Add a method to calculate the average grade of a list of students.\nList<Student> students = [...list of students...]": 0.4411764705882353,
            "Design a Java class representing a person with attributes for their name, age, and address. Include methods to get and set each attribute.\nPerson name: \"Alice\", Person age: 25, Person address: \"123 Main St\"": 0.4411764705882353,
            "Create a Java class named \"Person\" with private attributes \"name\" and \"age\", and methods to get and set their values.\nPerson name: \"John Doe\", age: 25": 0.4333333333333333
        },
        "avg_similarity_score": 0.18188048695379516
    },
    {
        "instruction": "Write a Java program to reverse an array of integers.\nint[] array = {4, 6, 2, 9, 1}",
        "output": "public class ReverseArray {\n    public static int[] reverseArray(int[] array) {\n        int[] reversedArray = new int[array.length];\n\n        for (int i = 0; i < array.length; i++) {\n            reversedArray[i] = array[array.length - 1 - i];\n        }\n\n        return reversedArray;\n    }\n\n    public static void main(String[] args) {\n        int[] array = {4, 6, 2, 9, 1};\n        int[] reversedArray = reverseArray(array);\n        System.out.print(\"Reversed array: \");\n        for (int element : reversedArray) {\n            System.out.print(element + \" \");\n        }\n    }}",
        "most_similar_instructions": {
            "Develop a Java function to find the minimum and maximum elements in an array of integers.\nint[] arr = {4, 2, 9, 1, 7};": 0.6,
            "Write a Java program to reverse an array of integers in place, without using an additional array.\nArray: [1, 2, 3, 4, 5]": 0.6,
            "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}": 0.5641025641025642,
            "Write a Java method that calculates the average of elements in an array of integers.\nint[] numbers = {4, 6, 2, 8, 5};": 0.5641025641025642,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.5555555555555555,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.5365853658536585,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.5116279069767442,
            "Create a Java program that finds the maximum value in an array of integers.\nArray: [25, 6, 10, 45, 32]": 0.48648648648648646,
            "Write a Java program to find the largest and smallest element in an array.\narray: [7, 3, 9, 2, 5]": 0.48648648648648646,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.48648648648648646
        },
        "avg_similarity_score": 0.2526152192351543
    },
    {
        "instruction": "How would you write a Java class that represents a student and store their name and age as instance variables?",
        "output": "public class Student {\n    private String name;\n    private int age;\n\n    public Student(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n}",
        "most_similar_instructions": {
            "Design a Java class for a student with methods to store and retrieve their name and age.\n\"John Doe\", 20": 0.5,
            "Please generate a Java class that represents a student with properties such as name, age, and grade.": 0.48648648648648646,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.4324324324324324,
            "Implement a Java class that represents an animal with a name and an age, and create a getter and setter method for each attribute.": 0.4090909090909091,
            "How would you write a Java method to convert a string to uppercase?\ninput_string: \"hello, world!\"": 0.37837837837837834,
            "Create a Java class that represents a person with attributes like name, age, and occupation. Add methods to set and get these attributes.": 0.37209302325581395,
            "Implement a Java class that represents a student with attributes such as name, age, and grade. Include getter and setter methods for each attribute.\nstudent_name: \"John Doe\", student_age: 18, student_grade: 12": 0.37037037037037035,
            "Create a Java class that represents a book, with attributes such as the title, author, and publication year.": 0.36842105263157887,
            "Write a Java class that represents a rectangle with attributes for its length and width. Include methods to calculate its area and perimeter.\nRectangle length: 5, Rectangle width: 10": 0.3673469387755102,
            "Create a Java class that represents a rectangle with properties like length and width, and a method to calculate the area of the rectangle.": 0.3636363636363636
        },
        "avg_similarity_score": 0.21677466296340664
    },
    {
        "instruction": "Create a Java method that converts a binary string to decimal.\nString binary = \"101010\";",
        "output": "public class BinaryToDecimalConverter {\n    public static int convertToDecimal(String binary) {\n        int decimal = Integer.parseInt(binary, 2);\n        return decimal;\n    }\n\n    public static void main(String[] args) {\n        String binary = \"101010\";\n        int decimal = convertToDecimal(binary);\n        System.out.println(\"Decimal representation of '\" + binary + \"': \" + decimal);\n    }\n}",
        "most_similar_instructions": {
            "Create a Java method that converts a string to title case (capitalizing the first letter of each word).\nString: \"hello, world!\"": 0.5714285714285714,
            "Create a Java method that converts a temperature in Fahrenheit to Celsius.\ntemperature_fahrenheit: 72": 0.5517241379310344,
            "Implement a Java method that reverses a given string.\ninput_string: \"hello\"": 0.5384615384615384,
            "Create a Java method to convert a decimal number to binary format.\n12": 0.5185185185185186,
            "Implement a Java program that converts a decimal number to binary.\nint decimal = 10;": 0.5,
            "Create a Java program that checks if a string contains only numeric characters.\nString: \"12345\"": 0.4827586206896552,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.47058823529411764,
            "Provide a Java code snippet to convert a binary number represented as a string to its decimal equivalent.\nString binaryNumber = \"10101\";": 0.4571428571428571,
            "How would you write a Java method to convert a string to uppercase?\ninput_string: \"hello, world!\"": 0.45161290322580644,
            "Create a Java function that counts the number of vowels in a given string.\nstring: \"Hello World\"": 0.45161290322580644
        },
        "avg_similarity_score": 0.2485709898896814
    },
    {
        "instruction": "How would you write a Java method that checks if a given string is a valid credit card number?\nString creditCardNumber = \"45320151128336\";",
        "output": "public class CreditCardValidator {\n    public static boolean isValidCreditCard(String creditCardNumber) {\n        String regex = \"^\\\\d{13,19}$\";\n        return creditCardNumber.matches(regex);\n    }\n\n    public static void main(String[] args) {\n        String creditCardNumber = \"45320151128336\";\n        boolean validCreditCard = isValidCreditCard(creditCardNumber);\n        System.out.println(\"Is '\" + creditCardNumber + \"' a valid credit card number? \" + validCreditCard);\n    }\n}",
        "most_similar_instructions": {
            "Write a Java method to check if a given string is a valid email address.": 0.5945945945945945,
            "Create a Java method that checks if a given string is a valid URL.\nurl: \"https://www.example.com\"": 0.5853658536585366,
            "Write a Java program that checks whether a given string is a palindrome or not.\nstring: \"racecar\"": 0.5641025641025642,
            "How would you write a Java method that reverses the order of words in a given sentence?": 0.5128205128205129,
            "How would you write a Java method to convert a string to uppercase?\ninput_string: \"hello, world!\"": 0.5128205128205129,
            "Create a Java method that checks if a given string is an anagram of another string.\nString first = \"listen\";\nString second = \"silent\";": 0.5,
            "Write a Java program that checks if a given string is a palindrome sentence (ignoring spaces and punctuation).\nString sentence = \"A man, a plan, a canal, Panama!\"": 0.4897959183673469,
            "Can you provide a Java code snippet to check if a given string is a palindrome?\nString word = \"level\";": 0.4878048780487805,
            "Implement a Java method that checks if a given string contains only digits.\ntext = \"1234\"": 0.4864864864864865,
            "Create a Java method that checks if a number is even or odd.\nnumber: 7": 0.4864864864864865
        },
        "avg_similarity_score": 0.23145593292190073
    },
    {
        "instruction": "Create a Java class with a method that takes two integers as input and returns the sum of the two integers.\nint1 = 5, int2 = 10",
        "output": "public class SumCalculator {\n    public static int calculateSum(int int1, int int2) {\n        return int1 + int2;\n    }\n\n    public static void main(String[] args) {\n        int int1 = 5;\n        int int2 = 10;\n        int sum = calculateSum(int1, int2);\n        System.out.println(\"Sum: \" + sum);\n    }}",
        "most_similar_instructions": {
            "Write a Java program that takes two numbers as input and prints the maximum of the two numbers.\nint number1 = 5, number2 = 10;": 0.5833333333333334,
            "Create a method in Java that takes an array of integers as input and returns the sum of all even numbers in the array.\n[1, 2, 3, 4, 5, 6]": 0.5454545454545454,
            "Create a Java function that takes an ArrayList of integers and returns the sum of squares for all elements greater than 10.": 0.5106382978723404,
            "In Java, write a method that accepts an ArrayList of integers and returns the sum of all the elements.": 0.5,
            "Create a Java method that takes an array of strings as input and returns the longest string in the array.\n[\"cat\", \"dog\", \"elephant\", \"lion\"]": 0.4897959183673469,
            "Create a Java method that takes a string as input and returns the string in reverse order.\nString text = \"hello\";": 0.48888888888888893,
            "Design a Java method that takes an input string and returns a reversed version of the input string.": 0.46511627906976744,
            "Write a Java method that takes a sentence as input and returns the number of words in the sentence.\nString sentence = \"Hello World! This is a sentence.\"": 0.4615384615384615,
            "Create a Java method that takes a string input and counts the number of vowels (a, e, i, o, u) in the given string.": 0.4489795918367347,
            "Implement a Java class called \"Rectangle\" with attributes \"width\" and \"height\" and a method that calculates the area of the rectangle.\nwidth: 5, height: 8": 0.44
        },
        "avg_similarity_score": 0.2720155108860441
    },
    {
        "instruction": "How can I write a Java program to sort an array of integers in ascending order?\nint[] numbers = {5, 10, 3, 8, 2}",
        "output": "import java.util.Arrays;\n\npublic class ArraySorter {\n    public static void main(String[] args) {\n        int[] numbers = {5, 10, 3, 8, 2};\n        Arrays.sort(numbers);\n        System.out.println(\"Sorted array: \" + Arrays.toString(numbers));\n    }}",
        "most_similar_instructions": {
            "Write a Java program to remove duplicate elements from an array of integers.\nint[] arr = {5, 10, 2, 5, 8, 10, 3}": 0.5777777777777778,
            "Write a Java method that checks if an array of integers is sorted in ascending order.\nint[] numbers = {1, 3, 5, 7, 9};": 0.5652173913043478,
            "Implement a Java method to find the maximum element in an array of integers.\nArray: [5, 10, 3, 8, 2]": 0.5581395348837209,
            "Write a Java program that sorts an array of integers in ascending order using the bubble sort algorithm.\nArray: [5, 2, 8, 1, 3]": 0.5531914893617021,
            "Write a Java program to reverse an array of integers.\nint[] array = {4, 6, 2, 9, 1}": 0.55,
            "Implement a Java method to sort an array of integers in descending order.\nArray: [7, 2, 5, 1, 9]": 0.5238095238095238,
            "Write a Java program to sort an array of strings in alphabetical order.\nString[] names = {\"John\", \"Emma\", \"Adam\", \"Zoe\"};": 0.5238095238095238,
            "Write a Java program that finds the smallest and largest elements in an array of integers.\n[5, 8, 2, 10, 6]": 0.5,
            "Can you show me the code to sort an array of integers in ascending order using the bubble sort algorithm?\nint[] arr = {7, 3, 9, 1};": 0.4897959183673469,
            "Write a Java program to calculate the average of the elements in an array of doubles.\n[2.5, 3.8, 4.2, 1.7, 5.1]": 0.4897959183673469
        },
        "avg_similarity_score": 0.2430839060196955
    }
]